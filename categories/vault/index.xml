<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Vault on Che-Chia Chang</title>
    <link>https://chechia.net/categories/vault/</link>
    <description>Recent content in Vault on Che-Chia Chang</description>
    <image>
      <title>Che-Chia Chang</title>
      <url>https://chechia.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://chechia.net/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.7</generator>
    <language>en</language>
    <lastBuildDate>Tue, 10 Oct 2023 04:42:26 +0800</lastBuildDate>
    <atom:link href="https://chechia.net/categories/vault/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vault Workshop ??: Integrated Storage</title>
      <link>https://chechia.net/posts/2023-10-10-vault-workshop-integrated-storage/</link>
      <pubDate>Tue, 10 Oct 2023 04:42:26 +0800</pubDate>
      <guid>https://chechia.net/posts/2023-10-10-vault-workshop-integrated-storage/</guid>
      <description>&lt;p&gt;如果你希望追蹤最新的草稿，請見&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34;&gt;鐵人賽2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本 workshop 也接受網友的許願清單，&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10317378&#34;&gt;如果有興趣的題目可於第一篇底下留言&lt;/a&gt;，筆者會盡力實現，但不做任何保證&lt;/p&gt;
&lt;p&gt;整篇 Workshop 會使用的範例與原始碼，放在 &lt;a href=&#34;http://chechia.net/zh-hant/#projects&#34;&gt;Github Repository: vault-playground&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;day--integrated-backend&#34;&gt;Day ??: Integrated Backend&lt;/h1&gt;
&lt;p&gt;集成存儲&lt;/p&gt;
&lt;p&gt;Vault 支援多種存儲選項，用於持久存儲 Vault 資訊。自 Vault 1.4 起，提供了整合式存儲選項。此存儲後端不依賴於任何第三方系統，實現高可用性語義，支援企業複製功能，並提供備份/還原工作流。&lt;/p&gt;
&lt;p&gt;該選項將 Vault 的數據存儲在服務器的文件系統上，並使用共識協議將數據複製到集群中的每個服務器。有關整合式存儲內部的更多信息，請參閱整合式存儲內部文檔。此外，配置文檔可以幫助配置 Vault 以使用整合式存儲。&lt;/p&gt;
&lt;p&gt;以下各節將詳細介紹如何使用整合式存儲操作 Vault。&lt;/p&gt;
&lt;p&gt;服務器間通信
一旦節點加入到彼此，它們開始使用 Vault 的叢集端口進行 mTLS 通信。叢集端口的默認值為 8201。TLS 信息在加入時交換，並按一定的節奏進行輪換。&lt;/p&gt;
&lt;p&gt;整合式存儲的要求之一是必須設置 cluster_addr 配置選項。這允許 Vault 在加入時為節點 ID 分配地址。&lt;/p&gt;
&lt;p&gt;叢集成員資格
本節將概述如何引導和管理運行整合式存儲的 Vault 節點集群。&lt;/p&gt;
&lt;p&gt;整合式存儲在初始化過程中引導，並且結果是大小為 1 的集群。根據所需的部署大小，可以將節點加入到活動 Vault 節點中。&lt;/p&gt;
&lt;p&gt;加入節點
加入是將未初始化的 Vault 節點並使其成為現有集群成員的過程。為了將新節點驗證到集群，它必須使用相同的密封機制。如果使用自動解封，則必須配置新節點以使用與其嘗試加入的集群相同的 KMS 提供程序和密鑰。如果使用 Shamir 密封，則必須在加入過程完成之前為新節點提供解封密鑰。一旦節點成功加入，來自活動節點的數據就可以開始複制到它。一旦節點加入，則不能重新加入到不同的集群。&lt;/p&gt;
&lt;p&gt;您可以通過配置文件自動加入節點，也可以通過 API 手動加入（下面描述了這兩種方法）。在加入節點時，必須使用領導節點的 API 地址。我們建議在所有節點上設置 api_addr 配置選項，以使加入過程更簡單。&lt;/p&gt;
&lt;p&gt;retry_join 配置
此方法允許在配置文件中設置一個或多個目標領導節點。當未初始化的 Vault 服務器啟動時，它將嘗試加入每個已定義的潛在領導者，直到成功。當指定的領導者之一變為活動狀態時，此節點將成功加入。當使用 Shamir 密封時，已加入的節點仍然需要手動解封。當使用自動解封時，節點將能夠自動加入並自動解封。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vault Workshop 10: Deploy with Docker</title>
      <link>https://chechia.net/posts/2023-09-21-vault-workshop-deploy-on-kubernetes/</link>
      <pubDate>Thu, 14 Sep 2023 06:42:26 +0800</pubDate>
      <guid>https://chechia.net/posts/2023-09-21-vault-workshop-deploy-on-kubernetes/</guid>
      <description>&lt;p&gt;如果你希望追蹤最新的草稿，請見&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34;&gt;鐵人賽2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本 workshop 也接受網友的許願清單，&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10317378&#34;&gt;如果有興趣的題目可於第一篇底下留言&lt;/a&gt;，筆者會盡力實現，但不做任何保證&lt;/p&gt;
&lt;p&gt;整篇 Workshop 會使用的範例與原始碼，放在 &lt;a href=&#34;http://chechia.net/zh-hant/#projects&#34;&gt;Github Repository: vault-playground&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;day-09-deploy-with-docker&#34;&gt;Day 09: Deploy with Docker&lt;/h1&gt;
&lt;h3 id=&#34;local-with-docker&#34;&gt;Local with Docker&lt;/h3&gt;
&lt;h3 id=&#34;minikube&#34;&gt;minikube&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;r=https://api.github.com/repos/kubernetes/minikube/releases
curl -LO $(curl -s $r | grep -o &#39;http.*download/v.*beta.*/minikube-darwin-arm64&#39; | head -n1)
sudo install minikube-darwin-arm64 /usr/local/bin/minikube
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;如何選擇-vm-or-docker-or-kubernetes&#34;&gt;如何選擇 VM or Docker or Kubernetes&lt;/h3&gt;
&lt;p&gt;假議題&lt;/p&gt;
&lt;h3 id=&#34;chatgpt&#34;&gt;chatGPT&lt;/h3&gt;
&lt;p&gt;本段部分內容使用 chatGPT-3.5 翻譯
&lt;a href=&#34;https://developer.hashicorp.com/vault/docs/install&#34;&gt;https://developer.hashicorp.com/vault/docs/install&lt;/a&gt;
內容，並由筆者人工校驗&lt;/p&gt;
&lt;p&gt;base context&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;我希望你能充當一名繁體中文翻譯，拼寫修正者和改進者。我將用英文與程式語言與你對話，你將翻譯它，並以已糾正且改進的版本回答，以繁體中文表達。我希望你能用更美麗和優雅、高級的繁體中文詞語和句子替換我簡化的詞語和句子。保持意義不變。我只希望你回答糾正和改進，不要寫解釋。

很重要：不要使用敬語，翻譯結果中若出現&amp;quot;您&amp;quot;，請用&amp;quot;你&amp;quot;取代&amp;quot;您&amp;quot;。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;result correction&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;部分英文內容為專有名詞，產生的繁體中文翻譯結果中，這些名詞維持英文，不需要翻譯成中文：key，value，certificate，token，policy，policy rule，path，path-based，key rolling，audit，audit trail，plain text，key value，Consul，S3 bucket，Leasing，Renewal，binary，prefix，instance，metadata。

修正下列翻譯：將 &amp;quot;數據&amp;quot; 改為 &amp;quot;資料&amp;quot;，將 &amp;quot;數據庫&amp;quot; 改為 &amp;quot;資料庫&amp;quot;，將 &amp;quot;數據&amp;quot; 改為 &amp;quot;資料&amp;quot;，將 &amp;quot;訪問&amp;quot; 改為 &amp;quot;存取&amp;quot;，將 &amp;quot;源代碼&amp;quot; 改為 &amp;quot;原始碼&amp;quot;，將 &amp;quot;信息&amp;quot; 改為 &amp;quot;資訊&amp;quot;，將 &amp;quot;命令&amp;quot; 改為 &amp;quot;指令&amp;quot;，將 &amp;quot;禁用&amp;quot; 改為 &amp;quot;停用&amp;quot;，將 &amp;quot;默認&amp;quot; 改為 &amp;quot;預設&amp;quot;。
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Vault Workshop 09: Vault HA</title>
      <link>https://chechia.net/posts/2023-09-20-vault-workshop-ha-docker/</link>
      <pubDate>Thu, 14 Sep 2023 05:42:26 +0800</pubDate>
      <guid>https://chechia.net/posts/2023-09-20-vault-workshop-ha-docker/</guid>
      <description>&lt;p&gt;如果你希望追蹤最新的草稿，請見&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34;&gt;鐵人賽2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本 workshop 也接受網友的許願清單，&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10317378&#34;&gt;如果有興趣的題目可於第一篇底下留言&lt;/a&gt;，筆者會盡力實現，但不做任何保證&lt;/p&gt;
&lt;p&gt;整篇 Workshop 會使用的範例與原始碼，放在 &lt;a href=&#34;http://chechia.net/zh-hant/#projects&#34;&gt;Github Repository: vault-playground&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;day-09-deploy-with-docker&#34;&gt;Day 09: Deploy with Docker&lt;/h1&gt;
&lt;h3 id=&#34;vault-configuration&#34;&gt;Vault configuration&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;chatgpt&#34;&gt;chatGPT&lt;/h3&gt;
&lt;p&gt;本段部分內容使用 chatGPT-3.5 翻譯
&lt;a href=&#34;https://developer.hashicorp.com/vault/docs/install&#34;&gt;https://developer.hashicorp.com/vault/docs/install&lt;/a&gt;
內容，並由筆者人工校驗&lt;/p&gt;
&lt;p&gt;base context&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;我希望你能充當一名繁體中文翻譯，拼寫修正者和改進者。我將用英文與程式語言與你對話，你將翻譯它，並以已糾正且改進的版本回答，以繁體中文表達。我希望你能用更美麗和優雅、高級的繁體中文詞語和句子替換我簡化的詞語和句子。保持意義不變。我只希望你回答糾正和改進，不要寫解釋。

很重要：不要使用敬語，翻譯結果中若出現&amp;quot;您&amp;quot;，請用&amp;quot;你&amp;quot;取代&amp;quot;您&amp;quot;。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;result correction&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;部分英文內容為專有名詞，產生的繁體中文翻譯結果中，這些名詞維持英文，不需要翻譯成中文：key，value，certificate，token，policy，policy rule，path，path-based，key rolling，audit，audit trail，plain text，key value，Consul，S3 bucket，Leasing，Renewal，binary，prefix，instance，metadata。

修正下列翻譯：將 &amp;quot;數據&amp;quot; 改為 &amp;quot;資料&amp;quot;，將 &amp;quot;數據庫&amp;quot; 改為 &amp;quot;資料庫&amp;quot;，將 &amp;quot;數據&amp;quot; 改為 &amp;quot;資料&amp;quot;，將 &amp;quot;訪問&amp;quot; 改為 &amp;quot;存取&amp;quot;，將 &amp;quot;源代碼&amp;quot; 改為 &amp;quot;原始碼&amp;quot;，將 &amp;quot;信息&amp;quot; 改為 &amp;quot;資訊&amp;quot;，將 &amp;quot;命令&amp;quot; 改為 &amp;quot;指令&amp;quot;，將 &amp;quot;禁用&amp;quot; 改為 &amp;quot;停用&amp;quot;，將 &amp;quot;默認&amp;quot; 改為 &amp;quot;預設&amp;quot;。
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Vault Workshop 08: Vault in Docker and Initialization</title>
      <link>https://chechia.net/posts/2023-09-19-vault-workshop-docker-and-initialization/</link>
      <pubDate>Thu, 14 Sep 2023 04:42:26 +0800</pubDate>
      <guid>https://chechia.net/posts/2023-09-19-vault-workshop-docker-and-initialization/</guid>
      <description>&lt;p&gt;如果你希望追蹤最新的草稿，請見&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34;&gt;鐵人賽2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本 workshop 也接受網友的許願清單，&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10317378&#34;&gt;如果有興趣的題目可於第一篇底下留言&lt;/a&gt;，筆者會盡力實現，但不做任何保證&lt;/p&gt;
&lt;p&gt;整篇 Workshop 會使用的範例與原始碼，放在 &lt;a href=&#34;http://chechia.net/zh-hant/#projects&#34;&gt;Github Repository: vault-playground&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;day-08-vault-in-docker-and-initialization&#34;&gt;Day 08: Vault in Docker and Initialization&lt;/h1&gt;
&lt;h3 id=&#34;vault-in-container&#34;&gt;Vault in container&lt;/h3&gt;
&lt;p&gt;前幾天我們使用 vault dev Server 來啟用測試用的 Vault server。&lt;/p&gt;
&lt;p&gt;在 production 環境我們不會使用 dev Server。Vault 提供許多安裝方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以使用 binary 直接安裝在VM上&lt;/li&gt;
&lt;li&gt;也可以透過 hashicorp/vault official docker image，在container 環境中執行&lt;/li&gt;
&lt;li&gt;或是使用 hashicorp official helm chart，安裝在kuberntes上&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;使用範例-repository&#34;&gt;使用範例 repository&lt;/h3&gt;
&lt;p&gt;你可以使用筆者準備的範例 repository &lt;a href=&#34;https://github.com/chechiachang/vault-playground&#34;&gt;https://github.com/chechiachang/vault-playground&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:chechiachang/vault-playground.git

cd deploy/00-docker-dev/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;你可以使用下列指令啟動 vault in docker&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;並使用 -v flag 來掛載 ./config/ volume 到 container 中的 /vault/config.d/&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --cap-add=IPC_LOCK \
  --volume ./vault/config/:/vault/config.d \
  --volume ./vault/file/:/vault/file \
  --volume ./vault/logs/:/vault/logs \
  -p 8200:8200 \
  --name vault_1 \
  -d \
  hashicorp/vault:1.14.3 \
  vault server -config=/vault/config.d/vault.hcl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然後使用 docker logs 指令檢視 vault server log&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vault Workshop 07: Policy &amp; approle</title>
      <link>https://chechia.net/posts/2023-09-18-vault-workshop-policy-and-approle/</link>
      <pubDate>Thu, 14 Sep 2023 03:42:26 +0800</pubDate>
      <guid>https://chechia.net/posts/2023-09-18-vault-workshop-policy-and-approle/</guid>
      <description>&lt;p&gt;如果你希望追蹤最新的草稿，請見&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34;&gt;鐵人賽2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本 workshop 也接受網友的許願清單，&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10317378&#34;&gt;如果有興趣的題目可於第一篇底下留言&lt;/a&gt;，筆者會盡力實現，但不做任何保證&lt;/p&gt;
&lt;p&gt;整篇 Workshop 會使用的範例與原始碼，放在 &lt;a href=&#34;http://chechia.net/zh-hant/#projects&#34;&gt;Github Repository: vault-playground&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;day-07-policy--approle&#34;&gt;Day 07: Policy &amp;amp; Approle&lt;/h1&gt;
&lt;p&gt;在 Vault 中，策略（Policies）控制著使用者可以訪問的資源。在上一篇身份驗證中，你已經學到了身份驗證方法(authentication method)。而這一節是關於授權(Authorization)，也就是合法的用戶登入後，應該能夠取得怎樣的權限。&lt;/p&gt;
&lt;p&gt;在身份驗證方面，Vault 提供了多種啟用和使用的選項或方法。Vault 在授權和 policy 方面也使用相同的設計。所有身份驗證方法都將登入者的身份 map 回與 Vault 配置的核心 policy。&lt;/p&gt;
&lt;h3 id=&#34;準備環境&#34;&gt;準備環境&lt;/h3&gt;
&lt;p&gt;在 &lt;a href=&#34;https://developer.hashicorp.com/vault/tutorials/getting-started/getting-started-policies&#34;&gt;vault 官方網站文件&lt;/a&gt;中，Hashicorp 官方準備了 &lt;a href=&#34;https://instruqt.com/&#34;&gt;https://instruqt.com/&lt;/a&gt;的 session lab&lt;/p&gt;
&lt;p&gt;筆者個人覺得 interactive lab 的 browser tab 很難用，也不喜歡 Terminal session 連 remote VM 的延遲，以下內容還是會使用 local dev Server 說明。&lt;/p&gt;
&lt;p&gt;觀眾們可以自己斟酌使用。&lt;/p&gt;
&lt;h3 id=&#34;policy-格式&#34;&gt;Policy 格式&lt;/h3&gt;
&lt;p&gt;策略（Policies）是以HCL撰寫的，但也兼容JSON格式。以下是一個範例策略：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;# Dev servers have version 2 of KV secrets engine mounted by default, so will
# need these paths to grant permissions:
path &amp;quot;secret/data/*&amp;quot; {
  capabilities = [&amp;quot;create&amp;quot;, &amp;quot;update&amp;quot;]
}

path &amp;quot;secret/data/foo&amp;quot; {
  capabilities = [&amp;quot;read&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這個範例 policy 授予了對 KV v2 秘密管理（secrets engine）的資源的能力。如果你對於與這個秘密管理引擎相關的路徑不熟悉，可以查閱該秘密管理引擎文件中的 &lt;a href=&#34;https://developer.hashicorp.com/vault/docs/secrets/kv/kv-v2#acl-rules&#34;&gt;ACL 規則&lt;/a&gt;部分。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vault Workshop 06: Github Auth method</title>
      <link>https://chechia.net/posts/2023-09-17-vault-workshop-authentication-github/</link>
      <pubDate>Thu, 14 Sep 2023 02:42:26 +0800</pubDate>
      <guid>https://chechia.net/posts/2023-09-17-vault-workshop-authentication-github/</guid>
      <description>&lt;p&gt;如果你希望追蹤最新的草稿，請見&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34;&gt;鐵人賽2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本 workshop 也接受網友的許願清單，&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10317378&#34;&gt;如果有興趣的題目可於第一篇底下留言&lt;/a&gt;，筆者會盡力實現，但不做任何保證&lt;/p&gt;
&lt;p&gt;整篇 Workshop 會使用的範例與原始碼，放在 &lt;a href=&#34;http://chechia.net/zh-hant/#projects&#34;&gt;Github Repository: vault-playground&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;day-06github-auth-method&#34;&gt;Day 06：Github auth method&lt;/h1&gt;
&lt;h3 id=&#34;不需要使用-root-token-的-auth-method-github&#34;&gt;不需要使用 root token 的 auth method: github&lt;/h3&gt;
&lt;p&gt;Vault 支援用於人員使用者的身份驗證方法。GitHub 身份驗證，使用戶可以通過提供他們的 GitHub 憑證來驗證 Vault，並收到一個 Vault token。&lt;/p&gt;
&lt;p&gt;簡單來說，github organization &lt;a href=&#34;https://github.com/chechia-net&#34;&gt;chechia-net&lt;/a&gt;，可以設定適當的權限給成員 chechiachang，讓 chechiachang 可以透過 github 取得有權限的 token。&lt;/p&gt;
&lt;p&gt;注意&lt;/p&gt;
&lt;p&gt;在練習中所描述的這種身份驗證方法，需要你擁有 GitHub、屬於 GitHub org 中的一個 team ，並生成了具有 &lt;code&gt;read:org&lt;/code&gt; scope 的 GitHub personal access token。你可以於 github 創建一個 free plan 的 org，並設定一個 team，然後透過個人 Settings / Developer Settings 來產生一把具有 &lt;code&gt;read:org&lt;/code&gt; 權限的 personal access token&lt;/p&gt;
&lt;h3 id=&#34;啟用-github-auth-method&#34;&gt;啟用 github auth method&lt;/h3&gt;
&lt;p&gt;你可以使用下列指令，在 path=github/ 下啟用 GitHub 身份驗證方法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vault Workshop 05: Authentication</title>
      <link>https://chechia.net/posts/2023-09-16-vault-workshop-authentication/</link>
      <pubDate>Thu, 14 Sep 2023 01:42:26 +0800</pubDate>
      <guid>https://chechia.net/posts/2023-09-16-vault-workshop-authentication/</guid>
      <description>&lt;p&gt;如果你希望追蹤最新的草稿，請見&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34;&gt;鐵人賽2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本 workshop 也接受網友的許願清單，&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10317378&#34;&gt;如果有興趣的題目可於第一篇底下留言&lt;/a&gt;，筆者會盡力實現，但不做任何保證&lt;/p&gt;
&lt;p&gt;整篇 Workshop 會使用的範例與原始碼，放在 &lt;a href=&#34;http://chechia.net/zh-hant/#projects&#34;&gt;Github Repository: vault-playground&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;day-05authentication&#34;&gt;Day 05：Authentication&lt;/h1&gt;
&lt;p&gt;在前面的文章中，你已經創建了第一個秘密，了解了秘密引擎，並在以開發模式啟動的 Vault 服務器中探索了動態秘密。&lt;/p&gt;
&lt;p&gt;接下來的內容中，我們將深入研究使用 Vault token 和 GitHub 憑證進行身份驗證。&lt;/p&gt;
&lt;h3 id=&#34;token-身份驗證&#34;&gt;Token 身份驗證&lt;/h3&gt;
&lt;p&gt;Token 身份驗證已自動啟用。當你啟動開發模式服務器時，輸出顯示了 Root token。Vault CLI 從 &lt;code&gt;$VAULT_TOKEN&lt;/code&gt; 環境變數中讀取 Root token。這個根 token 可以在 Vault 內執行任何操作，因為它被分配了 Root policy 權限。允許的權限中包含創建新的 token。&lt;/p&gt;
&lt;p&gt;現在，讓我們創建一個新的 token。&lt;/p&gt;
&lt;p&gt;啟動全新的 dev Vault Server&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vault server -dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;output，server log 回傳 dev 模式的警告&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory
and starts unsealed with a single unseal key. The root token is already
authenticated to the CLI, so you can immediately begin using Vault.

# 警告！已啟用開發模式！在此模式下，Vault完全運行在內存中，使用單個unseal key解封。
# root token已被CLI驗證，因此你可以立即開始使用Vault。

You may need to set the following environment variables:

    $ export VAULT_ADDR=&#39;http://127.0.0.1:8200&#39;

# 以下顯示了unseal key 和 root token，以防你想要封存/解封Vault，或重新進行身份驗證。

    The unseal key and root token are displayed below in case you want to
    seal/unseal the Vault or re-authenticate.

# dev 模式預設配置的 unseal key 與 root token
    Unseal Key: QDUAuY7Kltsc/3bVwUYF39u8aEFgWNRs/1D5yxFtim4=
    Root Token: hvs.J30e...0DJaN

# 開發模式絕不應在生產安裝中使用！
    Development mode should NOT be used in production installations!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;依據提示 export 需要的變數&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vault Workshop 04: Secret Engine KV V2</title>
      <link>https://chechia.net/posts/2023-09-15-vault-workshop-secret-engine-kv-v2/</link>
      <pubDate>Thu, 14 Sep 2023 00:42:26 +0800</pubDate>
      <guid>https://chechia.net/posts/2023-09-15-vault-workshop-secret-engine-kv-v2/</guid>
      <description>&lt;p&gt;如果你希望追蹤最新的草稿，請見&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34;&gt;鐵人賽2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本 workshop 也接受網友的許願清單，&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10317378&#34;&gt;如果有興趣的題目可於第一篇底下留言&lt;/a&gt;，筆者會盡力實現，但不做任何保證&lt;/p&gt;
&lt;p&gt;整篇 Workshop 會使用的範例與原始碼，放在 &lt;a href=&#34;http://chechia.net/zh-hant/#projects&#34;&gt;Github Repository: vault-playground&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;day-04secret-engine-kv-v2&#34;&gt;Day 04：Secret Engine KV V2&lt;/h1&gt;
&lt;p&gt;KV秘密引擎，用於在Vault的已配置物理Storage中，存儲任意秘密。&lt;/p&gt;
&lt;p&gt;key 名稱必須始終是字符串。如果你直接通過CLI編寫非字串 value，它們將被轉換為字串。但是，你可以通過從JSON文件中將key-value pair寫入Vault，或使用HTTP API來保留非字串 value。&lt;/p&gt;
&lt;p&gt;此秘密引擎遵照ACL policy中，創建(create)和更新(update)權限之間的設定。它還支持patch功能，用於表示部分更新(patch)，而更新功能(update)則表示完全覆蓋。&lt;/p&gt;
&lt;h3 id=&#34;設置&#34;&gt;設置&lt;/h3&gt;
&lt;p&gt;大多數秘密引擎必須在執行其功能之前事先配置。這些步驟通常由操作人員或配置管理工具完成。&lt;/p&gt;
&lt;p&gt;啟用v2 kv秘密引擎：&lt;/p&gt;
&lt;p&gt;啟動一個乾淨的本地的開發模式 Vault Server，全新的 Vault Server 包含底下預設啟用的引擎&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vault server -dev

export VAULT_ADDR=&#39;http://127.0.0.1:8200&#39;

vault secrets list

Path          Type         Accessor              Description
----          ----         --------              -----------
cubbyhole/    cubbyhole    cubbyhole_57a4ca51    per-token private secret storage
identity/     identity     identity_c2ecbd49     identity store
secret/       kv           kv_c41afde8           key/value secret storage
sys/          system       system_c063e514       system endpoints used for control, policy and debugging
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;你可以在指定的路徑下，啟用一個新的 v2 kv 秘密引擎。若不指定 -path 參數，則預設 path 為 type，也就是 path=kv。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vault Workshop 03: Secret Engine</title>
      <link>https://chechia.net/posts/2023-09-14-vault-workshop-secret-engine/</link>
      <pubDate>Wed, 13 Sep 2023 22:42:26 +0800</pubDate>
      <guid>https://chechia.net/posts/2023-09-14-vault-workshop-secret-engine/</guid>
      <description>&lt;p&gt;如果你希望追蹤最新的草稿，請見&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34;&gt;鐵人賽2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本 workshop 也接受網友的許願清單，&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10317378&#34;&gt;如果有興趣的題目可於第一篇底下留言&lt;/a&gt;，筆者會盡力實現，但不做任何保證&lt;/p&gt;
&lt;p&gt;整篇 Workshop 會使用的範例與原始碼，放在 &lt;a href=&#34;http://chechia.net/zh-hant/#projects&#34;&gt;Github Repository: vault-playground&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;day-03細探-secret-engine-秘密引擎&#34;&gt;Day 03：細探 Secret Engine 秘密引擎&lt;/h1&gt;
&lt;h3 id=&#34;什麼是秘密引擎&#34;&gt;什麼是秘密引擎？&lt;/h3&gt;
&lt;p&gt;秘密引擎是Vault的組件，用於存儲、生成或加密秘密。在前面的內容中，你使用了Key/Value v2 秘密引擎來存儲數據。一些秘密引擎，比如鍵/值秘密引擎，僅僅是用來存儲和讀取數據的。其他秘密引擎則連接到其他服務並根據需求生成動態憑證。還有一些秘密引擎提供加密作為服務。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://developer.hashicorp.com/_next/image?url=https%3A%2F%2Fcontent.hashicorp.com%2Fapi%2Fassets%3Fproduct%3Dtutorials%26version%3Dmain%26asset%3Dpublic%252Fimg%252Fvault%252Fvault-triangle.png%26width%3D1641%26height%3D973&amp;w=3840&amp;q=75&#34;&gt;&lt;/p&gt;
&lt;p&gt;前面的內容中，默認情況下，key/value v2 秘密引擎已啟用，並準備在 secret/ 下接收請求，因為我們在-dev 模式下啟動了Vault Server。&lt;/p&gt;
&lt;p&gt;在底下我們使用 kv v1 做簡單的範例。&lt;/p&gt;
&lt;h3 id=&#34;mount-path&#34;&gt;mount path&lt;/h3&gt;
&lt;p&gt;建議在使用 KV v2 秘密引擎時，使用可選的 -mount flag 語法，例如&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vault kv get -mount=secret foo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;請嘗試以下命令，這將導致錯誤：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vault kv put foo/bar a=b

Error making API request.

URL: GET http://127.0.0.1:8200/v1/sys/internal/ui/mounts/foo/bar
Code: 403. Errors:

* preflight capability check returned 403, please ensure client&#39;s policies grant access to path &amp;quot;foo/bar/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Path prefix 路徑前綴告訴 Vault 應該將流量 route 到哪個秘密引擎&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vault Workshop 02: Get Started</title>
      <link>https://chechia.net/posts/2023-09-13-vault-workshop-get-started/</link>
      <pubDate>Wed, 13 Sep 2023 21:42:26 +0800</pubDate>
      <guid>https://chechia.net/posts/2023-09-13-vault-workshop-get-started/</guid>
      <description>&lt;p&gt;如果你希望追蹤最新的草稿，請見&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34;&gt;鐵人賽2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本 workshop 也接受網友的許願清單，&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10317378&#34;&gt;如果有興趣的題目可於第一篇底下留言&lt;/a&gt;，筆者會盡力實現，但不做任何保證&lt;/p&gt;
&lt;h1 id=&#34;day-02-準備執行一個本地開發用途的-vault&#34;&gt;Day 02 準備：執行一個本地開發用途的 Vault&lt;/h1&gt;
&lt;p&gt;整篇 Workshop 會使用的範例與原始碼，放在 &lt;a href=&#34;http://chechia.net/zh-hant/#projects&#34;&gt;Github Repository: vault-playground&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;準備工作&#34;&gt;準備工作&lt;/h3&gt;
&lt;p&gt;在開始進行 Vault 30 天 workshop 之前，有一些準備工作需要完成：&lt;/p&gt;
&lt;p&gt;步驟1：下載 Vault Binary&lt;/p&gt;
&lt;p&gt;首先，你需要下載HashiCorp Vault的最新版本。你可以在HashiCorp的官方網站上找到Vault的下載鏈接。請確保下載適用於你操作系統的版本。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.hashicorp.com/vault/downloads&#34;&gt;https://developer.hashicorp.com/vault/downloads&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://releases.hashicorp.com/vault/1.14.3/vault_1.14.3_darwin_amd64.zip&#34;&gt;MacOS amd64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://releases.hashicorp.com/vault/1.14.3/vault_1.14.3_darwin_arm64.zip&#34;&gt;MacOS arm64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://releases.hashicorp.com/vault/1.14.3/vault_1.14.3_linux_amd64.zip&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;步驟2：安裝Vault&lt;/p&gt;
&lt;p&gt;下載完成後，根據你的操作系統進行安裝。對於大多數Linux和Unix系統，你c可以通過解壓縮壓縮文件來安裝Vault。將Vault Binary文件移至你的PATH中，以便在終端中輕鬆訪問&lt;/p&gt;
&lt;p&gt;筆者使用的是 Mac M1，使用以下指令進行安裝&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://releases.hashicorp.com/vault/1.14.3/vault_1.14.3_darwin_arm64.zip
unzip vault_1.14.3_darwin_arm64.zip

sudo mv vault /usr/local/bin/vault

Vault v1.14.3 (56debfa71653e72433345f23cd26276bc90629ce), built 2023-09-11T21:23:55Z
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;你不需要使用最新版本的 Vault 也可以完成這次 workshop&lt;/p&gt;
&lt;h3 id=&#34;啟動-vault-server&#34;&gt;啟動 Vault server&lt;/h3&gt;
&lt;p&gt;使用以下指令在本地啟動 Vault Server。請確保 Vault 伺服器已正確啟動，並且未出現錯誤消息。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vault server -dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用 -dev 選項可以啟動Vault的開發模式，該模式不需要身份驗證即可運行Vault。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vault Workshop 01: Introduction</title>
      <link>https://chechia.net/posts/2023-09-12-vault-workshop-introduction/</link>
      <pubDate>Tue, 12 Sep 2023 20:35:19 +0800</pubDate>
      <guid>https://chechia.net/posts/2023-09-12-vault-workshop-introduction/</guid>
      <description>&lt;p&gt;如果你希望追蹤最新的草稿，請見&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34;&gt;鐵人賽2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本 workshop 也接受網友的許願清單，&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10317378&#34;&gt;如果有興趣的題目可於第一篇底下留言&lt;/a&gt;，筆者會盡力實現，但不做任何保證&lt;/p&gt;
&lt;h1 id=&#34;day-01-前言從零開始的-hashicorp-vault-workshop&#34;&gt;Day 01 前言：從零開始的 Hashicorp Vault Workshop&lt;/h1&gt;
&lt;p&gt;從零開始 workshop 系列已經做了四年，內容包含 k8s, terraform, aws 等。&lt;/p&gt;
&lt;p&gt;深深覺得要學習一個工具，還是要動手做。&lt;/p&gt;
&lt;p&gt;所以有了 30 天手把手 workshop 系列文，讓有興趣接觸的朋友，能以相對低的門檻入門。&lt;/p&gt;
&lt;p&gt;關於內容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;無基礎的手把手的基礎教學&lt;/li&gt;
&lt;li&gt;完整的範例，提供原始程式碼，也提供 production 的經驗與範例&lt;/li&gt;
&lt;li&gt;官方最新文件繁中翻譯 (chatGPT based)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建議讀者務必跟著操作，不要只是看過&lt;/p&gt;
&lt;p&gt;其他文章 &lt;a href=&#34;https://chechia.net/&#34;&gt;https://chechia.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;過去的 Workshop&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2022/&#34;&gt;2022 鐵人賽: Terraform IaC Best Practice on AWS Cloud / 在 aws 公有雲上找 IaC 最佳實踐 (因故退賽)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ithelp.ithome.com.tw/users/20120327/ironman/4057&#34;&gt;2021 鐵人賽: Terraform Workshop - Infrastructure as Code for Public Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2020/&#34;&gt;2020 鐵人賽: Kubernetes X DevOps X 從零開始導入工具 X 需求分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2019/&#34;&gt;2019 鐵人賽: Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;預定內容與許願清單&#34;&gt;預定內容與許願清單&lt;/h1&gt;
&lt;p&gt;本 workshop 預計有底下內容&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hashicorp Comminity Presentation Vault Introduction</title>
      <link>https://chechia.net/posts/2023-05-10-hashicorp-comminity-presentation-vault-introduction/</link>
      <pubDate>Wed, 10 May 2023 12:19:02 +0800</pubDate>
      <guid>https://chechia.net/posts/2023-05-10-hashicorp-comminity-presentation-vault-introduction/</guid>
      <description>Article description.</description>
    </item>
  </channel>
</rss>
