<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops | Che-Chia Chang</title>
    <link>https://chechia.net/zh-hant/category/devops/</link>
      <atom:link href="https://chechia.net/zh-hant/category/devops/index.xml" rel="self" type="application/rss+xml" />
    <description>devops</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>zh-Hant</language><lastBuildDate>Sun, 01 Jun 2025 00:45:00 +0000</lastBuildDate>
    <image>
      <url>https://chechia.net/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>devops</title>
      <link>https://chechia.net/zh-hant/category/devops/</link>
    </image>
    
    <item>
      <title>Workshop: RAG打造企業AI知識庫：把一甲子功力傳給新人</title>
      <link>https://chechia.net/zh-hant/slides/2025-06-05-devops-rag-internal-ai/</link>
      <pubDate>Sun, 01 Jun 2025 00:45:00 +0000</pubDate>
      <guid>https://chechia.net/zh-hant/slides/2025-06-05-devops-rag-internal-ai/</guid>
      <description>&lt;h3 id=&#34;rag-workshop-行前通知基本需求&#34;&gt;RAG workshop 行前通知：基本需求&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;當天帶自己的電腦。當天建議自備手機網路&lt;/li&gt;
&lt;li&gt;選項1: 用電腦在 docker 運行開發環境&lt;/li&gt;
&lt;li&gt;選項2: 用電腦遠端連線講師提供的 VM，在遠端VM 中運行 docker 開發環境&lt;/li&gt;
&lt;li&gt;會使用 docker&lt;/li&gt;
&lt;li&gt;會使用 python 與 jupyter notebook&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h5 id=&#34;選項1-使用自己的電腦-&#34;&gt;選項1: 使用自己的電腦 💻&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;在 workshop 開始前，在自己的電腦上
&lt;ol&gt;
&lt;li&gt;安裝 &lt;a href=&#34;https://docs.docker.com/get-started/get-docker/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;git clone 教材&lt;/li&gt;
&lt;li&gt;啟動 docker 開發環境，下載 docker images&lt;/li&gt;
&lt;li&gt;安裝所需的 Python 套件&lt;/li&gt;
&lt;li&gt;開啟瀏覽器，連線到&lt;a href=&#34;http://localhost:8888&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost:8888&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/chechiachang/rag-workshop.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; rag-workshop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker compose up -d
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -it notebook pip install pandas openai qdrant_client tqdm tenacity wget tenacity unstructured markdown ragas sacrebleu langchain_qdrant langchain-openai langchain_openai langchain_community tiktoken ipywidgets
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;登入token&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;workshop1234!&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h5 id=&#34;選項2-使用遠端-vm&#34;&gt;選項2: 使用遠端 VM&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;有自己的電腦，當天建議自備手機網路，連線到遠端 VM&lt;/li&gt;
&lt;li&gt;提前註冊 tunnel 工具（沒有業配）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dashboard.ngrok.com/login&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ngrok&lt;/a&gt; 登入 Login -&amp;gt; 左手邊 Identity &amp;amp; Access -&amp;gt; Authtokens -&amp;gt; Add Tunnel authtoken -&amp;gt; 記在安全的地方&lt;/li&gt;
&lt;li&gt;也可以使用 &lt;a href=&#34;https://pinggy.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pinggy&lt;/a&gt;，但免費有限時&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;建議&#34;&gt;建議&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;優先使用個人電腦。會盡量提供免費 VM 名額，但依參與人數不保證現場有&lt;/li&gt;
&lt;li&gt;在家先試跑一遍，把 docker image 跟 pip 套件都下載好，現場要載很久&lt;/li&gt;
&lt;li&gt;試完後記得關掉 ngrok，以免用完每月的免費額度&lt;/li&gt;
&lt;li&gt;事先看完內容覺得太簡單可以不用來，但歡迎會後找我聊天ＸＤ&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;投影片與教材與完整程式碼放在網站上&#34;&gt;投影片與教材與完整程式碼放在網站上&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chechia.net&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://chechia.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chechia.net/zh-hant/slides/2025-06-05-devops-rag-internal-ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://chechia.net/zh-hant/slides/2025-06-05-devops-rag-internal-ai/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;📝 &lt;a href=&#34;https://github.com/chechiachang/chechiachang.github.io-src/blob/master/content/zh-hant/slides/2025-06-05-devops-rag-internal-ai/index.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github 投影片原始碼與講稿&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h5 id=&#34;以下是-rag-workshop-當天內容&#34;&gt;以下是 RAG Workshop 當天內容&lt;/h5&gt;
&lt;p&gt;可以先看，也可以當天再看&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://media.tenor.com/aRF-Uwyl0p8AAAAM/frozen2.gif&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;rag-workshop&#34;&gt;RAG Workshop&lt;/h3&gt;
&lt;hr&gt;
&lt;h3 id=&#34;關於我&#34;&gt;關於我&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Che Chia Chang&lt;/li&gt;
&lt;li&gt;SRE @ &lt;a href=&#34;https://www.cake.me/companies/maicoin/jobs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Maicoin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mvp.microsoft.com/zh-TW/MVP/profile/e407d0b9-5c01-eb11-a815-000d3a8ccaf5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Microsoft MVP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;個人部落格&lt;a href=&#34;https://chechia.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;chechia.net&lt;/a&gt; 投影片講稿，鐵人賽 (Terraform / Vault 手把手入門 / Etcd Workshop)&lt;/li&gt;
&lt;li&gt;📝 &lt;a href=&#34;https://github.com/chechiachang/chechiachang.github.io-src/blob/master/content/zh-hant/slides/2025-06-05-devops-rag-internal-ai/index.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;今天的投影片原始碼與講稿&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;rag-workshop-流程&#34;&gt;RAG Workshop 流程&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;10min - &lt;strong&gt;環境設定：確定參與者都有設定好開發環境&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;10min - 為什麼需要 RAG（Retrieval-Augmented Generation）&lt;/li&gt;
&lt;li&gt;10min - Notebook 2 Embedding 與向量數據庫&lt;/li&gt;
&lt;li&gt;10min - Notebook 3 Embedding Search&lt;/li&gt;
&lt;li&gt;10min - Notebook 4 DIY&lt;/li&gt;
&lt;li&gt;10min - Notebook 5 Evaluation&lt;/li&gt;
&lt;li&gt;10min - Notebook 6 k8s RAG QA&lt;/li&gt;
&lt;li&gt;20min - DIY + Q&amp;amp;A&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h5 id=&#34;選項1-使用自己的電腦&#34;&gt;選項1: 使用自己的電腦&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;有在家先試跑一遍，應該可以在本地存取 Notebook &lt;a href=&#34;http://localhost:8888&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost:8888&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;到 &lt;a href=&#34;https://workshop.chechia.net&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;workshop.chechia.net&lt;/a&gt; 取得 OpenAI Key&lt;/li&gt;
&lt;li&gt;可以試著跑 notebook 2-5&lt;/li&gt;
&lt;li&gt;忘記怎麼啟動，可以回到投影片最開始&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;notebook token: workshop1234!
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AZURE_OPENAI_API_KEY=&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AZURE_OPENAI_ENDPOINT=&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h5 id=&#34;選項2-使用遠端-vm-1&#34;&gt;選項2: 使用遠端 VM&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;至&lt;a href=&#34;https://workshop.chechia.net&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;workshop.chechia.net&lt;/a&gt; 領取一台 VM 並簽名&lt;/li&gt;
&lt;li&gt;googel sheet 左邊 url，開啟 bastion 連線&lt;/li&gt;
&lt;li&gt;Protocol: SSH，port 22，authentication type: password&lt;/li&gt;
&lt;li&gt;帳號密碼在&lt;a href=&#34;https://workshop.chechia.net&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;workshop.chechia.net&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh-hant/slides/2025-06-05-devops-rag-internal-ai/azure-bastion_hud0b002e70f9988d619375cc2291231bb_27220_8aa3d767b665df4f846c9f4ea3bf4e4f.webp 400w,
               /zh-hant/slides/2025-06-05-devops-rag-internal-ai/azure-bastion_hud0b002e70f9988d619375cc2291231bb_27220_03c55b28d75c2ab6499830cbb3b9c46e.webp 760w,
               /zh-hant/slides/2025-06-05-devops-rag-internal-ai/azure-bastion_hud0b002e70f9988d619375cc2291231bb_27220_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chechia.net/zh-hant/slides/2025-06-05-devops-rag-internal-ai/azure-bastion_hud0b002e70f9988d619375cc2291231bb_27220_8aa3d767b665df4f846c9f4ea3bf4e4f.webp&#34;
               width=&#34;359&#34;
               height=&#34;599&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;選項2-使用-ngrok-連線到-jupyter-notebook&#34;&gt;選項2: 使用 ngrok 連線到 jupyter notebook&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;進入 VM 後，修改下面 ngrok authtoken。指令一行一行貼上（右鍵）到 bastion 中執行&lt;/li&gt;
&lt;li&gt;透過 &lt;a href=&#34;https://4d11-52-230-24-207.ngrok-free.app/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://4d11-52-230-24-207.ngrok-free.app/&lt;/a&gt; 就可以使用 notebook (每個人不一樣)&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd rag-workshop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NGROK_AUTHTOKEN=&amp;lt;改成你的token&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sed -i &amp;#34;s/your-token/$NGROK_AUTHTOKEN/&amp;#34; docker-compose.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker compose up -d
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker logs ngrok
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;t=2025-06-02T06:17:41+0000 lvl=info msg=&amp;#34;started tunnel&amp;#34; obj=tunnels name=command_line addr=http://notebook:8888 url=https://4d11-52-230-24-207.ngrok-free.app
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;以上是-workshop-環境設定&#34;&gt;以上是 Workshop 環境設定&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;後面上課都透過這個網址操作&lt;/li&gt;
&lt;li&gt;還沒有看到 jupyter notebook 的人，請舉手&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://miro.medium.com/v2/resize:fit:996/1*ByWkrjbyWmC9W_uWjI1qrw.gif&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;rag-workshop-流程-1&#34;&gt;RAG Workshop 流程&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;環境設定：確定參與者都有設定好開發環境&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;為什麼需要 RAG（Retrieval-Augmented Generation）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Embedding 與向量數據庫&lt;/li&gt;
&lt;li&gt;Embedding Search&lt;/li&gt;
&lt;li&gt;DIY&lt;/li&gt;
&lt;li&gt;Evaluation&lt;/li&gt;
&lt;li&gt;實際應用: 以 k8s official docs 為例&lt;/li&gt;
&lt;li&gt;DIY + Q&amp;amp;A&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;什麼是-rag&#34;&gt;什麼是 RAG&lt;/h3&gt;
&lt;h5 id=&#34;ragretrieval-augmented-generation-檢索增強生成結合檢索系統與生成式模型如-gpt的自然語言處理架構在生成答案時引用外部知識使模型回答更準確且具事實根據&#34;&gt;RAG（Retrieval-Augmented Generation 檢索增強生成）結合檢索系統與生成式模型（如 GPT）的自然語言處理架構，在生成答案時引用外部知識，使模型回答更準確且具事實根據&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Retrieval（檢索）：&lt;/strong&gt; 從一個外部知識庫（如文件、向量資料庫等）中找到與問題相關的資訊。通常會用語意向量（embeddings）做相似度搜尋。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Generation（生成）：&lt;/strong&gt; 把檢索到的內容與使用者問題一起丟給 LLM（如 GPT、Claude 等）去生成答案。生成的內容會更具事實根據，並能引用具體資料。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://cookbook.openai.com/images/llamaindex_rag_overview.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cookbook.openai.com/images/llamaindex_rag_overview.png&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://cookbook.openai.com/images/llamaindex_rag_overview.png&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;知識獲取效率在-devops-的難題&#34;&gt;知識獲取效率在 DevOps 的難題&lt;/h3&gt;
&lt;p&gt;在快速變動、資訊分散的環境中，難以即時取得需要的知識。「有但找不到、看不懂、用不起來」&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;知識分散在多個系統、格式與工具中&lt;/li&gt;
&lt;li&gt;知識多為「靜態文件」，難以互動問答，舉例，或是換句話說&lt;/li&gt;
&lt;li&gt;隱性知識未被系統化儲存(例如：口頭傳承、slack 討論、會議紀錄等)&lt;/li&gt;
&lt;li&gt;查詢流程與開發流程脫節&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;情境新人工程師要如何到-k8s-doc-查到想要的內容&#34;&gt;情境：新人工程師要如何到 k8s doc 查到想要的內容？&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;有問題去 google / stack overflow&lt;/li&gt;
&lt;li&gt;需要搜尋引擎(k8s doc 有提供，但內部文件系統不一定有)&lt;/li&gt;
&lt;li&gt;需要關鍵字(新人怎麼知道要查 Dynamic Persistent Volume Resizing)&lt;/li&gt;
&lt;li&gt;協助理解（舉例，換句話說）&lt;/li&gt;
&lt;li&gt;跨語言門檻&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class=&#34;notes&#34;&gt;
  k8s doc 有提供關鍵字搜尋，這個搜尋功能是怎麼做的？
Programmable Search Engine（PSE）https://developers.google.com/custom-search/docs/tutorial/introduction
Fulltext Search Engine 例如 elasticsearch 使用 Lucene
&lt;/aside&gt;
&lt;hr&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://www.wackybuttons.com/designcodes/0/110/1100986.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh-hant/slides/2025-06-05-devops-rag-internal-ai/search-in-k8s-official-doc_hu5ebc2a73ee3c44bde0730bde6bf194dd_99993_ba0bedbef430605582db8405bbadfdf2.webp 400w,
               /zh-hant/slides/2025-06-05-devops-rag-internal-ai/search-in-k8s-official-doc_hu5ebc2a73ee3c44bde0730bde6bf194dd_99993_cbca56289ea87ea85283ee75ee320f80.webp 760w,
               /zh-hant/slides/2025-06-05-devops-rag-internal-ai/search-in-k8s-official-doc_hu5ebc2a73ee3c44bde0730bde6bf194dd_99993_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chechia.net/zh-hant/slides/2025-06-05-devops-rag-internal-ai/search-in-k8s-official-doc_hu5ebc2a73ee3c44bde0730bde6bf194dd_99993_ba0bedbef430605582db8405bbadfdf2.webp&#34;
               width=&#34;760&#34;
               height=&#34;408&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/search/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://kubernetes.io/search/&lt;/a&gt;&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;情境senior-工程師要如何分享知識&#34;&gt;情境：Senior 工程師要如何分享知識？&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;『我有寫一篇文件在某個地方，你找一下』&lt;/li&gt;
&lt;li&gt;『我忘記去年為什麼這樣做了』&lt;/li&gt;
&lt;li&gt;『我去 Slack 上找一下』&lt;/li&gt;
&lt;li&gt;『你要不要先去問 ChatGPT？』&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class=&#34;notes&#34;&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://ih1.redbubble.net/image.4690208405.0033/st,small,507x507-pad,600x600,f8f8f8.jpg&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  我們不是懶，而是現在要解答許多基本問題，LLM 回答得比人好
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;rag-讓-devops-更智慧的即時反應&#34;&gt;RAG 讓 DevOps 更智慧的即時反應&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;提升知識獲取效率: 內部文檔知識AI助手&lt;/li&gt;
&lt;li&gt;知識留存與新人 Onboarding&lt;/li&gt;
&lt;li&gt;加速故障排查: 根據錯誤訊息自動從 Runbook 中檢索處理方式&lt;/li&gt;
&lt;li&gt;優化流程自動化與提升決策品質: 通訊軟體對話 bot，自動生成建議&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;DevOps AI Copilot 不應該像圖書館守門員等人來借書，
而應該像導航系統，在你開車時主動告訴你：前方有彎道。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;RAG + Context-Aware Knowledge Copilot&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  基本上我們期待的解決方案是這樣
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;rag-vs-其他工具&#34;&gt;RAG vs 其他工具&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;需要工具提升知識獲取效率，如何選擇 RAG 或是其他 non-LLM 工具？例如 search engine / fulltext search engine / search algorithm&lt;/li&gt;
&lt;li&gt;特定任務的效能是否優於人類&lt;/li&gt;
&lt;li&gt;哪裡適合用 RAG，哪裡適合用 non-LLM 工具&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  例如
google search engine 但當然我們不知道他背後的實作
elasticsearch / lucene / fulltext search engine
GNU grep 的 Boyer–Moore string-search algorithm
&lt;/aside&gt;
&lt;hr&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh-hant/slides/2025-06-05-devops-rag-internal-ai/rag-vs-code_hu9f4f7a7594cbcf741f81ea0e7ee1d93e_174431_8715252ce2925f2b574cec4bb2d0a84d.webp 400w,
               /zh-hant/slides/2025-06-05-devops-rag-internal-ai/rag-vs-code_hu9f4f7a7594cbcf741f81ea0e7ee1d93e_174431_5705bdacf67afc9f8d81663d6d7fea49.webp 760w,
               /zh-hant/slides/2025-06-05-devops-rag-internal-ai/rag-vs-code_hu9f4f7a7594cbcf741f81ea0e7ee1d93e_174431_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chechia.net/zh-hant/slides/2025-06-05-devops-rag-internal-ai/rag-vs-code_hu9f4f7a7594cbcf741f81ea0e7ee1d93e_174431_8715252ce2925f2b574cec4bb2d0a84d.webp&#34;
               width=&#34;760&#34;
               height=&#34;481&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  適合用 RAG 的情境：客服問答、技術搜尋、知識型 Chatbot、內部知識導航。
適合用傳統程式的情境：金流控制、流程引擎、帳務系統、安全控制。
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;有了大語言模型後&#34;&gt;有了大語言模型後&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;去 google -&amp;gt; 先問 chatgpt，初步問答理解問題，找到關鍵字&lt;/li&gt;
&lt;li&gt;需要搜尋引擎 -&amp;gt; chatgpt 整合，直接上網搜尋&lt;/li&gt;
&lt;li&gt;需要關鍵字 -&amp;gt; chatgpt 幫你找到關鍵字&lt;/li&gt;
&lt;li&gt;協助理解 -&amp;gt; chatgpt 舉例，換句話說&lt;/li&gt;
&lt;li&gt;跨語言門檻 -&amp;gt; chatgpt 翻譯&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class=&#34;notes&#34;&gt;
  chatgpt 會用通順的語言回答問題（優於平均工程師）
&lt;/aside&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;chatgpt 會用通順的語言，快速（數秒內）上網搜尋，回答問題&lt;/li&gt;
&lt;li&gt;過程中不厭其煩地問答，換句話說&lt;/li&gt;
&lt;li&gt;回答的格式高度客製化&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h5 id=&#34;llm-不具備專業知識缺乏內容根據時容易產生幻覺hallucination&#34;&gt;LLM 不具備專業知識。缺乏內容根據時，容易產生幻覺(hallucination)&lt;/h5&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh-hant/slides/2025-06-05-devops-rag-internal-ai/llm-hallucination_hu42174c29bc98b9089191b47b3864fba5_212700_9fe73f5f2b5339e829b4fd9ff27bd59e.webp 400w,
               /zh-hant/slides/2025-06-05-devops-rag-internal-ai/llm-hallucination_hu42174c29bc98b9089191b47b3864fba5_212700_b69728d4bdba428622aca425a98eed1e.webp 760w,
               /zh-hant/slides/2025-06-05-devops-rag-internal-ai/llm-hallucination_hu42174c29bc98b9089191b47b3864fba5_212700_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chechia.net/zh-hant/slides/2025-06-05-devops-rag-internal-ai/llm-hallucination_hu42174c29bc98b9089191b47b3864fba5_212700_9fe73f5f2b5339e829b4fd9ff27bd59e.webp&#34;
               width=&#34;500&#34;
               height=&#34;500&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  LLM（大型語言模型）本身並不具備事實知識，而是依賴訓練時的語料與提示輸入來生成回答。當缺乏明確上下文或內容根據時，LLM 容易出現「幻覺」現象，即生成看似合理但實際不正確的資訊。專業領域問題若未提供準確資料支撐，也容易導致錯誤回答。
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;rag-workshop-流程-2&#34;&gt;RAG Workshop 流程&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;環境設定：確定參與者都有設定好開發環境&lt;/li&gt;
&lt;li&gt;為什麼需要 RAG（Retrieval-Augmented Generation）
&lt;ol&gt;
&lt;li&gt;RAG 在「文件檢索與提示」上優於人類&lt;/li&gt;
&lt;li&gt;LLM 補強工程師的語言能力&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embedding 與向量數據庫&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Embedding Search&lt;/li&gt;
&lt;li&gt;DIY&lt;/li&gt;
&lt;li&gt;Evaluation&lt;/li&gt;
&lt;li&gt;k8s RAG QA.ipynb&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;rag-workshop-流程-3&#34;&gt;RAG Workshop 流程&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;確定參與者都有跑一套RAG起來&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Evaluation&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;k8s RAG QA.ipynb&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;如何評估-rag-系統的品質&#34;&gt;如何評估 RAG 系統的品質?&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;人人都會下 prompt，但是誰的 prompt 更好？或是沒差別？&lt;/li&gt;
&lt;li&gt;如何選擇 vector store 的 chunking 策略？&lt;/li&gt;
&lt;li&gt;哪個 retriever 更好？&lt;/li&gt;
&lt;li&gt;要如何持續改善 RAG 系統？下個迭代的改善方向是什麼？&lt;/li&gt;
&lt;li&gt;是否符合 production criteria？&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;評估確保回答品質可靠性與可控性&#34;&gt;評估：確保回答品質可靠性與可控性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;保證正確性：檢索出的資訊是正確的，生成的答案忠實於原始 context&lt;/li&gt;
&lt;li&gt;降低幻覺風險：即使有資料，LLM 仍可能亂編&lt;/li&gt;
&lt;li&gt;測量系統品質&lt;/li&gt;
&lt;li&gt;改善依據：幫助驗證Chunking 策略，Prompt 設計，Retriever 模型調整&lt;/li&gt;
&lt;li&gt;自動化監控：品質追蹤、問題定位，建立類似 APM 的 QA 指標&lt;/li&gt;
&lt;li&gt;對 Stakeholder 展示成效：可視化與量化指標，有助溝通與資源投入&lt;/li&gt;
&lt;/ol&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;評估方式建議&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Retrieval：Recall@K, MRR, nDCG&lt;/li&gt;
&lt;li&gt;Generation：ROUGE, BERTScore, GPTScore&lt;/li&gt;
&lt;li&gt;Faithfulness：依據來源資料生成？&lt;/li&gt;
&lt;li&gt;人工標註：相關性、正確性、幫助程度&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;rag-應用-以-k8s-official-docs-為例&#34;&gt;RAG 應用: 以 k8s official docs 為例&lt;/h3&gt;
&lt;hr&gt;
&lt;h3 id=&#34;總結&#34;&gt;總結&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;為什麼需要 RAG&lt;/li&gt;
&lt;li&gt;Embedding 與向量數據庫&lt;/li&gt;
&lt;li&gt;Embedding Search&lt;/li&gt;
&lt;li&gt;DIY&lt;/li&gt;
&lt;li&gt;Evaluation&lt;/li&gt;
&lt;li&gt;k8s RAG QA&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h5 id=&#34;由衷地感謝為-workshop-提供協助的夥伴&#34;&gt;由衷地感謝為 workshop 提供協助的夥伴!&lt;/h5&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pymia&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mia // Huai-Wen Chang&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hunkue&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hunkue&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;maicoin-we-are-hiring&#34;&gt;MaiCoin: We are Hiring!!&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/jobs/view/4236558674/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Senior Site Reliability Engineer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/jobs/view/4236555801&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Senior Data Engineer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/jobs/view/4236555811&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Senior IT Engineer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/jobs/view/4236556713&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Blockchain Engineer (Wallet Team)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/jobs/view/4236558714&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Senior Backend Engineer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/jobs/view/4236523560/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Micro Service Software Engineer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/jobs/view/4236559632&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cyber Security Engineer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;diy--qa--建議&#34;&gt;DIY + Q&amp;amp;A + 建議&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;下次會改用 Colab&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Jenkins X on Kubernetes</title>
      <link>https://chechia.net/zh-hant/post/2019-04-19-jenkins-x-on-kubernetes/</link>
      <pubDate>Fri, 19 Apr 2019 12:15:41 +0800</pubDate>
      <guid>https://chechia.net/zh-hant/post/2019-04-19-jenkins-x-on-kubernetes/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://jenkins.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jenkins&lt;/a&gt; is one of the earliest open source antomation server and remains the most common option in use today. Over the years, Jenkins has evolved into a powerful and flexible framework with hundreds of plugins to support automation for any project.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jenkins X&lt;/a&gt;, on the other hand, is a CI/CD platform (Jenkins Platform) for modern cloud applications on Kubernetes.&lt;/p&gt;
&lt;p&gt;Here we talk about some basic concepts about Jenkins X and provide a hand-to-hand guide to deploy jenkins-x on Kubernetes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#architecture&#34;&gt;Architecture of Jenkins X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#install&#34;&gt;Install Jenkins with jx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pipeline&#34;&gt;Create a Pipeline with jx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#client&#34;&gt;Develope with jx client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information about jx itself, check &lt;a href=&#34;https://github.com/jenkins-x/jx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jenkins-X Github Repo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;architecture&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;architecture&#34;&gt;Architecture&lt;/h1&gt;
&lt;p&gt;Check this beautiful diagram.&lt;/p&gt;


















&lt;figure  id=&#34;figure-httpsjenkins-xioarchitecturediagram&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;jenkins/architecture-serverless.png&#34; alt=&#34;https://jenkins-x.io/architecture/diagram/&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      &lt;a href=&#34;https://jenkins-x.io/architecture/diagram/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://jenkins-x.io/architecture/diagram/&lt;/a&gt;
    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;p&gt;&lt;a name=&#34;install&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;install&#34;&gt;Install&lt;/h1&gt;
&lt;h3 id=&#34;create-gke-cluster--get-credentials&#34;&gt;Create GKE cluster &amp;amp; Get Credentials&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud components update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CLUSTER_NAME=jenkins-server
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#CLUSTER_NAME=jenkins-serverless
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud container clusters create ${CLUSTER_NAME} \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --num-nodes 1 \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --machine-type n1-standard-4 \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --enable-autoscaling \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --min-nodes 1 \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --max-nodes 2 \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --zone asia-east1-b \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --preemptible
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# After cluster initialization, get credentials to access cluster with kubectl
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud container clusters get-credentials ${CLUSTER_NAME}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Check cluster stats.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl get nodes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;install-jx-on-local-machine&#34;&gt;Install jx on Local Machine&lt;/h3&gt;
&lt;p&gt;[Jenkins X Release](&lt;a href=&#34;https://github.com/jenkins-x/jx/releases]%28https://github.com/jenkins-x/jx/releases%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/jenkins-x/jx/releases](https://github.com/jenkins-x/jx/releases)&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;JX_VERSION=v2.0.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;OS_ARCH=darwin-amd64
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#OS_ARCH=linux-amd64
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -L https://github.com/jenkins-x/jx/releases/download/&amp;#34;${JX_VERSION}&amp;#34;/jx-&amp;#34;${OS_ARCH}&amp;#34;.tar.gz | tar xzv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mv jx /usr/local/bin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME               VERSION
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx                 2.0.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Kubernetes cluster v1.11.7-gke.12
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl            v1.11.9-dispatcher
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;helm client        v2.11.0+g2e55dbe
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;helm server        v2.11.0+g2e55dbe
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git                git version 2.20.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Operating System   Mac OS X 10.14.4 build 18E226
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;option-1-install-serverless-jenkins-pipeline&#34;&gt;(Option 1) Install Serverless Jenkins Pipeline&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;DEFAULT_PASSWORD=mySecretPassWord123
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx install \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --default-admin-password=${DEFAULT_PASSWORD} \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --provider=&amp;#39;gke&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enter Github user name&lt;/li&gt;
&lt;li&gt;Enter Github personal api token for CI/CD&lt;/li&gt;
&lt;li&gt;Enable Github as Git pipeline server&lt;/li&gt;
&lt;li&gt;Select Jenkins installation type:
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Serverless Jenkins X Pipelines with Tekon&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Static Master Jenkins&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pick default workload build pack
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Kubernetes Workloads: Automated CI+CD with GitOps Promotion&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Library Workloads: CI+Release but no CD&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Select the organization where you want to create the environment repository:
&lt;ul&gt;
&lt;li&gt;chechiachang&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Your Kubernetes context is now set to the namespace: jx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0231] To switch back to your original namespace use: jx namespace jx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0231] Or to use this context/namespace in just one terminal use: jx shell
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0231] For help on switching contexts see: https://jenkins-x.io/developing/kube-context/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0231] To import existing projects into Jenkins:       jx import
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0231] To create a new Spring Boot microservice:       jx create spring -d web -d actuator
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0231] To create a new microservice from a quickstart: jx create quickstart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;option-2-install-static-jenkins-server&#34;&gt;(Option 2) Install Static Jenkins Server&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;DEFAULT_PASSWORD=mySecretPassWord123
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx install \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --default-admin-password=${DEFAULT_PASSWORD} \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --provider=&amp;#39;gke&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enter Github user name&lt;/li&gt;
&lt;li&gt;Enter Github personal api token for CI/CD&lt;/li&gt;
&lt;li&gt;Enable Github as Git pipeline server&lt;/li&gt;
&lt;li&gt;Select Jenkins installation type:
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Serverless Jenkins X Pipelines with Tekon&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Static Master Jenkins&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pick default workload build pack
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Kubernetes Workloads: Automated CI+CD with GitOps Promotion&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Library Workloads: CI+Release but no CD&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Select the organization where you want to create the environment repository:
&lt;ul&gt;
&lt;li&gt;chechiachang&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0465]Your Kubernetes context is now set to the namespace: jx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0465] To switch back to your original namespace use: jx namespace default
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0465] Or to use this context/namespace in just one terminal use: jx shell
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0465] For help on switching contexts see: https://jenkins-x.io/developing/kube-context/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0465] To import existing projects into Jenkins:       jx import
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0465] To create a new Spring Boot microservice:       jx create spring -d web -d actuator
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0465] To create a new microservice from a quickstart: jx create quickstart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Access Static Jenkins Server through Domain with username and password
Domain &lt;a href=&#34;http://jenkins.jx.11.22.33.44.nip.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://jenkins.jx.11.22.33.44.nip.io/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;uninstall&#34;&gt;Uninstall&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx uninstall
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# rm -rf ~/.jx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;&lt;a name=&#34;pipeline&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;setup-cicd-pipeline&#34;&gt;Setup CI/CD Pipeline&lt;/h1&gt;
&lt;h3 id=&#34;create-quickstart-repository&#34;&gt;Create Quickstart Repository&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl get pods --namespace jx --watch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# cd workspace
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx create quickstart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Which organisation do you want to use? chechiachang&lt;/li&gt;
&lt;li&gt;Enter the new repository name:  serverless-jenkins-quickstart&lt;/li&gt;
&lt;li&gt;select the quickstart you wish to create  [Use arrows to move, type to filter]
angular-io-quickstart
aspnet-app
dlang-http&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;golang-http
jenkins-cwp-quickstart
jenkins-quickstart
node-http&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0121] Watch pipeline activity via:    jx get activity -f serverless-jenkins-quickstart -w
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0121] Browse the pipeline log via:    jx get build logs chechiachang/serverless-jenkins-quickstart/master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0121] Open the Jenkins console via    jx console
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0121] You can list the pipelines via: jx get pipelines
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0121] Open the Jenkins console via    jx console
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0121] You can list the pipelines via: jx get pipelines
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0121] When the pipeline is complete:  jx get applications
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;check-log-of-the-first-run&#34;&gt;Check log of the first run&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx logs pipeline
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;add-step-to-pipeline&#34;&gt;Add Step to Pipeline&lt;/h3&gt;
&lt;p&gt;Add a setup step for pullrequest&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd serverless-jenkins-quickstart
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx create step --pipeline pullrequest \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --lifecycle setup \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --mode replace \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --sh &amp;#34;echo hello world&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Validate pipeline step for each modification&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx step validate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A build-pack pod started after git push. Watch pod status with kubectl.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl get pods --namespace jx --watch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;check-build-status-on-prow-serverless&#34;&gt;Check Build Status on Prow (Serverless)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://deck.jx.130.211.245.13.nip.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://deck.jx.130.211.245.13.nip.io/&lt;/a&gt;
Login with username and password&lt;/p&gt;
&lt;h3 id=&#34;import-existing-repository&#34;&gt;Import Existing Repository&lt;/h3&gt;
&lt;p&gt;In source code repository:&lt;/p&gt;
&lt;p&gt;Import jx to remote jenkins-server. This will apply a Jenkinsfile to repository by default&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx import --url git@github.com:chechiachang/serverless-jenkins-quickstart.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Update jenkins-x.yml&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx create step
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;git commit &amp;amp; push&lt;/p&gt;
&lt;h3 id=&#34;trouble-shooting&#34;&gt;Trouble Shooting&lt;/h3&gt;
&lt;p&gt;Failed to get jx resources&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx get pipelines
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Make sure your jx (or kubectl) context is with the correct GKE and namespace&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kc config set-context gke_my-project_asia-east1-b_jenkins \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --namespace=jx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;why-not-use-helm-chart&#34;&gt;Why not use helm chart?&lt;/h3&gt;
&lt;p&gt;It&amp;rsquo;s readlly depend on what we need in CI/CD automation.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/helm/charts/tree/master/stable/jenkins&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jenkins Helm Chart&lt;/a&gt; create Jenkins master and slave cluster on Kubernetes utilizing the Jenkins Kubernetes plugin.
Jenkin Platform with jx is Jenkins Platform native to Kubernetes. It comes with powerful cloud native components like Prow automation, Nexus, Docker Registry, Tekton Pipeline, &amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;check-jenkins-x-examples&#34;&gt;Check jenkins-x examples&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a name=&#34;client&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;client&#34;&gt;Client&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx get urls
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Name                      URL
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jenkins                   http://jenkins.jx.11.22.33.44.nip.io
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jenkins-x-chartmuseum     http://chartmuseum.jx.11.22.33.44.nip.io
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jenkins-x-docker-registry http://docker-registry.jx.11.22.33.44.nip.io
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jenkins-x-monocular-api   http://monocular.jx.11.22.33.44.nip.io
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jenkins-x-monocular-ui    http://monocular.jx.11.22.33.44.nip.io
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nexus                     http://nexus.jx.11.22.33.44.nip.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;get-cluster-status&#34;&gt;Get Cluster Status&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx diagnose
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;get-applications--pipelines&#34;&gt;Get Applications &amp;amp; Pipelines&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx get applications
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx get pipelines
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;get-ci-activities--build-log&#34;&gt;Get CI Activities &amp;amp; build log&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx get activities
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx get activities --filter=&amp;#39;jenkins-x-on-kubernetes&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx get build log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO[0003] view the log at: http://jenkins.jx.11.22.33.44.nip.io/job/chechiachang/job/jenkins-x-on-kubernetes/job/feature-add-test/3/console
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;trigger-build--check-activity&#34;&gt;Trigger Build &amp;amp; Check Activity&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx start pipeline
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx start pipeline --filter=&amp;#39;jenkins-x-on-kubernetes/feature-add-test&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx get activities --filter=&amp;#39;jenkins-x-on-kubernetes&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-pull-request&#34;&gt;Create Pull Request&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jx create pullrequest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
