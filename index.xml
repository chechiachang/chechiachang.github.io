<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Che-Chia Chang on Che-Chia Chang</title>
    <link>https://chechiachang.github.io/</link>
    <description>Recent content in Che-Chia Chang on Che-Chia Chang</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>chechiachang &amp;copy; 2016</copyright>
    <lastBuildDate>Fri, 21 Jun 2019 13:17:53 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Kuberentes Source Code</title>
      <link>https://chechiachang.github.io/post/kuberentes-source-code/</link>
      <pubDate>Fri, 21 Jun 2019 13:17:53 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/post/kuberentes-source-code/</guid>
      <description>

&lt;h1 id=&#34;api-resources&#34;&gt;API resources&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;kubectl api-resources
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Quantum Computing Journey</title>
      <link>https://chechiachang.github.io/project/quantum-computing-journey/</link>
      <pubDate>Sun, 02 Jun 2019 13:51:54 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/project/quantum-computing-journey/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Journey to Quantum Computing</title>
      <link>https://chechiachang.github.io/post/journey-to-quantum-computing/</link>
      <pubDate>Sun, 02 Jun 2019 10:21:37 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/post/journey-to-quantum-computing/</guid>
      <description>

&lt;p&gt;This post is about my learning steps for quantum-computing.&lt;/p&gt;

&lt;p&gt;For a quick-start tutorial, check my workshop project throught the project link above.&lt;/p&gt;

&lt;h1 id=&#34;resources&#34;&gt;Resources&lt;/h1&gt;

&lt;p&gt;Courses&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.coursera.org/learn/quantum-computing-algorithms&#34; target=&#34;_blank&#34;&gt;Coursera&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://mitxpro.mit.edu/courses/course-v1:MITxPRO+QCx0+1T2019/about&#34; target=&#34;_blank&#34;&gt;on MIT x pro&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pages.cs.wisc.edu/~dieter/Courses/2010f-CS880/lectures.html&#34; target=&#34;_blank&#34;&gt;Quantum Information Processing from UW Madison&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.theory.caltech.edu/people/preskill/ph229/&#34; target=&#34;_blank&#34;&gt;Quantum Computation by John Preskill&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://quantum-computing.ibm.com&#34; target=&#34;_blank&#34;&gt;IBM Q Experience&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Qiskit/openqasm&#34; target=&#34;_blank&#34;&gt;https://github.com/Qiskit/openqasm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Qiskit/qiskit-tutorials&#34; target=&#34;_blank&#34;&gt;https://github.com/Qiskit/qiskit-tutorials&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;ibm-q-experience&#34;&gt;IBM Q Experience&lt;/h1&gt;

&lt;h3 id=&#34;day-1&#34;&gt;Day 1&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://quantum-computing.ibm.com/support/guides/getting-started-with-circuit-composer&#34; target=&#34;_blank&#34;&gt;Getting Started with Circuit Composer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Quantum World circuit transformed two qubits, from $ \vert0\rangle $ to $ \frac{\vert00\rangle + \vert11\rangle}{\sqrt{2}} $&lt;/p&gt;

&lt;p&gt;Questions&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[] Hadamard Gate&lt;/li&gt;
&lt;li&gt;[] Bell states

&lt;ul&gt;
&lt;li&gt;[] Annotations&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Service Mesh for Microservices on Kubernetes</title>
      <link>https://chechiachang.github.io/talk/service-mesh-for-microservices-on-kubernetes/</link>
      <pubDate>Wed, 15 May 2019 12:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/service-mesh-for-microservices-on-kubernetes/</guid>
      <description>

&lt;hr /&gt;

&lt;h3 id=&#34;outlines&#34;&gt;Outlines&lt;/h3&gt;

&lt;p&gt;傳統的 Monolith被分解為分散的微服務，以取得更高的效能與更彈性的管理。當眾多的為服務同時運作，產生複雜的依賴與交流，網路層不再只是有『有通就好』，而是需要精細且彈性的流量管理與監控，來提供穩定的效能。本次主題將基於 Kubernetes 平台上的 Istio ，探討 Service Mesh 的概念與相關應用。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;何為 Service Mesh ？為何需要 Service Mesh ？&lt;/li&gt;
&lt;li&gt;Service Mesh 基本概念&lt;/li&gt;
&lt;li&gt;如何Service-to-Service的網路層管理監控&lt;/li&gt;
&lt;li&gt;導入 Istio 到 Kubernetes&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;目標聽眾&#34;&gt;目標聽眾&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;微運大量微服務，希望導入Service Mesh 的Operator&lt;/li&gt;
&lt;li&gt;想了解微服務生態中竄紅的 Service Mesh&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;收穫&#34;&gt;收穫&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;了解為服務的優勢與Cloud Native應用發展趨勢&lt;/li&gt;
&lt;li&gt;了解 Service Mesh 與 Istio 觀念&lt;/li&gt;
&lt;li&gt;能使用 Istio 於 Kubernetes，進行服務網路的管理。&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;你有聽過-microservice-istio有聽過嗎&#34;&gt;你有聽過 Microservice / Istio有聽過嗎？&lt;/h3&gt;

&lt;p&gt;今天來介紹一款好藥：Istio。如果你有以下問題：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;維運大量(成千上百)微服務&lt;/li&gt;
&lt;li&gt;需要服務對服務的流量控制，監控，管理&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;談 Service Mesh 之前，不免的要先談一下 Microservice，這個目前好像很夯的一個技術名詞。&lt;/p&gt;

&lt;p&gt;如果手上有一個 App，會希望依照 Monolith 的架構，或是 Microservices？
Microservices 聽起來又新又潮。相對於 Monolith有許多明顯的好處：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Decoupling&lt;/li&gt;
&lt;li&gt;Scalability&lt;/li&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;也有明顯的壞處：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Development Complexity&lt;/li&gt;
&lt;li&gt;Operation Cost&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;沒事別挖坑跳&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;何為 Service Mesh？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Service Mesh: Model / Pattern&lt;/li&gt;
&lt;li&gt;Implementations: linkerd, istio, &amp;hellip;&lt;/li&gt;
&lt;li&gt;基於底層的網路服務，在複雜的 topology 中可靠的傳遞&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用Microservie 可能會遇到的問題：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Traffic control&lt;/li&gt;
&lt;li&gt;Monitoring&lt;/li&gt;
&lt;li&gt;A/B Testing&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Istio 三分鐘就入坑 佈署篇</title>
      <link>https://chechiachang.github.io/post/service-mesh-for-microservice-on-kubernetes/</link>
      <pubDate>Mon, 06 May 2019 18:12:15 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/post/service-mesh-for-microservice-on-kubernetes/</guid>
      <description>

&lt;h1 id=&#34;create-gke&#34;&gt;Create GKE&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;gcloud beta container --project &amp;quot;istio-playground-239810&amp;quot; clusters create &amp;quot;istio-playground&amp;quot; \
  --zone &amp;quot;asia-east1-b&amp;quot; \
  --username &amp;quot;admin&amp;quot; \
  --cluster-version &amp;quot;1.11.8-gke.6&amp;quot; \
  --machine-type &amp;quot;n1-standard-2&amp;quot; \
  --image-type &amp;quot;COS&amp;quot; \
  --disk-type &amp;quot;pd-standard&amp;quot; \
  --disk-size &amp;quot;100&amp;quot; \
  --preemptible \
  --num-nodes &amp;quot;1&amp;quot; \
  --enable-cloud-logging \
  --enable-cloud-monitoring \
  --no-enable-ip-alias \
  --addons HorizontalPodAutoscaling,HttpLoadBalancing,KubernetesDashboard,Istio \
  --istio-config auth=MTLS_PERMISSIVE \
  --no-enable-autoupgrade \
  --enable-autorepair
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;take-a-peek&#34;&gt;Take a Peek&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$ kubectl get namespaces

NAME           STATUS    AGE
default        Active    2m
istio-system   Active    1m
kube-public    Active    2m
kube-system    Active    2m

$ kubectl get po -n istio-system
NAME                                      READY     STATUS      RESTARTS   AGE
istio-citadel-7f6f77cd7b-nxfbf            1/1       Running     0          3m
istio-cleanup-secrets-h454m               0/1       Completed   0          3m
istio-egressgateway-7c56db84cc-nlrwq      1/1       Running     0          3m
istio-galley-6c747bdb4f-45jrp             1/1       Running     0          3m
istio-ingressgateway-6ff68cf95d-tlkq4     1/1       Running     0          3m
istio-pilot-8ff66f8c4-q9chz               2/2       Running     0          3m
istio-policy-69b78b7d6-c8pld              2/2       Running     0          3m
istio-sidecar-injector-558996c897-hr6q4   1/1       Running     0          3m
istio-telemetry-f96459fb-5cbpg            2/2       Running     0          3m
promsd-ff878d44b-hv8nh                    2/2       Running     1          3m
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;deploy-app&#34;&gt;Deploy app&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;kubectl label namespace default istio-injection=enabled
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bookinfo Application&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.1/samples/bookinfo/platform/kube/bookinfo.yaml

kubectl get pods
kubectl get services
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Gateway&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.1/samples/bookinfo/networking/bookinfo-gateway.yaml

kubectl get gateways

kubectl get svc istio-ingressgateway -n istio-system
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Go to ingress public ip&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath=&#39;{.status.loadBalancer.ingress[0].ip}&#39;)
export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath=&#39;{.spec.ports[?(@.name==&amp;quot;http2&amp;quot;)].port}&#39;)
export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath=&#39;{.spec.ports[?(@.name==&amp;quot;https&amp;quot;)].port}&#39;)

curl -v ${INGRESS_HOST}:{$INGRESS_PORT}/productpage

404 Not Found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apply destination rules&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.1/samples/bookinfo/networking/destination-rule-all.yaml

curl -v ${INGRESS_HOST}:{$INGRESS_PORT}/productpage
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;brief-review&#34;&gt;Brief review&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;kubectl get virtualservices
kubectl get destinationrules
kubectl get gateways
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;istio-tasks&#34;&gt;Istio Tasks&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://istio.io/docs/tasks/traffic-management/&#34; target=&#34;_blank&#34;&gt;https://istio.io/docs/tasks/traffic-management/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jenkins on Kubernetes</title>
      <link>https://chechiachang.github.io/talk/jenkins-on-kubernetes/</link>
      <pubDate>Sat, 20 Apr 2019 13:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/jenkins-on-kubernetes/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;How to deploy a cloud-native Jenkins with Jenkins X.&lt;/li&gt;
&lt;li&gt;A pipeline with Kubernetes based dynamics worker sclaing (jenkins-kubernetes).&lt;/li&gt;
&lt;li&gt;Give it a try.&lt;/li&gt;
&lt;li&gt;(Defered) Customized test reports for multiple language (ex. go-junit-report)&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Jenkins X on Kubernetes</title>
      <link>https://chechiachang.github.io/slides/jenkins-x-on-kubernetes/</link>
      <pubDate>Fri, 19 Apr 2019 21:36:50 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/slides/jenkins-x-on-kubernetes/</guid>
      <description>

&lt;h3 id=&#34;jenkins-https-jenkins-io&#34;&gt;&lt;a href=&#34;https://jenkins.io/&#34; target=&#34;_blank&#34;&gt;Jenkins&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;One of the earliest open source antomation server&lt;/li&gt;
&lt;li&gt;Most common option in use&lt;/li&gt;
&lt;li&gt;Flexible and customizable. Hundreds of plugins&lt;/li&gt;
&lt;li&gt;Support automation for any project&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;jenkins-x-https-jenkins-x-io&#34;&gt;&lt;a href=&#34;https://jenkins-x.io/&#34; target=&#34;_blank&#34;&gt;Jenkins X&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;CI/CD platform (Jenkins Platform)&lt;/li&gt;
&lt;li&gt;Cloud native serverless&lt;/li&gt;
&lt;li&gt;For modern cloud applications on Kubernetes.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;outlines&#34;&gt;Outlines&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#install&#34;&gt;Install Jenkins with jx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pipeline&#34;&gt;Create a Pipeline with jx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#client&#34;&gt;Develope with jx client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;check &lt;a href=&#34;https://github.com/jenkins-x/jx&#34; target=&#34;_blank&#34;&gt;Jenkins-X Github Repo&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;install&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;install&#34;&gt;Install&lt;/h3&gt;

&lt;p&gt;Create GKE cluster &amp;amp; Get Credentials&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gcloud init
gcloud components update
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;CLUSTER_NAME=jenkins-server
#CLUSTER_NAME=jenkins-serverless

gcloud container clusters create ${CLUSTER_NAME} \
  --num-nodes 1 \
  --machine-type n1-standard-4 \
  --enable-autoscaling \
  --min-nodes 1 \
  --max-nodes 2 \
  --zone asia-east1-b \
  --preemptible
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Create GKE cluster &amp;amp; Get Credentials&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Get credentials to access cluster with kubectl
gcloud container clusters get-credentials ${CLUSTER_NAME}

# Check cluster stats.
kubectl get nodes
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Download &lt;a href=&#34;https://github.com/jenkins-x/jx/releases&#34; target=&#34;_blank&#34;&gt;Jenkins X Release&lt;/a&gt; &amp;amp; install jx on Local Machine&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;JX_VERSION=v2.0.2
OS_ARCH=darwin-amd64
#OS_ARCH=linux-amd64
curl -L https://github.com/jenkins-x/jx/releases/download/&amp;quot;${JX_VERSION}&amp;quot;/jx-&amp;quot;${OS_ARCH}&amp;quot;.tar.gz | tar xzv
sudo mv jx /usr/local/bin
jx version

NAME               VERSION
jx                 2.0.2
Kubernetes cluster v1.11.7-gke.12
kubectl            v1.11.9-dispatcher
helm client        v2.11.0+g2e55dbe
helm server        v2.11.0+g2e55dbe
git                git version 2.20.1
Operating System   Mac OS X 10.14.4 build 18E226
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;(Install Option 1) Serverless Jenkins Pipeline&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DEFAULT_PASSWORD=mySecretPassWord123
jx install \
  --default-admin-password=${DEFAULT_PASSWORD} \
  --provider=&#39;gke&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Install options:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;Select Jenkins installation type:

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Serverless Jenkins X Pipelines with Tekon&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Static Master Jenkins&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Pick default workload build pack&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Kubernetes Workloads: Automated CI+CD with GitOps Promotion&lt;/label&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ ] Library Workloads: CI+Release but no CD&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Your Kubernetes context is now set to the namespace: jx
INFO[0231] To switch back to your original namespace use: jx namespace jx
...
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;(Install Option 2) Static Jenkins Server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DEFAULT_PASSWORD=mySecretPassWord123

jx install \
  --default-admin-password=${DEFAULT_PASSWORD} \
  --provider=&#39;gke&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Options:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;Select Jenkins installation type:

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Serverless Jenkins X Pipelines with Tekon&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Static Master Jenkins&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Pick default workload build pack&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Kubernetes Workloads: Automated CI+CD with GitOps Promotion&lt;/label&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ ] Library Workloads: CI+Release but no CD&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INFO[0465]Your Kubernetes context is now set to the namespace: jx
INFO[0465] To switch back to your original namespace use: jx namespace default

Access Static Jenkins Server through Domain with username and password
Domain http://jenkins.jx.11.22.33.44.nip.io/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;uninstall&#34;&gt;Uninstall&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx uninstall
# rm -rf ~/.jx
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;setup-ci-cd-pipeline&#34;&gt;Setup CI/CD Pipeline&lt;/h3&gt;

&lt;p&gt;Create Quickstart Repository&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl get pods --namespace jx --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# cd workspace
jx create quickstart
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Options:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ select the quickstart you wish to create  [Use arrows to move, type to filter]
  aspnet-app
  dlang-http
&amp;gt; golang-http
  jenkins-cwp-quickstart
  jenkins-quickstart
  node-http

INFO[0121] Watch pipeline activity via:    jx get activity -f serverless-jenkins-quickstart -w
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Check log of the first run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx logs pipeline
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Add a setup step for pullrequest&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd serverless-jenkins-quickstart
jx create step --pipeline pullrequest \
  --lifecycle setup \
  --mode replace \
  --sh &amp;quot;echo hello world&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Validate pipeline step for each modification&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx step validate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A build-pack pod started after git push. Watch pod status with kubectl.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl get pods --namespace jx --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Check Build Status on Prow (Serverless)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://deck.jx.130.211.245.13.nip.io/&#34; target=&#34;_blank&#34;&gt;http://deck.jx.130.211.245.13.nip.io/&lt;/a&gt;
Login with username and password&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Import Existing Repository&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# In source code repository
# Import jx to remote jenkins-server. This will apply a Jenkinsfile to repository by default
jx import \
--url git@github.com:chechiachang/serverless-jenkins-quickstart.git
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Update jenkins-x.yml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx create step
git commit
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Trouble Shooting: Failed to get jx resources&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx get pipelines
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make sure your jx (or kubectl) context is with the correct GKE and namespace&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kc config set-context gke_my-project_asia-east1-b_jenkins \
  --namespace=jx
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;helm-vs-jenkins-x&#34;&gt;Helm vs Jenkins X&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/helm/charts/tree/master/stable/jenkins&#34; target=&#34;_blank&#34;&gt;Jenkins Helm Chart&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create Jenkins master and slave cluster on Kubernetes&lt;/li&gt;
&lt;li&gt;utilizing the Jenkins Kubernetes plugin.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Jenkin Platform with jx&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jenkins Platform native to Kubernetes&lt;/li&gt;
&lt;li&gt;Powerful cloud native components: Prow, Nexus, Docker Registry, Tekton Pipeline, &amp;hellip;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;check-jenkins-x-examples&#34;&gt;Check jenkins-x examples&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&#34; target=&#34;_blank&#34;&gt;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;jx-client&#34;&gt;jx Client&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;jx get urls

Name                      URL
jenkins                   http://jenkins.jx.11.22.33.44.nip.io
jenkins-x-chartmuseum     http://chartmuseum.jx.11.22.33.44.nip.io
jenkins-x-docker-registry http://docker-registry.jx.11.22.33.44.nip.io
jenkins-x-monocular-api   http://monocular.jx.11.22.33.44.nip.io
jenkins-x-monocular-ui    http://monocular.jx.11.22.33.44.nip.io
nexus                     http://nexus.jx.11.22.33.44.nip.io
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Get Cluster Status&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx diagnose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Get Applications &amp;amp; Pipelines&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx get applications
jx get pipelines
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Get CI Activities &amp;amp; build log&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx get activities
jx get activities --filter=&#39;jenkins-x-on-kubernetes&#39;

jx get build log

INFO[0003] view the log at: http://jenkins.jx.11.22.33.44.nip.io/job/chechiachang/job/jenkins-x-on-kubernetes/job/feature-add-test/3/console
...
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Trigger Build &amp;amp; Check Activity&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx start pipeline
jx start pipeline --filter=&#39;jenkins-x-on-kubernetes/feature-add-test&#39;

jx get activities --filter=&#39;jenkins-x-on-kubernetes&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Create Pull Request&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx create pullrequest
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;summary&#34;&gt;Summary&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Demonstrate a Jenkins pipeline&lt;/li&gt;
&lt;li&gt;Jenkins plugin

&lt;ul&gt;
&lt;li&gt;master slave cluster&lt;/li&gt;
&lt;li&gt;kubernetes plugin&lt;/li&gt;
&lt;li&gt;lovely GUI&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;jx on k8s&lt;/li&gt;
&lt;li&gt;jx cli&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Jenkins 簡單用&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;設定與維護人力會比其他工具稍微多&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Jenkins 複雜用&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deep Customization: 希望花時間打造最符合自己需求的工具&lt;/li&gt;
&lt;li&gt;預期有特殊需求&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Jenkins X&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;應用依賴 Kubernetes 開發，測試，部屬 (ex. kubernetes client-go)&lt;/li&gt;
&lt;li&gt;使用 jx 一站式服務&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;The End&lt;/p&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/jenkins/github-page-qrcode.png&#34; width=&#34;45%&#34; height=&#34;45%&#34; /&gt;


&lt;/figure&gt;
</description>
    </item>
    
    <item>
      <title>從零開始的人臉辨識，七龍珠戰鬥力探測器</title>
      <link>https://chechiachang.github.io/talk/gdg-devfest-2018-scouter/</link>
      <pubDate>Fri, 19 Apr 2019 17:31:58 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/gdg-devfest-2018-scouter/</guid>
      <description>&lt;p&gt;是的，我們做了一款七龍珠中的戰鬥力探測器，透過人臉辨識，探測工程師的開源貢獻力。&lt;/p&gt;

&lt;p&gt;本次演講內容有:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;初心者的人臉辨識技術 ，Face Recognition API&lt;/li&gt;
&lt;li&gt;使用 Golang 在 Github 上做 Data Mining&lt;/li&gt;
&lt;li&gt;從零開始的 side project，開發心路歷程與收穫分享&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Jenkins X on Kubernetes</title>
      <link>https://chechiachang.github.io/post/jenkins-x-on-kubernetes/</link>
      <pubDate>Fri, 19 Apr 2019 12:15:41 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/post/jenkins-x-on-kubernetes/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://jenkins.io/&#34; target=&#34;_blank&#34;&gt;Jenkins&lt;/a&gt; is one of the earliest open source antomation server and remains the most common option in use today. Over the years, Jenkins has evolved into a powerful and flexible framework with hundreds of plugins to support automation for any project.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/&#34; target=&#34;_blank&#34;&gt;Jenkins X&lt;/a&gt;, on the other hand, is a CI/CD platform (Jenkins Platform) for modern cloud applications on Kubernetes.&lt;/p&gt;

&lt;p&gt;Here we talk about some basic concepts about Jenkins X and provide a hand-to-hand guide to deploy jenkins-x on Kubernetes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#architecture&#34;&gt;Architecture of Jenkins X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#install&#34;&gt;Install Jenkins with jx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pipeline&#34;&gt;Create a Pipeline with jx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#client&#34;&gt;Develope with jx client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information about jx itself, check &lt;a href=&#34;https://github.com/jenkins-x/jx&#34; target=&#34;_blank&#34;&gt;Jenkins-X Github Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;architecture&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;architecture&#34;&gt;Architecture&lt;/h1&gt;

&lt;p&gt;Check this beautiful diagram.&lt;/p&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/jenkins/architecture-serverless.png&#34; /&gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; &gt;
  &lt;h4&gt;&lt;a href=&#34;https://jenkins-x.io/architecture/diagram/&#34; target=&#34;_blank&#34;&gt;https://jenkins-x.io/architecture/diagram/&lt;/a&gt;&lt;/h4&gt;
  
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;install&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;install&#34;&gt;Install&lt;/h1&gt;

&lt;h3 id=&#34;create-gke-cluster-get-credentials&#34;&gt;Create GKE cluster &amp;amp; Get Credentials&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;gcloud init
gcloud components update
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;CLUSTER_NAME=jenkins-server
#CLUSTER_NAME=jenkins-serverless

gcloud container clusters create ${CLUSTER_NAME} \
  --num-nodes 1 \
  --machine-type n1-standard-4 \
  --enable-autoscaling \
  --min-nodes 1 \
  --max-nodes 2 \
  --zone asia-east1-b \
  --preemptible

# After cluster initialization, get credentials to access cluster with kubectl
gcloud container clusters get-credentials ${CLUSTER_NAME}

# Check cluster stats.
kubectl get nodes
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-jx-on-local-machine&#34;&gt;Install jx on Local Machine&lt;/h3&gt;

&lt;p&gt;[Jenkins X Release](&lt;a href=&#34;https://github.com/jenkins-x/jx/releases](https://github.com/jenkins-x/jx/releases&#34; target=&#34;_blank&#34;&gt;https://github.com/jenkins-x/jx/releases](https://github.com/jenkins-x/jx/releases&lt;/a&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;JX_VERSION=v2.0.2
OS_ARCH=darwin-amd64
#OS_ARCH=linux-amd64
curl -L https://github.com/jenkins-x/jx/releases/download/&amp;quot;${JX_VERSION}&amp;quot;/jx-&amp;quot;${OS_ARCH}&amp;quot;.tar.gz | tar xzv
sudo mv jx /usr/local/bin
jx version

NAME               VERSION
jx                 2.0.2
Kubernetes cluster v1.11.7-gke.12
kubectl            v1.11.9-dispatcher
helm client        v2.11.0+g2e55dbe
helm server        v2.11.0+g2e55dbe
git                git version 2.20.1
Operating System   Mac OS X 10.14.4 build 18E226
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;option-1-install-serverless-jenkins-pipeline&#34;&gt;(Option 1) Install Serverless Jenkins Pipeline&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;DEFAULT_PASSWORD=mySecretPassWord123
jx install \
  --default-admin-password=${DEFAULT_PASSWORD} \
  --provider=&#39;gke&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Options:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;Enter Github user name&lt;/li&gt;
&lt;li&gt;Enter Github personal api token for CI/CD&lt;/li&gt;
&lt;li&gt;Enable Github as Git pipeline server&lt;/li&gt;
&lt;li&gt;Select Jenkins installation type:

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Serverless Jenkins X Pipelines with Tekon&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Static Master Jenkins&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Pick default workload build pack

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Kubernetes Workloads: Automated CI+CD with GitOps Promotion&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Library Workloads: CI+Release but no CD&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Select the organization where you want to create the environment repository:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;chechiachang&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Your Kubernetes context is now set to the namespace: jx
INFO[0231] To switch back to your original namespace use: jx namespace jx
INFO[0231] Or to use this context/namespace in just one terminal use: jx shell
INFO[0231] For help on switching contexts see: https://jenkins-x.io/developing/kube-context/
INFO[0231] To import existing projects into Jenkins:       jx import
INFO[0231] To create a new Spring Boot microservice:       jx create spring -d web -d actuator
INFO[0231] To create a new microservice from a quickstart: jx create quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;option-2-install-static-jenkins-server&#34;&gt;(Option 2) Install Static Jenkins Server&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;DEFAULT_PASSWORD=mySecretPassWord123

jx install \
  --default-admin-password=${DEFAULT_PASSWORD} \
  --provider=&#39;gke&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Options:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;Enter Github user name&lt;/li&gt;
&lt;li&gt;Enter Github personal api token for CI/CD&lt;/li&gt;
&lt;li&gt;Enable Github as Git pipeline server&lt;/li&gt;
&lt;li&gt;Select Jenkins installation type:

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Serverless Jenkins X Pipelines with Tekon&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Static Master Jenkins&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Pick default workload build pack

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Kubernetes Workloads: Automated CI+CD with GitOps Promotion&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Library Workloads: CI+Release but no CD&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Select the organization where you want to create the environment repository:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;chechiachang&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INFO[0465]Your Kubernetes context is now set to the namespace: jx
INFO[0465] To switch back to your original namespace use: jx namespace default
INFO[0465] Or to use this context/namespace in just one terminal use: jx shell
INFO[0465] For help on switching contexts see: https://jenkins-x.io/developing/kube-context/
INFO[0465] To import existing projects into Jenkins:       jx import
INFO[0465] To create a new Spring Boot microservice:       jx create spring -d web -d actuator
INFO[0465] To create a new microservice from a quickstart: jx create quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Access Static Jenkins Server through Domain with username and password
Domain &lt;a href=&#34;http://jenkins.jx.11.22.33.44.nip.io/&#34; target=&#34;_blank&#34;&gt;http://jenkins.jx.11.22.33.44.nip.io/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;uninstall&#34;&gt;Uninstall&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx uninstall
# rm -rf ~/.jx
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;pipeline&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;setup-ci-cd-pipeline&#34;&gt;Setup CI/CD Pipeline&lt;/h1&gt;

&lt;h3 id=&#34;create-quickstart-repository&#34;&gt;Create Quickstart Repository&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;kubectl get pods --namespace jx --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# cd workspace
jx create quickstart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Which organisation do you want to use? chechiachang&lt;/li&gt;
&lt;li&gt;Enter the new repository name:  serverless-jenkins-quickstart&lt;/li&gt;

&lt;li&gt;&lt;p&gt;select the quickstart you wish to create  [Use arrows to move, type to filter]
angular-io-quickstart
aspnet-app
dlang-http
&amp;gt; golang-http
jenkins-cwp-quickstart
jenkins-quickstart
node-http&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INFO[0121] Watch pipeline activity via:    jx get activity -f serverless-jenkins-quickstart -w
INFO[0121] Browse the pipeline log via:    jx get build logs chechiachang/serverless-jenkins-quickstart/master
INFO[0121] Open the Jenkins console via    jx console
INFO[0121] You can list the pipelines via: jx get pipelines
INFO[0121] Open the Jenkins console via    jx console
INFO[0121] You can list the pipelines via: jx get pipelines
INFO[0121] When the pipeline is complete:  jx get applications
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;check-log-of-the-first-run&#34;&gt;Check log of the first run&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx logs pipeline
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;add-step-to-pipeline&#34;&gt;Add Step to Pipeline&lt;/h3&gt;

&lt;p&gt;Add a setup step for pullrequest&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd serverless-jenkins-quickstart
jx create step --pipeline pullrequest \
  --lifecycle setup \
  --mode replace \
  --sh &amp;quot;echo hello world&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Validate pipeline step for each modification&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx step validate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A build-pack pod started after git push. Watch pod status with kubectl.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl get pods --namespace jx --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;check-build-status-on-prow-serverless&#34;&gt;Check Build Status on Prow (Serverless)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://deck.jx.130.211.245.13.nip.io/&#34; target=&#34;_blank&#34;&gt;http://deck.jx.130.211.245.13.nip.io/&lt;/a&gt;
Login with username and password&lt;/p&gt;

&lt;h3 id=&#34;import-existing-repository&#34;&gt;Import Existing Repository&lt;/h3&gt;

&lt;p&gt;In source code repository:&lt;/p&gt;

&lt;p&gt;Import jx to remote jenkins-server. This will apply a Jenkinsfile to repository by default&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx import --url git@github.com:chechiachang/serverless-jenkins-quickstart.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Update jenkins-x.yml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx create step
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git commit &amp;amp; push&lt;/p&gt;

&lt;h3 id=&#34;trouble-shooting&#34;&gt;Trouble Shooting&lt;/h3&gt;

&lt;p&gt;Failed to get jx resources&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx get pipelines
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make sure your jx (or kubectl) context is with the correct GKE and namespace&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kc config set-context gke_my-project_asia-east1-b_jenkins \
  --namespace=jx
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;why-not-use-helm-chart&#34;&gt;Why not use helm chart?&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s readlly depend on what we need in CI/CD automation.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/helm/charts/tree/master/stable/jenkins&#34; target=&#34;_blank&#34;&gt;Jenkins Helm Chart&lt;/a&gt; create Jenkins master and slave cluster on Kubernetes utilizing the Jenkins Kubernetes plugin.
Jenkin Platform with jx is Jenkins Platform native to Kubernetes. It comes with powerful cloud native components like Prow automation, Nexus, Docker Registry, Tekton Pipeline, &amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;check-jenkins-x-examples&#34;&gt;Check jenkins-x examples&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&#34; target=&#34;_blank&#34;&gt;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;client&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;client&#34;&gt;Client&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;jx get urls
Name                      URL
jenkins                   http://jenkins.jx.11.22.33.44.nip.io
jenkins-x-chartmuseum     http://chartmuseum.jx.11.22.33.44.nip.io
jenkins-x-docker-registry http://docker-registry.jx.11.22.33.44.nip.io
jenkins-x-monocular-api   http://monocular.jx.11.22.33.44.nip.io
jenkins-x-monocular-ui    http://monocular.jx.11.22.33.44.nip.io
nexus                     http://nexus.jx.11.22.33.44.nip.io
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-cluster-status&#34;&gt;Get Cluster Status&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx diagnose
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-applications-pipelines&#34;&gt;Get Applications &amp;amp; Pipelines&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx get applications
jx get pipelines
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-ci-activities-build-log&#34;&gt;Get CI Activities &amp;amp; build log&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx get activities
jx get activities --filter=&#39;jenkins-x-on-kubernetes&#39;

jx get build log

INFO[0003] view the log at: http://jenkins.jx.11.22.33.44.nip.io/job/chechiachang/job/jenkins-x-on-kubernetes/job/feature-add-test/3/console
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;trigger-build-check-activity&#34;&gt;Trigger Build &amp;amp; Check Activity&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx start pipeline
jx start pipeline --filter=&#39;jenkins-x-on-kubernetes/feature-add-test&#39;

jx get activities --filter=&#39;jenkins-x-on-kubernetes&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-pull-request&#34;&gt;Create Pull Request&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx create pullrequest
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Jenkins X on Kubernetes</title>
      <link>https://chechiachang.github.io/project/jenkins-x-on-kubernetes/</link>
      <pubDate>Fri, 19 Apr 2019 11:11:59 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/project/jenkins-x-on-kubernetes/</guid>
      <description>&lt;p&gt;An example project to demonstrate a working pipeline with jenkins-x on Kubernetes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ELK for Applications on Kubernetes</title>
      <link>https://chechiachang.github.io/talk/elk-on-kubernetes/</link>
      <pubDate>Tue, 22 Jan 2019 19:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/elk-on-kubernetes/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go Webassembly Intro</title>
      <link>https://chechiachang.github.io/talk/go-webassembly-intro/</link>
      <pubDate>Tue, 18 Dec 2018 19:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/go-webassembly-intro/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kubernetes Container Runtime Interface</title>
      <link>https://chechiachang.github.io/post/kubernetes-container-runtime-interface/</link>
      <pubDate>Sat, 06 Oct 2018 12:07:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/post/kubernetes-container-runtime-interface/</guid>
      <description>&lt;p&gt;-&amp;gt; &lt;a href=&#34;https://chechiachang.github.io/slides/container-runtime-interface/&#34; target=&#34;_blank&#34;&gt;Slides here&lt;/a&gt; &amp;lt;-&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用 go-github 接 github api</title>
      <link>https://chechiachang.github.io/talk/go-github/</link>
      <pubDate>Tue, 28 Aug 2018 19:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/go-github/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CRI, OCI, CRI-O</title>
      <link>https://chechiachang.github.io/slides/container-runtime-interface/</link>
      <pubDate>Sun, 19 Aug 2018 18:00:35 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/slides/container-runtime-interface/</guid>
      <description>

&lt;p&gt;footer: Che-Chia David Chang, 2018,  &lt;a href=&#34;https://github.com/chechiachang&#34; target=&#34;_blank&#34;&gt;https://github.com/chechiachang&lt;/a&gt;
slidenumbers: true&lt;/p&gt;

&lt;h1 id=&#34;cri-oci-cri-o&#34;&gt;CRI, OCI, CRI-O&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;David Chang DevOps @ Mithril
Back-End Developer, Kuberentes admin, DevOps&lt;/p&gt;

&lt;p&gt;


  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/davidchang.jpg&#34; /&gt;


&lt;/figure&gt;



  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/mithril.jpg&#34; /&gt;


&lt;/figure&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;outline&#34;&gt;Outline&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Container Runtime Interface (CRI)&lt;/li&gt;
&lt;li&gt;Open Container Initiative (OCI)&lt;/li&gt;
&lt;li&gt;CRI-O&lt;/li&gt;
&lt;li&gt;Kubernetes on CRI-O&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;


  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/cri-o.png&#34; /&gt;


&lt;/figure&gt;



  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/kubernetes.png&#34; /&gt;


&lt;/figure&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;trend-kubernetes&#34;&gt;Trend Kubernetes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Kubernetes 1.3 introduced rktnetes&lt;/li&gt;
&lt;li&gt;Kubernetes 1.5 introduced CRI&lt;/li&gt;
&lt;li&gt;Kubernetes 1.7 removed pre-CRI Docker / rkt integration&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Currently works Kubelet to use CRI&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;CRI-O: released 1.0.x to match Kubernetes 1.7&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;nomination&#34;&gt;Nomination&lt;/h3&gt;

&lt;p&gt;CRI-O
- OCI-based implementation of Kubernetes Container Runtime Interface&lt;/p&gt;

&lt;p&gt;CRI
- Kubernetes Container Runtime Interface&lt;/p&gt;

&lt;p&gt;OCI
- Open Container initiative&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;projects-with-container-runtime&#34;&gt;Projects with Container Runtime&lt;/h3&gt;

&lt;p&gt;docker, rkt, LXC/LXD, runC, containerd, OpenVZ, systemd-nspawn, machinectl, qemu-kvm, lkvm&amp;hellip;&lt;/p&gt;

&lt;p&gt;Kubernetes (before 1.6) native supports
- Docker
- rkt&lt;/p&gt;

&lt;p&gt;


  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/docker-angry.png&#34; /&gt;


&lt;/figure&gt;



  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/rkt.png&#34; /&gt;


&lt;/figure&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;container-runtime-interface-cri&#34;&gt;Container Runtime Interface(CRI)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Enable Kubernetes to support more runtimes&lt;/li&gt;
&lt;li&gt;Free kubernetes to focus on orchestration from runtime integration&lt;/li&gt;
&lt;li&gt;Consists

&lt;ul&gt;
&lt;li&gt;a protocol buffers and gRPC API&lt;/li&gt;
&lt;li&gt;libraries, additional specifications and tools&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;container-runtime-interface-cri-1&#34;&gt;Container Runtime Interface(CRI)&lt;/h3&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/containerd.png&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;cri-api-in-kubernetes&#34;&gt;CRI api in kubernetes&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/apis/cri/runtime/v1alpha2/api.proto&#34; target=&#34;_blank&#34;&gt;https://github.com/kubernetes/kubernetes/
blob/master/pkg/kubelet/apis/
cri/runtime/v1alpha2/api.proto&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;cri-runtimes&#34;&gt;CRI runtimes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Docker CRI shim (cri-containerd)&lt;/li&gt;
&lt;li&gt;CoreOS &lt;a href=&#34;https://github.com/kubernetes-incubator/rktlet&#34; target=&#34;_blank&#34;&gt;rktlet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/frakti&#34; target=&#34;_blank&#34;&gt;frakti&lt;/a&gt;: hypervisor-based container runtimes&lt;/li&gt;
&lt;li&gt;Intel &lt;a href=&#34;https://github.com/clearcontainers/runtime&#34; target=&#34;_blank&#34;&gt;Clear container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenStack &lt;a href=&#34;https://github.com/kata-containers/runtime&#34; target=&#34;_blank&#34;&gt;kata runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cri-o.io/&#34; target=&#34;_blank&#34;&gt;cri-o&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;open-container-inititive-oci&#34;&gt;Open Container Inititive (OCI)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;open governance structure&lt;/li&gt;

&lt;li&gt;&lt;p&gt;container industry standards&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/opencontainers/runtime-spec/blob/master/spec.md&#34; target=&#34;_blank&#34;&gt;runtime spec&lt;/a&gt; defines configuration, execution environment, and lifecycle of a container&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/opencontainers/image-spec/blob/master/spec.md&#34; target=&#34;_blank&#34;&gt;image spec&lt;/a&gt; spec on archetecture and OS, filesystem layers and configuration&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;oci-from-aspect-of-user&#34;&gt;OCI from aspect of user&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use all OCI-conplimant container runtime&lt;/li&gt;
&lt;li&gt;Use all OCI-complimant images registries&lt;/li&gt;
&lt;li&gt;Similar UX&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://www.opencontainers.org/blog/2018/06/20/cri-o-how-standards-power-a-container-runtime&#34; target=&#34;_blank&#34;&gt;https://www.opencontainers.org/blog/2018/06/20/cri-o-how-standards-power-a-container-runtime&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;cri-o&#34;&gt;CRI-O&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;OCI-based implementation of Kubernetes Container Runtime Interface&lt;/li&gt;
&lt;li&gt;Kubernetes incubator project also part of the CNCF&lt;/li&gt;
&lt;li&gt;Dedicated for Kubernetes&lt;/li&gt;
&lt;li&gt;Enable CRI-O plugin to other runtimes&lt;/li&gt;
&lt;li&gt;Available on RHEL, Fedora, Centos, Ubuntu&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://cri-o.io/&#34; target=&#34;_blank&#34;&gt;http://cri-o.io/&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;cri-o-vs-docker-containerd&#34;&gt;CRI-O vs Docker (containerd)&lt;/h3&gt;

&lt;p&gt;kubelet -&amp;gt; cri-containerd (shim) -&amp;gt; containerd -&amp;gt; runC -&amp;gt; container
kubelet -&amp;gt; cri-o -&amp;gt; runC -&amp;gt; container&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lightweight&lt;/li&gt;
&lt;li&gt;Stability

&lt;ul&gt;
&lt;li&gt;built for Kubernetes&lt;/li&gt;
&lt;li&gt;No cli, image utilities, &amp;hellip;&lt;/li&gt;
&lt;li&gt;No swarm, mesosphere integration, &amp;hellip;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/cri-o-arch.png&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;let-s-use-cri-o&#34;&gt;Let&amp;rsquo;s use CRI-O&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/cri-o&#34; target=&#34;_blank&#34;&gt;Install cri-o&lt;/a&gt; and dependencies, runC and CNI&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install &lt;a href=&#34;https://github.com/containers/libpod&#34; target=&#34;_blank&#34;&gt;Podman&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Podman to cri-o as Docker-cli to Docker daemon&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo podman run --name my-golang golang:alpine bash
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/minikube/blob/master/docs/alternative_runtimes.md#using-cri-o&#34; target=&#34;_blank&#34;&gt;Minikube&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;minikube start \
  --network-plugin=cni \
  --container-runtime=cri-o

minikube start \
  --network-plugin=cni \
  --extra-config=kubelet.container-runtime=remote \
  --extra-config=kubelet.container-runtime-endpoint=/var/run/crio/crio.sock \
  --extra-config=kubelet.image-service-endpoint=/var/run/crio/crio.sock
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;run-kubernetes-on-cri-o&#34;&gt;Run Kubernetes on CRI-O&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-incubator/kubespray/blob/master/docs/cri-o.md&#34; target=&#34;_blank&#34;&gt;Kubespray&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubeadm_enabled: true
...
container_manager: crio
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/cri-o/blob/master/kubernetes.md&#34; target=&#34;_blank&#34;&gt;Full cluster&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubelet --container-runtime-endpoint=unix:///var/run/crio/crio.sock
...
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/&lt;/a&gt;
&lt;a href=&#34;https://kubernetes.io/blog/2017/11/containerd-container-runtime-options-kubernetes/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/blog/2017/11/containerd-container-runtime-options-kubernetes/&lt;/a&gt;
Rttps://kubernetes.io/blog/2017/11/containerd-container-runtime-options-kubernetes/
&lt;a href=&#34;https://xuxinkun.github.io/2017/12/12/docker-oci-runc-and-kubernetes/&#34; target=&#34;_blank&#34;&gt;https://xuxinkun.github.io/2017/12/12/docker-oci-runc-and-kubernetes/&lt;/a&gt;
&lt;a href=&#34;https://www.kubernetes.org.cn/1079.html&#34; target=&#34;_blank&#34;&gt;https://www.kubernetes.org.cn/1079.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
