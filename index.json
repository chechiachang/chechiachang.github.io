[{"authors":["admin"],"categories":null,"content":"我是Che-Chia Chang，社群上常用的名子是 David Chang. 我是個軟體工程師，專長的領域是後端開發，開發維運，容器化應用，以及Kubernetes開發管理。目前為 Golang Taiwan Meetup 的 organizer。對 Golang 有興趣的朋友請務必加入。\nHi, I\u0026rsquo;m Che-Chia Chang. Also known as David Chang in communities in Taiwan. I\u0026rsquo;m a software engineer specilized in Back-End development, DevOps, containerization and Kubernetes administration. I\u0026rsquo;m hosting a developer community, Golang Taiwan Meetup. Join us if you are interested in Golang!\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1554199572,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"https://chechiachang.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"我是Che-Chia Chang，社群上常用的名子是 David Chang. 我是個軟體工程師，專長的領域是後端開發，開發維運，容器化應用，以及Kubernetes開發管理。目前為 Golang Taiwan Meetup 的 organizer。對 Golang 有興趣的朋友請務必加入。\nHi, I\u0026rsquo;m Che-Chia Chang. Also known as David Chang in communities in Taiwan. I\u0026rsquo;m a software engineer specilized in Back-End development, DevOps, containerization and Kubernetes administration. I\u0026rsquo;m hosting a developer community, Golang Taiwan Meetup. Join us if you are interested in Golang!","tags":null,"title":"Che-Chia Chang","type":"author"},{"authors":[],"categories":[],"content":" API resources kubectl api-resources  ","date":1561094273,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1566547740,"objectID":"cb4f5e8cea40783770693b4e6baf0d66","permalink":"https://chechiachang.github.io/post/kuberentes-source-code/","publishdate":"2019-06-21T13:17:53+08:00","relpermalink":"/post/kuberentes-source-code/","section":"post","summary":" API resources kubectl api-resources  ","tags":[],"title":"Kuberentes Source Code","type":"post"},{"authors":null,"categories":null,"content":"","date":1559454714,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559455067,"objectID":"39a764db7449bf949f1eb4b54becb2be","permalink":"https://chechiachang.github.io/project/quantum-computing-journey/","publishdate":"2019-06-02T13:51:54+08:00","relpermalink":"/project/quantum-computing-journey/","section":"project","summary":"","tags":["quantum-computing","ibm-q-experience","tutorial"],"title":"Quantum Computing Journey","type":"project"},{"authors":[],"categories":[],"content":" This post is about my learning steps for quantum-computing.\nFor a quick-start tutorial, check my workshop project throught the project link above.\nResources Courses\nCoursera\non MIT x pro\nQuantum Information Processing from UW Madison\nQuantum Computation by John Preskill\nIBM Q Experience\nhttps://github.com/Qiskit/openqasm\nhttps://github.com/Qiskit/qiskit-tutorials\nIBM Q Experience Day 1 Getting Started with Circuit Composer\nHello Quantum World circuit transformed two qubits, from $ \\vert0\\rangle $ to $ \\frac{\\vert00\\rangle + \\vert11\\rangle}{\\sqrt{2}} $\nQuestions\n [] Hadamard Gate [] Bell states  [] Annotations   ","date":1559442097,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559531117,"objectID":"291a457ec654f749d1a75bb365b864ef","permalink":"https://chechiachang.github.io/post/journey-to-quantum-computing/","publishdate":"2019-06-02T10:21:37+08:00","relpermalink":"/post/journey-to-quantum-computing/","section":"post","summary":"This post is about my learning steps for quantum-computing.\nFor a quick-start tutorial, check my workshop project throught the project link above.\nResources Courses\nCoursera\non MIT x pro\nQuantum Information Processing from UW Madison\nQuantum Computation by John Preskill\nIBM Q Experience\nhttps://github.com/Qiskit/openqasm\nhttps://github.com/Qiskit/qiskit-tutorials\nIBM Q Experience Day 1 Getting Started with Circuit Composer\nHello Quantum World circuit transformed two qubits, from $ \\vert0\\rangle $ to $ \\frac{\\vert00\\rangle + \\vert11\\rangle}{\\sqrt{2}} $","tags":["quantum-computing","ibm-q-experience","tutorial"],"title":"Journey to Quantum Computing","type":"post"},{"authors":[],"categories":null,"content":" Outlines 傳統的 Monolith被分解為分散的微服務，以取得更高的效能與更彈性的管理。當眾多的為服務同時運作，產生複雜的依賴與交流，網路層不再只是有『有通就好』，而是需要精細且彈性的流量管理與監控，來提供穩定的效能。本次主題將基於 Kubernetes 平台上的 Istio ，探討 Service Mesh 的概念與相關應用。\n 何為 Service Mesh ？為何需要 Service Mesh ？ Service Mesh 基本概念 如何Service-to-Service的網路層管理監控 導入 Istio 到 Kubernetes  目標聽眾  微運大量微服務，希望導入Service Mesh 的Operator 想了解微服務生態中竄紅的 Service Mesh  收穫  了解為服務的優勢與Cloud Native應用發展趨勢 了解 Service Mesh 與 Istio 觀念 能使用 Istio 於 Kubernetes，進行服務網路的管理。  你有聽過 Microservice / Istio有聽過嗎？ 今天來介紹一款好藥：Istio。如果你有以下問題：\n 維運大量(成千上百)微服務 需要服務對服務的流量控制，監控，管理  談 Service Mesh 之前，不免的要先談一下 Microservice，這個目前好像很夯的一個技術名詞。\n如果手上有一個 App，會希望依照 Monolith 的架構，或是 Microservices？ Microservices 聽起來又新又潮。相對於 Monolith有許多明顯的好處：\n Decoupling Scalability Performance  也有明顯的壞處：\n Development Complexity Operation Cost   沒事別挖坑跳\n 何為 Service Mesh？\n Service Mesh: Model / Pattern Implementations: linkerd, istio, \u0026hellip; 基於底層的網路服務，在複雜的 topology 中可靠的傳遞  使用Microservie 可能會遇到的問題：\n Traffic control Monitoring A/B Testing  ","date":1557892800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1558582214,"objectID":"ab0c03aeb8a862eb9ba49b1163a53255","permalink":"https://chechiachang.github.io/talk/service-mesh-for-microservices-on-kubernetes/","publishdate":"2019-04-02T17:10:57+08:00","relpermalink":"/talk/service-mesh-for-microservices-on-kubernetes/","section":"talk","summary":"基於 Kubernetes 平台上的 Istio ，探討 Service Mesh 的概念與相關應用。","tags":["kubernetes","istio","service-mesh"],"title":"Service Mesh for Microservices on Kubernetes","type":"talk"},{"authors":[],"categories":[],"content":" Create GKE gcloud beta container --project \u0026quot;istio-playground-239810\u0026quot; clusters create \u0026quot;istio-playground\u0026quot; \\ --zone \u0026quot;asia-east1-b\u0026quot; \\ --username \u0026quot;admin\u0026quot; \\ --cluster-version \u0026quot;1.11.8-gke.6\u0026quot; \\ --machine-type \u0026quot;n1-standard-2\u0026quot; \\ --image-type \u0026quot;COS\u0026quot; \\ --disk-type \u0026quot;pd-standard\u0026quot; \\ --disk-size \u0026quot;100\u0026quot; \\ --preemptible \\ --num-nodes \u0026quot;1\u0026quot; \\ --enable-cloud-logging \\ --enable-cloud-monitoring \\ --no-enable-ip-alias \\ --addons HorizontalPodAutoscaling,HttpLoadBalancing,KubernetesDashboard,Istio \\ --istio-config auth=MTLS_PERMISSIVE \\ --no-enable-autoupgrade \\ --enable-autorepair  Take a Peek $ kubectl get namespaces NAME STATUS AGE default Active 2m istio-system Active 1m kube-public Active 2m kube-system Active 2m $ kubectl get po -n istio-system NAME READY STATUS RESTARTS AGE istio-citadel-7f6f77cd7b-nxfbf 1/1 Running 0 3m istio-cleanup-secrets-h454m 0/1 Completed 0 3m istio-egressgateway-7c56db84cc-nlrwq 1/1 Running 0 3m istio-galley-6c747bdb4f-45jrp 1/1 Running 0 3m istio-ingressgateway-6ff68cf95d-tlkq4 1/1 Running 0 3m istio-pilot-8ff66f8c4-q9chz 2/2 Running 0 3m istio-policy-69b78b7d6-c8pld 2/2 Running 0 3m istio-sidecar-injector-558996c897-hr6q4 1/1 Running 0 3m istio-telemetry-f96459fb-5cbpg 2/2 Running 0 3m promsd-ff878d44b-hv8nh 2/2 Running 1 3m  Deploy app kubectl label namespace default istio-injection=enabled  Bookinfo Application\nkubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.1/samples/bookinfo/platform/kube/bookinfo.yaml kubectl get pods kubectl get services  Gateway\nkubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.1/samples/bookinfo/networking/bookinfo-gateway.yaml kubectl get gateways kubectl get svc istio-ingressgateway -n istio-system  Go to ingress public ip\nexport INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}') export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\u0026quot;http2\u0026quot;)].port}') export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\u0026quot;https\u0026quot;)].port}') curl -v ${INGRESS_HOST}:{$INGRESS_PORT}/productpage 404 Not Found  Apply destination rules\nkubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.1/samples/bookinfo/networking/destination-rule-all.yaml curl -v ${INGRESS_HOST}:{$INGRESS_PORT}/productpage  Brief review kubectl get virtualservices kubectl get destinationrules kubectl get gateways  Istio Tasks https://istio.io/docs/tasks/traffic-management/\n","date":1557137535,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557885090,"objectID":"262caf52e34b5cf4614d25adf2d45618","permalink":"https://chechiachang.github.io/post/service-mesh-for-microservice-on-kubernetes/","publishdate":"2019-05-06T18:12:15+08:00","relpermalink":"/post/service-mesh-for-microservice-on-kubernetes/","section":"post","summary":"基於 Kubernetes 平台上的 Istio ，實際部署，並一步一步操作Istio 的功能。","tags":["kubernetes","istio","service-mesh"],"title":"Istio 三分鐘就入坑 佈署篇","type":"post"},{"authors":[],"categories":null,"content":" How to deploy a cloud-native Jenkins with Jenkins X. A pipeline with Kubernetes based dynamics worker sclaing (jenkins-kubernetes). Give it a try. (Defered) Customized test reports for multiple language (ex. go-junit-report)  ","date":1555736400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555683962,"objectID":"3212c13fe0ec93769c195996be6fa2a5","permalink":"https://chechiachang.github.io/talk/jenkins-on-kubernetes/","publishdate":"2019-04-09T15:29:21+08:00","relpermalink":"/talk/jenkins-on-kubernetes/","section":"talk","summary":"Working pipeline with jenkins-x on Kubernetes.","tags":["kubernetes","jenkins","devops"],"title":"Jenkins on Kubernetes","type":"talk"},{"authors":null,"categories":null,"content":" Jenkins  One of the earliest open source antomation server Most common option in use Flexible and customizable. Hundreds of plugins Support automation for any project  Jenkins X  CI/CD platform (Jenkins Platform) Cloud native serverless For modern cloud applications on Kubernetes.  Outlines  Install Jenkins with jx Create a Pipeline with jx Develope with jx client  check Jenkins-X Github Repo\n\nInstall Create GKE cluster \u0026amp; Get Credentials\ngcloud init gcloud components update  CLUSTER_NAME=jenkins-server #CLUSTER_NAME=jenkins-serverless gcloud container clusters create ${CLUSTER_NAME} \\ --num-nodes 1 \\ --machine-type n1-standard-4 \\ --enable-autoscaling \\ --min-nodes 1 \\ --max-nodes 2 \\ --zone asia-east1-b \\ --preemptible  Create GKE cluster \u0026amp; Get Credentials\n# Get credentials to access cluster with kubectl gcloud container clusters get-credentials ${CLUSTER_NAME} # Check cluster stats. kubectl get nodes  Download Jenkins X Release \u0026amp; install jx on Local Machine\nJX_VERSION=v2.0.2 OS_ARCH=darwin-amd64 #OS_ARCH=linux-amd64 curl -L https://github.com/jenkins-x/jx/releases/download/\u0026quot;${JX_VERSION}\u0026quot;/jx-\u0026quot;${OS_ARCH}\u0026quot;.tar.gz | tar xzv sudo mv jx /usr/local/bin jx version NAME VERSION jx 2.0.2 Kubernetes cluster v1.11.7-gke.12 kubectl v1.11.9-dispatcher helm client v2.11.0+g2e55dbe helm server v2.11.0+g2e55dbe git git version 2.20.1 Operating System Mac OS X 10.14.4 build 18E226  (Install Option 1) Serverless Jenkins Pipeline\nDEFAULT_PASSWORD=mySecretPassWord123 jx install \\ --default-admin-password=${DEFAULT_PASSWORD} \\ --provider='gke'  Install options:\nSelect Jenkins installation type: Serverless Jenkins X Pipelines with Tekon Static Master Jenkins  Pick default workload build pack\nKubernetes Workloads: Automated CI+CD with GitOps Promotion [ ] Library Workloads: CI+Release but no CD\nYour Kubernetes context is now set to the namespace: jx INFO[0231] To switch back to your original namespace use: jx namespace jx ...    (Install Option 2) Static Jenkins Server\nDEFAULT_PASSWORD=mySecretPassWord123 jx install \\ --default-admin-password=${DEFAULT_PASSWORD} \\ --provider='gke'  Options:\nSelect Jenkins installation type: Serverless Jenkins X Pipelines with Tekon Static Master Jenkins  Pick default workload build pack\nKubernetes Workloads: Automated CI+CD with GitOps Promotion [ ] Library Workloads: CI+Release but no CD\nINFO[0465]Your Kubernetes context is now set to the namespace: jx INFO[0465] To switch back to your original namespace use: jx namespace default Access Static Jenkins Server through Domain with username and password Domain http://jenkins.jx.11.22.33.44.nip.io/    Uninstall jx uninstall # rm -rf ~/.jx  Setup CI/CD Pipeline Create Quickstart Repository\nkubectl get pods --namespace jx --watch  # cd workspace jx create quickstart  Options:\n$ select the quickstart you wish to create [Use arrows to move, type to filter] aspnet-app dlang-http \u0026gt; golang-http jenkins-cwp-quickstart jenkins-quickstart node-http INFO[0121] Watch pipeline activity via: jx get activity -f serverless-jenkins-quickstart -w  Check log of the first run\njx logs pipeline  Add a setup step for pullrequest\ncd serverless-jenkins-quickstart jx create step --pipeline pullrequest \\ --lifecycle setup \\ --mode replace \\ --sh \u0026quot;echo hello world\u0026quot;  Validate pipeline step for each modification\njx step validate  A build-pack pod started after git push. Watch pod status with kubectl.\nkubectl get pods --namespace jx --watch  Check Build Status on Prow (Serverless)\nhttp://deck.jx.130.211.245.13.nip.io/ Login with username and password\nImport Existing Repository\n# In source code repository # Import jx to remote jenkins-server. This will apply a Jenkinsfile to repository by default jx import \\ --url git@github.com:chechiachang/serverless-jenkins-quickstart.git  Update jenkins-x.yml\njx create step git commit git push  Trouble Shooting: Failed to get jx resources\njx get pipelines  Make sure your jx (or kubectl) context is with the correct GKE and namespace\nkc config set-context gke_my-project_asia-east1-b_jenkins \\ --namespace=jx  Helm vs Jenkins X  Jenkins Helm Chart\n create Jenkins master and slave cluster on Kubernetes utilizing the Jenkins Kubernetes plugin.  Jenkin Platform with jx\n Jenkins Platform native to Kubernetes Powerful cloud native components: Prow, Nexus, Docker Registry, Tekton Pipeline, \u0026hellip;   Check jenkins-x examples https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs\njx Client jx get urls Name URL jenkins http://jenkins.jx.11.22.33.44.nip.io jenkins-x-chartmuseum http://chartmuseum.jx.11.22.33.44.nip.io jenkins-x-docker-registry http://docker-registry.jx.11.22.33.44.nip.io jenkins-x-monocular-api http://monocular.jx.11.22.33.44.nip.io jenkins-x-monocular-ui http://monocular.jx.11.22.33.44.nip.io nexus http://nexus.jx.11.22.33.44.nip.io  Get Cluster Status\njx diagnose  Get Applications \u0026amp; Pipelines\njx get applications jx get pipelines  Get CI Activities \u0026amp; build log\njx get activities jx get activities --filter='jenkins-x-on-kubernetes' jx get build log INFO[0003] view the log at: http://jenkins.jx.11.22.33.44.nip.io/job/chechiachang/job/jenkins-x-on-kubernetes/job/feature-add-test/3/console ...  Trigger Build \u0026amp; Check Activity\njx start pipeline jx start pipeline --filter='jenkins-x-on-kubernetes/feature-add-test' jx get activities --filter='jenkins-x-on-kubernetes'  Create Pull Request\njx create pullrequest  Summary  Demonstrate a Jenkins pipeline Jenkins plugin  master slave cluster kubernetes plugin lovely GUI  jx on k8s jx cli   Jenkins 簡單用\n 設定與維護人力會比其他工具稍微多  Jenkins 複雜用\n Deep Customization: 希望花時間打造最符合自己需求的工具 預期有特殊需求  Jenkins X\n 應用依賴 Kubernetes 開發，測試，部屬 (ex. kubernetes client-go) 使用 jx 一站式服務   The End\n  ","date":1555681010,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555727102,"objectID":"ca10d1cc241700c13c67d1269f77df8f","permalink":"https://chechiachang.github.io/slides/jenkins-x-on-kubernetes/","publishdate":"2019-04-19T21:36:50+08:00","relpermalink":"/slides/jenkins-x-on-kubernetes/","section":"slides","summary":"Jenkins  One of the earliest open source antomation server Most common option in use Flexible and customizable. Hundreds of plugins Support automation for any project  Jenkins X  CI/CD platform (Jenkins Platform) Cloud native serverless For modern cloud applications on Kubernetes.  Outlines  Install Jenkins with jx Create a Pipeline with jx Develope with jx client  check Jenkins-X Github Repo\n\nInstall Create GKE cluster \u0026amp; Get Credentials","tags":null,"title":"Jenkins X on Kubernetes","type":"slides"},{"authors":[],"categories":null,"content":"是的，我們做了一款七龍珠中的戰鬥力探測器，透過人臉辨識，探測工程師的開源貢獻力。\n本次演講內容有:\n 初心者的人臉辨識技術 ，Face Recognition API 使用 Golang 在 Github 上做 Data Mining 從零開始的 side project，開發心路歷程與收穫分享  ","date":1555666318,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555679944,"objectID":"ba5cd94fc710d297f573c13cc92496c4","permalink":"https://chechiachang.github.io/talk/gdg-devfest-2018-scouter/","publishdate":"2019-04-19T17:31:58+08:00","relpermalink":"/talk/gdg-devfest-2018-scouter/","section":"talk","summary":"是的，我們做了一款七龍珠中的戰鬥力探測器，透過人臉辨識技術探測工程師在Github上的的開源貢獻力","tags":["machine-learning","face-detection","face-recognition","unity","ios","golang","github-api","ar"],"title":"從零開始的人臉辨識，七龍珠戰鬥力探測器","type":"talk"},{"authors":[],"categories":[],"content":" Jenkins is one of the earliest open source antomation server and remains the most common option in use today. Over the years, Jenkins has evolved into a powerful and flexible framework with hundreds of plugins to support automation for any project.\nJenkins X, on the other hand, is a CI/CD platform (Jenkins Platform) for modern cloud applications on Kubernetes.\nHere we talk about some basic concepts about Jenkins X and provide a hand-to-hand guide to deploy jenkins-x on Kubernetes.\n Architecture of Jenkins X Install Jenkins with jx Create a Pipeline with jx Develope with jx client  For more information about jx itself, check Jenkins-X Github Repo\n\nArchitecture Check this beautiful diagram.\n https://jenkins-x.io/architecture/diagram/   \nInstall Create GKE cluster \u0026amp; Get Credentials gcloud init gcloud components update  CLUSTER_NAME=jenkins-server #CLUSTER_NAME=jenkins-serverless gcloud container clusters create ${CLUSTER_NAME} \\ --num-nodes 1 \\ --machine-type n1-standard-4 \\ --enable-autoscaling \\ --min-nodes 1 \\ --max-nodes 2 \\ --zone asia-east1-b \\ --preemptible # After cluster initialization, get credentials to access cluster with kubectl gcloud container clusters get-credentials ${CLUSTER_NAME} # Check cluster stats. kubectl get nodes  Install jx on Local Machine [Jenkins X Release](https://github.com/jenkins-x/jx/releases](https://github.com/jenkins-x/jx/releases)\nJX_VERSION=v2.0.2 OS_ARCH=darwin-amd64 #OS_ARCH=linux-amd64 curl -L https://github.com/jenkins-x/jx/releases/download/\u0026quot;${JX_VERSION}\u0026quot;/jx-\u0026quot;${OS_ARCH}\u0026quot;.tar.gz | tar xzv sudo mv jx /usr/local/bin jx version NAME VERSION jx 2.0.2 Kubernetes cluster v1.11.7-gke.12 kubectl v1.11.9-dispatcher helm client v2.11.0+g2e55dbe helm server v2.11.0+g2e55dbe git git version 2.20.1 Operating System Mac OS X 10.14.4 build 18E226  (Option 1) Install Serverless Jenkins Pipeline DEFAULT_PASSWORD=mySecretPassWord123 jx install \\ --default-admin-password=${DEFAULT_PASSWORD} \\ --provider='gke'  Options:\nEnter Github user name Enter Github personal api token for CI/CD Enable Github as Git pipeline server Select Jenkins installation type: Serverless Jenkins X Pipelines with Tekon Static Master Jenkins  Pick default workload build pack Kubernetes Workloads: Automated CI+CD with GitOps Promotion Library Workloads: CI+Release but no CD  Select the organization where you want to create the environment repository:\n chechiachang\nYour Kubernetes context is now set to the namespace: jx INFO[0231] To switch back to your original namespace use: jx namespace jx INFO[0231] Or to use this context/namespace in just one terminal use: jx shell INFO[0231] For help on switching contexts see: https://jenkins-x.io/developing/kube-context/ INFO[0231] To import existing projects into Jenkins: jx import INFO[0231] To create a new Spring Boot microservice: jx create spring -d web -d actuator INFO[0231] To create a new microservice from a quickstart: jx create quickstart    (Option 2) Install Static Jenkins Server DEFAULT_PASSWORD=mySecretPassWord123 jx install \\ --default-admin-password=${DEFAULT_PASSWORD} \\ --provider='gke'  Options:\nEnter Github user name Enter Github personal api token for CI/CD Enable Github as Git pipeline server Select Jenkins installation type: Serverless Jenkins X Pipelines with Tekon Static Master Jenkins  Pick default workload build pack Kubernetes Workloads: Automated CI+CD with GitOps Promotion Library Workloads: CI+Release but no CD  Select the organization where you want to create the environment repository:\n chechiachang\nINFO[0465]Your Kubernetes context is now set to the namespace: jx INFO[0465] To switch back to your original namespace use: jx namespace default INFO[0465] Or to use this context/namespace in just one terminal use: jx shell INFO[0465] For help on switching contexts see: https://jenkins-x.io/developing/kube-context/ INFO[0465] To import existing projects into Jenkins: jx import INFO[0465] To create a new Spring Boot microservice: jx create spring -d web -d actuator INFO[0465] To create a new microservice from a quickstart: jx create quickstart    Access Static Jenkins Server through Domain with username and password Domain http://jenkins.jx.11.22.33.44.nip.io/\nUninstall jx uninstall # rm -rf ~/.jx  \nSetup CI/CD Pipeline Create Quickstart Repository kubectl get pods --namespace jx --watch  # cd workspace jx create quickstart  Options:\n Which organisation do you want to use? chechiachang Enter the new repository name: serverless-jenkins-quickstart select the quickstart you wish to create [Use arrows to move, type to filter] angular-io-quickstart aspnet-app dlang-http \u0026gt; golang-http jenkins-cwp-quickstart jenkins-quickstart node-http\nINFO[0121] Watch pipeline activity via: jx get activity -f serverless-jenkins-quickstart -w INFO[0121] Browse the pipeline log via: jx get build logs chechiachang/serverless-jenkins-quickstart/master INFO[0121] Open the Jenkins console via jx console INFO[0121] You can list the pipelines via: jx get pipelines INFO[0121] Open the Jenkins console via jx console INFO[0121] You can list the pipelines via: jx get pipelines INFO[0121] When the pipeline is complete: jx get applications   Check log of the first run jx logs pipeline  Add Step to Pipeline Add a setup step for pullrequest\ncd serverless-jenkins-quickstart jx create step --pipeline pullrequest \\ --lifecycle setup \\ --mode replace \\ --sh \u0026quot;echo hello world\u0026quot;  Validate pipeline step for each modification\njx step validate  A build-pack pod started after git push. Watch pod status with kubectl.\nkubectl get pods --namespace jx --watch  Check Build Status on Prow (Serverless) http://deck.jx.130.211.245.13.nip.io/ Login with username and password\nImport Existing Repository In source code repository:\nImport jx to remote jenkins-server. This will apply a Jenkinsfile to repository by default\njx import --url git@github.com:chechiachang/serverless-jenkins-quickstart.git  Update jenkins-x.yml\njx create step  git commit \u0026amp; push\nTrouble Shooting Failed to get jx resources\njx get pipelines  Make sure your jx (or kubectl) context is with the correct GKE and namespace\nkc config set-context gke_my-project_asia-east1-b_jenkins \\ --namespace=jx  Why not use helm chart? It\u0026rsquo;s readlly depend on what we need in CI/CD automation.\nJenkins Helm Chart create Jenkins master and slave cluster on Kubernetes utilizing the Jenkins Kubernetes plugin. Jenkin Platform with jx is Jenkins Platform native to Kubernetes. It comes with powerful cloud native components like Prow automation, Nexus, Docker Registry, Tekton Pipeline, \u0026hellip;\nCheck jenkins-x examples https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs\n\nClient jx get urls Name URL jenkins http://jenkins.jx.11.22.33.44.nip.io jenkins-x-chartmuseum http://chartmuseum.jx.11.22.33.44.nip.io jenkins-x-docker-registry http://docker-registry.jx.11.22.33.44.nip.io jenkins-x-monocular-api http://monocular.jx.11.22.33.44.nip.io jenkins-x-monocular-ui http://monocular.jx.11.22.33.44.nip.io nexus http://nexus.jx.11.22.33.44.nip.io  Get Cluster Status jx diagnose  Get Applications \u0026amp; Pipelines jx get applications jx get pipelines  Get CI Activities \u0026amp; build log jx get activities jx get activities --filter='jenkins-x-on-kubernetes' jx get build log INFO[0003] view the log at: http://jenkins.jx.11.22.33.44.nip.io/job/chechiachang/job/jenkins-x-on-kubernetes/job/feature-add-test/3/console ...  Trigger Build \u0026amp; Check Activity jx start pipeline jx start pipeline --filter='jenkins-x-on-kubernetes/feature-add-test' jx get activities --filter='jenkins-x-on-kubernetes'  Create Pull Request jx create pullrequest  ","date":1555647341,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555655323,"objectID":"cbbd48a2d957ed817017c3a954636f11","permalink":"https://chechiachang.github.io/post/jenkins-x-on-kubernetes/","publishdate":"2019-04-19T12:15:41+08:00","relpermalink":"/post/jenkins-x-on-kubernetes/","section":"post","summary":"Jenkins is one of the earliest open source antomation server and remains the most common option in use today. Over the years, Jenkins has evolved into a powerful and flexible framework with hundreds of plugins to support automation for any project.\nJenkins X, on the other hand, is a CI/CD platform (Jenkins Platform) for modern cloud applications on Kubernetes.\nHere we talk about some basic concepts about Jenkins X and provide a hand-to-hand guide to deploy jenkins-x on Kubernetes.","tags":["jenkins","ci","cd","kubernetes"],"title":"Jenkins X on Kubernetes","type":"post"},{"authors":null,"categories":null,"content":"An example project to demonstrate a working pipeline with jenkins-x on Kubernetes.\n","date":1555643519,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555679944,"objectID":"286a27ce77e0cb13184316712581d55a","permalink":"https://chechiachang.github.io/project/jenkins-x-on-kubernetes/","publishdate":"2019-04-19T11:11:59+08:00","relpermalink":"/project/jenkins-x-on-kubernetes/","section":"project","summary":"An example project to demonstrate a working pipeline with jenkins-x on Kubernetes.","tags":["jenkins","ci","cd","kubernetes"],"title":"Jenkins X on Kubernetes","type":"project"},{"authors":[],"categories":null,"content":"","date":1548154800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555679045,"objectID":"97cd09c1f8cbf6f2e86caf33ab5b942d","permalink":"https://chechiachang.github.io/talk/elk-on-kubernetes/","publishdate":"2019-01-19T20:56:45+08:00","relpermalink":"/talk/elk-on-kubernetes/","section":"talk","summary":"手把手教你部屬 ELK 監測 Kubernetes 上的應用","tags":["kubernetes","elasticsearch","elk","monitoring","devops"],"title":"ELK for Applications on Kubernetes","type":"talk"},{"authors":[],"categories":null,"content":"","date":1545130800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555675029,"objectID":"8c6feda28d4a3d60d85157945f8067c0","permalink":"https://chechiachang.github.io/talk/go-webassembly-intro/","publishdate":"2018-12-18T19:52:31+08:00","relpermalink":"/talk/go-webassembly-intro/","section":"talk","summary":"A quick introduction about WebAssembly and Go-WebAssembly","tags":["golang","webassembly"],"title":"Go Webassembly Intro","type":"talk"},{"authors":null,"categories":["kubernetes"],"content":"-\u0026gt; Slides here \u0026lt;-\n","date":1538798820,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555677671,"objectID":"010124f9801011d6b344103b2d14a2d8","permalink":"https://chechiachang.github.io/post/kubernetes-container-runtime-interface/","publishdate":"2018-10-06T12:07:00+08:00","relpermalink":"/post/kubernetes-container-runtime-interface/","section":"post","summary":"-\u0026gt; Slides here \u0026lt;-","tags":["kubernetes","container","docker","cri"],"title":"Kubernetes Container Runtime Interface","type":"post"},{"authors":[],"categories":null,"content":"","date":1535454000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555679944,"objectID":"d7400a9a14ccbb3fceede5ff7c8f1e82","permalink":"https://chechiachang.github.io/talk/go-github/","publishdate":"2018-08-28T19:00:00+08:00","relpermalink":"/talk/go-github/","section":"talk","summary":"使用 go-github 接 api 的一些眉角","tags":["golang","github"],"title":"使用 go-github 接 github api","type":"talk"},{"authors":null,"categories":null,"content":" footer: Che-Chia David Chang, 2018, https://github.com/chechiachang slidenumbers: true\nCRI, OCI, CRI-O David Chang DevOps @ Mithril Back-End Developer, Kuberentes admin, DevOps\n    \nOutline  Container Runtime Interface (CRI) Open Container Initiative (OCI) CRI-O Kubernetes on CRI-O      \nTrend Kubernetes  Kubernetes 1.3 introduced rktnetes Kubernetes 1.5 introduced CRI Kubernetes 1.7 removed pre-CRI Docker / rkt integration Currently works Kubelet to use CRI\n CRI-O: released 1.0.x to match Kubernetes 1.7\n  Nomination CRI-O - OCI-based implementation of Kubernetes Container Runtime Interface\nCRI - Kubernetes Container Runtime Interface\nOCI - Open Container initiative\nProjects with Container Runtime docker, rkt, LXC/LXD, runC, containerd, OpenVZ, systemd-nspawn, machinectl, qemu-kvm, lkvm\u0026hellip;\nKubernetes (before 1.6) native supports - Docker - rkt\n    \nContainer Runtime Interface(CRI)  Enable Kubernetes to support more runtimes Free kubernetes to focus on orchestration from runtime integration Consists  a protocol buffers and gRPC API libraries, additional specifications and tools   Container Runtime Interface(CRI)   CRI api in kubernetes https://github.com/kubernetes/kubernetes/ blob/master/pkg/kubelet/apis/ cri/runtime/v1alpha2/api.proto\nCRI runtimes  Docker CRI shim (cri-containerd) CoreOS rktlet frakti: hypervisor-based container runtimes Intel Clear container OpenStack kata runtime cri-o  Open Container Inititive (OCI)  open governance structure container industry standards\n runtime spec defines configuration, execution environment, and lifecycle of a container\n image spec spec on archetecture and OS, filesystem layers and configuration\n  OCI from aspect of user  Use all OCI-conplimant container runtime Use all OCI-complimant images registries Similar UX  https://www.opencontainers.org/blog/2018/06/20/cri-o-how-standards-power-a-container-runtime\nCRI-O  OCI-based implementation of Kubernetes Container Runtime Interface Kubernetes incubator project also part of the CNCF Dedicated for Kubernetes Enable CRI-O plugin to other runtimes Available on RHEL, Fedora, Centos, Ubuntu\u0026hellip;  http://cri-o.io/\nCRI-O vs Docker (containerd) kubelet -\u0026gt; cri-containerd (shim) -\u0026gt; containerd -\u0026gt; runC -\u0026gt; container kubelet -\u0026gt; cri-o -\u0026gt; runC -\u0026gt; container\n Lightweight Stability  built for Kubernetes No cli, image utilities, \u0026hellip; No swarm, mesosphere integration, \u0026hellip;     Let\u0026rsquo;s use CRI-O  Install cri-o and dependencies, runC and CNI Install Podman\n Podman to cri-o as Docker-cli to Docker daemon\nsudo podman run --name my-golang golang:alpine bash    Minikube\nminikube start \\ --network-plugin=cni \\ --container-runtime=cri-o minikube start \\ --network-plugin=cni \\ --extra-config=kubelet.container-runtime=remote \\ --extra-config=kubelet.container-runtime-endpoint=/var/run/crio/crio.sock \\ --extra-config=kubelet.image-service-endpoint=/var/run/crio/crio.sock  Run Kubernetes on CRI-O Kubespray\nkubeadm_enabled: true ... container_manager: crio  Full cluster\nkubelet --container-runtime-endpoint=unix:///var/run/crio/crio.sock ...  References https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/ https://kubernetes.io/blog/2017/11/containerd-container-runtime-options-kubernetes/ Rttps://kubernetes.io/blog/2017/11/containerd-container-runtime-options-kubernetes/ https://xuxinkun.github.io/2017/12/12/docker-oci-runc-and-kubernetes/ https://www.kubernetes.org.cn/1079.html\n","date":1534672835,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555681131,"objectID":"7c9340851e0ead4e9dac45d4235fe7a9","permalink":"https://chechiachang.github.io/slides/container-runtime-interface/","publishdate":"2018-08-19T18:00:35+08:00","relpermalink":"/slides/container-runtime-interface/","section":"slides","summary":"footer: Che-Chia David Chang, 2018, https://github.com/chechiachang slidenumbers: true\nCRI, OCI, CRI-O David Chang DevOps @ Mithril Back-End Developer, Kuberentes admin, DevOps\n    \nOutline  Container Runtime Interface (CRI) Open Container Initiative (OCI) CRI-O Kubernetes on CRI-O      \nTrend Kubernetes  Kubernetes 1.3 introduced rktnetes Kubernetes 1.5 introduced CRI Kubernetes 1.7 removed pre-CRI Docker / rkt integration Currently works Kubelet to use CRI","tags":null,"title":"CRI, OCI, CRI-O","type":"slides"},{"authors":[],"categories":null,"content":"是的，我們做了一款七龍珠中的戰鬥力探測器，透過人臉辨識，探測工程師的開源貢獻力。\n本次演講內容有:\n 初心者的人臉辨識技術 ，Face Recognition API 使用 Golang 在 Github 上做 Data Mining 從零開始的 side project，開發心路歷程與收穫分享  Live Stream on Youtube\n  ","date":1533949200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555679944,"objectID":"be139de05e17ea7c0c08fcb523e4acd2","permalink":"https://chechiachang.github.io/talk/coscup-2018-scouter/","publishdate":"2018-08-11T17:31:58+08:00","relpermalink":"/talk/coscup-2018-scouter/","section":"talk","summary":"是的，我們做了一款七龍珠中的戰鬥力探測器，透過人臉辨識技術探測工程師在Github上的的開源貢獻力","tags":["machine-learning","face-detection","face-recognition","unity","ios","golang","github-api","ar"],"title":"從零開始的人臉辨識，七龍珠戰鬥力探測器","type":"talk"},{"authors":[],"categories":null,"content":"從系統管理層面看Kubernetes的網路架構\n網路實作為Kubernetes架構，也是開發過程中容易出錯的部分。本次演講將從群集管理員的角度，說明Kubernetes 中網路的實作。\n大綱:\n Docker 與 Kubernetes 的網路架構 不同層級的網路溝通實作  容器對容器 Pod對Pod 集群內部與Service 集群外部對Service  以flannel為例講解網路實作 開發過程中常遇到的網路問題  希望聽眾對Kubernetes的網路架構能有基礎的概念，並在開發過程中遇到問題時，有明確的除錯步驟來判定網路是否有問題。遇到網路的問題，也能明確的知道問題的核心，並找到解法。\n","date":1528938000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555670692,"objectID":"1a116ed5492a1d3ee42d40ec7b5667b8","permalink":"https://chechiachang.github.io/talk/kubernetes-networking/","publishdate":"2018-06-10T18:35:07+08:00","relpermalink":"/talk/kubernetes-networking/","section":"talk","summary":"從系統管理層面看Kubernetes的網路架構","tags":["kubernetes","networking","docker","flannel"],"title":"Kubernetes Networking","type":"talk"},{"authors":[],"categories":null,"content":"Manage and Schedule GPU Computing Tasks on Kubernetes\n使用Kubernets管理集群GPU機器，靈活的分配調度GPU資源，並自動排程GPU運算工作。 使用者如資料科學家，只需將運算工作實施到Kubernetes上，Kubernetes便會檢視機器上可用的GPU資源，將運算工作分配到合適的機器 上，並監控工作的狀況。如資源不足Kubernetes會自動將工作加入排程，當前面的工作完成，GPU資源釋放後，Kubernetes會自動將運算 工作，配置到合適的機器上。管理者如系統工程師，只需透過Kubernetes，將機器上的GPU資源加入到Kubernetes。\n Why we need Kubernetes for GPUs computing? Pros \u0026amp; Cons How to deploy a GPU-enabled Kubernetes cluster Run GPU computing on Kubernetes cluster  ","date":1526439600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555671770,"objectID":"484a47a6b60f09b4da23188574382a0b","permalink":"https://chechiachang.github.io/talk/gpu-computing-on-kubernetes/","publishdate":"2018-05-10T18:46:23+08:00","relpermalink":"/talk/gpu-computing-on-kubernetes/","section":"talk","summary":"Manage and Schedule GPU Computing Tasks on Kubernetes\n使用Kubernets管理集群GPU機器，靈活的分配調度GPU資源，並自動排程GPU運算工作。 使用者如資料科學家，只需將運算工作實施到Kubernetes上，Kubernetes便會檢視機器上可用的GPU資源，將運算工作分配到合適的機器 上，並監控工作的狀況。如資源不足Kubernetes會自動將工作加入排程，當前面的工作完成，GPU資源釋放後，Kubernetes會自動將運算 工作，配置到合適的機器上。管理者如系統工程師，只需透過Kubernetes，將機器上的GPU資源加入到Kubernetes。\n Why we need Kubernetes for GPUs computing? Pros \u0026amp; Cons How to deploy a GPU-enabled Kubernetes cluster Run GPU computing on Kubernetes cluster  ","tags":["kubernetes","gpu-computing","cloud-computing","container","automation"],"title":"Manage and Schedule GPU Computing Tasks on Kubernetes","type":"talk"},{"authors":null,"categories":null,"content":" footer: Che-Chia David Chang, 2018, https://github.com/chechiachang/my-speeches/tree/master/go-github slidenumbers: true\nGithub API with Go-Github David Chang Back-End Developer, Kuberentes admin, DevOps\n  Outline  Let\u0026rsquo;s try Github API Use github API with go-github Work with limitation of github API An application of github user data    Let\u0026rsquo;s Try Github API Get data of a user with username\nWeb page\nhttps://github.com/chechiachang\nApi\nhttps://api.github.com/users/chechiachang\nhttps://github.com/search?q=location:Taiwan+type:user\n  /users?q=location:Taiwan\u0026amp;sort=followers\u0026amp;order=desc\n  Github Search User API Docs\n  Github API Authentication  Most API requires authentication https://developer.github.com/v3/#authentication Let\u0026rsquo;s generate api access token from web page  Github -\u0026gt; User -\u0026gt; settings -\u0026gt; Developer settings -\u0026gt; Personal access tokens\n  Go-github  Provide programmatic way to access APIs A client library for accessing github API in golang  https://github.com/google/go-github\n  https://github.com/chechiachang/scouter/blob/master/github.go#L44\n  Limitation of Github API  API paging limit: Search API only return first 1000 users API request limit Search API 30 query / min User API 50000 query / hour  /users?q=location:taiwan+created:2008-01-01..2008-02-01\u0026amp;sort=joined\u0026amp;order=asc\nWork with limitation  Paging limit: narrow down search query with time interval Control your requests rate One of the easist ways is time.Sleep()  https://github.com/chechiachang/scouter/blob/master/cmd/user_fetcher/main.go#L68\n  Application: User Data Miners  Use access token Add Query, SearchOption, Sort, Order, ListOption \u0026hellip; fetch user data with search API  https://github.com/chechiachang/scouter/blob/master/cmd/user_fetcher/main.go\nAn Application Using Github Data Scouter https://github.com/chechiachang/scouter\nLet\u0026rsquo;s Live Demo\nAn Application Using Github Data  User Data Miners to fetch user details, avatars, and contribution Face detection \u0026amp; Face recognition Api server  Video Stream -\u0026gt; Face Image -\u0026gt; Identify User -\u0026gt; User Data -\u0026gt; Show data\nVideo Stream on COSCUP 2018\n  The end ","date":1524132035,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555681131,"objectID":"0559abb3e9bef49d8f8ae74d8849179b","permalink":"https://chechiachang.github.io/slides/go-github/","publishdate":"2018-04-19T18:00:35+08:00","relpermalink":"/slides/go-github/","section":"slides","summary":"footer: Che-Chia David Chang, 2018, https://github.com/chechiachang/my-speeches/tree/master/go-github slidenumbers: true\nGithub API with Go-Github David Chang Back-End Developer, Kuberentes admin, DevOps\n  Outline  Let\u0026rsquo;s try Github API Use github API with go-github Work with limitation of github API An application of github user data    Let\u0026rsquo;s Try Github API Get data of a user with username\nWeb page\nhttps://github.com/chechiachang\nApi\nhttps://api.github.com/users/chechiachang\nhttps://github.com/search?q=location:Taiwan+type:user\n  /users?q=location:Taiwan\u0026amp;sort=followers\u0026amp;order=desc\n  Github Search User API Docs","tags":null,"title":"Github API with go-github","type":"slides"},{"authors":null,"categories":null,"content":" footer: Che-Chia David Chang, 2018, https://github.com/chechiachang/scouter slidenumbers: true\nScouter: Face recognition contribution detector David Chang Back-End Developer, Kuberentes admin, DevOps\nScouter: 3 reasons why Garbage Talks with Linkers Drangon Ball! For COSCUP!\nLet\u0026rsquo;s Live Demo! Outline Data mining Face detection \u0026amp; recognition\nFeature \u0026amp; Architecture  Face + Contributino \u0026mdash;-\u0026gt; Github api + go-github (Golang) Face Recognitiion \u0026mdash;-\u0026gt; Face detection api (Python) API server + Database \u0026mdash;-\u0026gt; Flask + PyMongodb (Python) Webcam + AR + Face detection \u0026mdash;-\u0026gt; Unity + face tracker (C#)  Face and User Data Mining  Download user data and avatar Fetch contribution statics  Github API go-github (Api library in Golang)\n4 Data Miners (Golang)  User fetcher \u0026ndash; fetch user data with search API User detail fetcher \u0026ndash; fetch user detail with user API Avatar downloader \u0026ndash; fetch user\u0026rsquo;s avatar by user data Contribution fetcher \u0026ndash; parse github contribution HTML  Notes about Github API  API paging limit Search API only return first 1000 users API request limit Search API 30 query / min User API 50000 query / hour Parallel request with Wait Group (Optional)  https://github.com/kubernetes/kubernetes/pull/66403\nFace detection \u0026amp; Face recognition The world\u0026rsquo;s simplest facial recognition api Data pre-processing -\u0026gt; Face encoding -\u0026gt; Face recognition\nFace detection \u0026amp; Face recognition  Detect face from avatars Detect identities face image Store identities and userID in a \u0026lsquo;big\u0026rsquo; matrix Detect face from a unknown image Compare unknown face with matrix find the distances between all face identities  Api server  Consume face image from App Detect face from image and recogniize user by face identity Get user data from DB and return to App  App Workflow               Camera APP API server Face recognition DB API server App   Video Stream Face Image  Identify User User Data  Show data    App and AR unity Unity : build app and AR UI\nOpenCV : image processing library\ndlib : face recognition tools, models and algorithms\nUnity App  Control camera Detect face on App-side with face tracker Cut and Send face to API server and get user data back Display user data to view  Issues  Github data source Nobody use their won face! 3000 human faces / 14000 avatars Github avatar has very low resolution Face recognition API tuning required I\u0026rsquo;m a Unity and C# newbie ;)   『不是不準，只是正確機率不夠高。』 \u0026ndash;XD\n Review || | |\u0026mdash;|\u0026mdash;|\u0026mdash;| |Golang crawler \u0026amp; html parser|Golang| |Github API| | |Python Flask|| |Face Recognition API| | |Unity|| |OpenCvForUnity|| |dlib shape predictor|| |C#||\nHow to learn anything in one Month 我想分享的是一個越級打怪，一邊快速成長的捷徑\n#『去報 COSCUP ，講一個 session』\n 『因為我自己想做，還有當初推坑我的人太厲害。』\n Reviews Scouter is relatively simple project. Do try this at home!\nThe end 投影片及講稿 https://github.com/chechiachang/my-speeches/tree/master/fr-ar-open-source-power-detector\nScouter 原始碼 https://github.com/chechiachang/scouter\n","date":1524132035,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555681131,"objectID":"abc01fabb0ccfa1275e134e09ef14331","permalink":"https://chechiachang.github.io/slides/coscup-2018-scouter/","publishdate":"2018-04-19T18:00:35+08:00","relpermalink":"/slides/coscup-2018-scouter/","section":"slides","summary":"footer: Che-Chia David Chang, 2018, https://github.com/chechiachang/scouter slidenumbers: true\nScouter: Face recognition contribution detector David Chang Back-End Developer, Kuberentes admin, DevOps\nScouter: 3 reasons why Garbage Talks with Linkers Drangon Ball! For COSCUP!\nLet\u0026rsquo;s Live Demo! Outline Data mining Face detection \u0026amp; recognition\nFeature \u0026amp; Architecture  Face + Contributino \u0026mdash;-\u0026gt; Github api + go-github (Golang) Face Recognitiion \u0026mdash;-\u0026gt; Face detection api (Python) API server + Database \u0026mdash;-\u0026gt; Flask + PyMongodb (Python) Webcam + AR + Face detection \u0026mdash;-\u0026gt; Unity + face tracker (C#)  Face and User Data Mining  Download user data and avatar Fetch contribution statics  Github API go-github (Api library in Golang)","tags":null,"title":"Scouter","type":"slides"},{"authors":[],"categories":null,"content":" Prerequisites If you\u0026rsquo;re interested in building your own Kubernetes. Install the following tools we use.\nvirtualbox 5.1+ to create VMs, on which we deploy our Kubernetes.\nvagrant 2.0.x+ to control virtualbox to build and manage vms.\nansible-playbook to run Kubespray playbook to deploy Kuberentes\nkubectl to control Kubernetes cluster\n# Ubuntu apt-add-repository ppa:ansible/ansible \\ \u0026amp;\u0026amp; apt-get update \\ \u0026amp;\u0026amp; apt-get install -y python3 ansible \u0026amp;\u0026amp; pip install netaddr # Mac pip install ansible port install py27-netaddr # netaddr is required by Kubespray  Let\u0026rsquo;s get started clone https://github.com/kubernetes-incubator/kubespray.git cd kubespray vagrant up  That\u0026rsquo;s it!\nThis gonna take a while. Let\u0026rsquo;s get to some details.\nVirtualbox Install virtualbox 5.1+.\nDisadvantage about vbox GUI:\n Clicking is time-consuming and engineers are lazy. Bad for automation. Lack of Scalibility Manual operation could cause mistakes.  A good practice is to Write shell script with VBoxManage, the client of virtualbox\nOr even better, use Vagrant\nVagrant vagrant 2.0.x+\nCreate you VMs with (ruby based) script.\nBring VMs up \u0026amp; down within only one command\nCheck the Vagrantfile\nAnsible playbook Ansible is a IT automation tools\nBasically, ansible playbook ssh and execute bash command on servers.\n Reduce manual efforts. Deliver and deploy faster Install K8s components to each servers and check components status on each step Come with lots of handy tools (like native array supports) Automation is everything  Kubespay Deploy k8s with ansible-playbook\nAvailable on AWS, GCE, or baremetal\nHigh Available cluster\nGenerate inventory file with inventory.py\ncp -rfp inventory/sample inventory/mycluster declare -a IPS=(10.10.1.3 10.10.1.4 10.10.1.5) CONFIG_FILE=inventory/mycluster/hosts.ini python3 contrib/inventory_builder/inventory.py ${IPS[@]}  (Optional) Change parameters\ndeploy\nansible-playbook -i inventory/myCluster/hosts.ini cluster.yml  Kubectl kubectl config use-context kubectl get po  Destroy Remember to suspend / destroy VMs\nvagrant suspend vagrant destroy  More about Kubernetes Why k8s\nUse case 1: when data scientist wants GPU Workflow dispatching and resouce management\nUse case 2: when your site grows bigger Scalibility\nFYI\n","date":1522234800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555672661,"objectID":"6c5ec292fa3a055366c6dd3109f1ee27","permalink":"https://chechiachang.github.io/talk/deploy-kubernetes-with-kubespray/","publishdate":"2018-03-27T19:08:35+08:00","relpermalink":"/talk/deploy-kubernetes-with-kubespray/","section":"talk","summary":"Build your own Kubernetes cluster with ease","tags":["kubernetes","kubespray"],"title":"Deploy Kubernetes With Kubespray","type":"talk"},{"authors":[],"categories":null,"content":" Outlines  Docker Storage Kubernetes Storage\n GlusterFS for K8s\n  Docker Storage Doc\n within container: inside writable layer of a container\n deleted with container couple with host machine require storage driver\ndocker ps -s docker inspect ubuntu dd if=/dev/zero of=1Mfile bs=1k count=1000   Docker volume\n a directory on host prepare: provision on host usage: set volume on docker run   Kubernetes Storage https://kubernetes.io/docs/concepts/storage/volumes/\n On-disk files:\n Deleted on container restart File sharing in Pod  Kubernetes Volume:\n a directory Coexist with Pod Data preserved across container restarts Pod can use many volumes of different types   (Some of) Types of volumes : * emptyDir - first created volume - prepare: none - usage: always\n gcePersistentDisk\n independent to pod prepare: gcp usage: claim by name\ngcloud compute disks create --size=500GB --zone=us-central1-a my-data-disk   PersistentVolumeClaim\n prepare: provision by admin usage: add PVC request   Example\nPersistentVolume Doc * Persistent Volume - a piece of provisioned storage - Independent lifecycle - abstract with k8s object API - many implementations: ex. GCEPersistentDisk, NFS, GlusterFS\u0026hellip;\n Why PersistentVolume\n one APIs, many PV implementations Separates providers (admin) and consumers (users) PV subsystem API handles details of implementation Handle different need like size, access mode, performance\u0026hellip;  PersistentVolumeClaim\n PV: a resource PVC: a request for storage Pods consume Node resources and PVCs consume PV resources  PVC lifecycle\n Povisioning Binding Using Reclaiming Deleting  PV Access Modes\n ReadWriteOnce: 1 node R/W ReadOnlyMany: n node R, 1 node W ReadWriteMany: n node R/W  StorageClass\n usage:PV.storageClassName   Doc\nGlusterFS Doc\n Why glusterFS\n Network FS Distributed FS  High Availability Scalability  High performance  Architecture: Types of Volumes\n Distributed Replicated Distributed Replicated Striped: file Distributed Striped  note: glusterFS Volume vs Kubernetes PV\n  GlusterFS for k8s  Heketi\n REST storage management API Receive requests from k8s storage driver use secret to control glusterFS  Usage\n has a glusterFS apply storage class and secret to k8s Create PV Request PVC with Pods   Demo  Env  Kubernetes 1.9.2   ","date":1518228000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555679957,"objectID":"3c8d261f61b72c4d3057b4f2e5eb5b6f","permalink":"https://chechiachang.github.io/talk/kubernetes-storage-and-glusterfs/","publishdate":"2018-02-10T20:49:32+08:00","relpermalink":"/talk/kubernetes-storage-and-glusterfs/","section":"talk","summary":"Kubernetes storage system: use GlusterFS as an example","tags":["kubernetes","storage","filesystem","glusterfs"],"title":"Kubernetes Storage and Glusterfs","type":"talk"},{"authors":null,"categories":null,"content":"","date":1492595116,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555679944,"objectID":"a474a93641fbd62e9acd012c967e21db","permalink":"https://chechiachang.github.io/project/scouter/","publishdate":"2017-04-19T17:45:16+08:00","relpermalink":"/project/scouter/","section":"project","summary":"A face recognizer app which retrieves your Github contribution by your face.","tags":["machine-learning","face-detection","face-recognition","unity","ios","golang","github-api","ar"],"title":"Scouter: face recognition.","type":"project"}]