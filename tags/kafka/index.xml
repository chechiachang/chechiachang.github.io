<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kafka on Che-Chia Chang</title>
    <link>https://chechia.net/tags/kafka/</link>
    <description>Recent content in kafka on Che-Chia Chang</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>chechiachang &amp;copy; 2016</copyright>
    <lastBuildDate>Tue, 11 Feb 2020 17:26:22 +0800</lastBuildDate>
    
	    <atom:link href="https://chechia.net/tags/kafka/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ithome Cloud Summit 2020: Terraform Infrastructure as Code</title>
      <link>https://chechia.net/talk/ithome2020-cloudsummit-terraform-iac/</link>
      <pubDate>Tue, 11 Feb 2020 17:26:22 +0800</pubDate>
      
      <guid>https://chechia.net/talk/ithome2020-cloudsummit-terraform-iac/</guid>
      <description>&lt;p&gt;Infrastructure as code 的概念已經推廣許久，不是什麼新概念，然而公司卻尚未導入。op 需要新環境都是透過 GUI 去開環境。&lt;/p&gt;
&lt;p&gt;環境越開越多，漸漸浮現出幾個痛點：&lt;/p&gt;
&lt;p&gt;「這個環境怎麼少一個設定」-&amp;gt; 環境沒標準化&lt;/p&gt;
&lt;p&gt;「是誰改了這個設定」-&amp;gt; 環境的變更沒有 change log，無法 blame&lt;/p&gt;
&lt;p&gt;「你環境開錯了吧」 -&amp;gt; 環境交付沒自動化測試&lt;/p&gt;
&lt;p&gt;其他如：只看單一環境不在乎全局設定，環境數量多不易管理或更新維護，人工操作錯誤率高&amp;hellip;等問題層出不窮。&lt;/p&gt;
&lt;p&gt;本次分享以一步一步實際導入 Terraform 的經驗，描述如何針對需求對症下藥，帶領公司導入 infrastructure as code，內容包含實作步驟，心得感想，並紀錄沿路踩過的雷，希望能提供其他團隊導入經驗。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cloud Native Taiwan #21: Deploy Kafka on Kubernetes</title>
      <link>https://chechia.net/talk/kubernetes-kafka-deployment/</link>
      <pubDate>Thu, 17 Oct 2019 20:50:50 +0800</pubDate>
      
      <guid>https://chechia.net/talk/kubernetes-kafka-deployment/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
