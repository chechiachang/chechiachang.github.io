<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slides | Che-Chia Chang</title>
    <link>https://chechia.net/zh-hant/slides/</link>
      <atom:link href="https://chechia.net/zh-hant/slides/index.xml" rel="self" type="application/rss+xml" />
    <description>Slides</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>zh-Hant</language><lastBuildDate>Tue, 26 Mar 2024 00:00:00 +0000</lastBuildDate>
    <item>
      <title>SRE Conference: Cloud Infrastructure Saving Engineering  雲端省錢工程</title>
      <link>https://chechia.net/zh-hant/slides/2024-04-26-saving-money-on-cloud-k8s/</link>
      <pubDate>Tue, 26 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://chechia.net/zh-hant/slides/2024-04-26-saving-money-on-cloud-k8s/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;onepiece.jpg&#34;
  &gt;

&lt;aside class=&#34;notes&#34;&gt;
  Q1: 有過使用 helm 跟 argocd 的人請舉手
Q2: k8s object 走 gitflow 管理的比例有超過 9 成的
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;resource-as-code-for-k8s-object&#34;&gt;Resource as Code for K8s Object&lt;/h3&gt;
&lt;h3 id=&#34;如何管理-k8s-object&#34;&gt;如何管理 k8s object&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://chechia.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Che Chia Chang&lt;/a&gt;&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;outline&#34;&gt;Outline&lt;/h3&gt;
&lt;p&gt;Manage Kubernetes Objects in Gitflow&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kubectl&lt;/li&gt;
&lt;li&gt;helm chart&lt;/li&gt;
&lt;li&gt;argocd (gitflow)
&lt;ul&gt;
&lt;li&gt;applicationset&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;test&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;今天的內容前半部像是講古&lt;/p&gt;
&lt;p&gt;首先會講 kubectl create / apply
kubectl 使用，然後官方有提醒我們使用 kubectl 管理 k8s object 時的 trade-off，這些 trade-off 我們可以使用其他的工具來彌補&lt;/p&gt;
&lt;p&gt;導入 helm chart，來打包 k8s objects 變成一個完整地發布單位&lt;/p&gt;
&lt;p&gt;argocd 走 gitflow 來發布&lt;/p&gt;
&lt;p&gt;然後在 workflow 裡加入測試，確保 k8s objects 的交付品質&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;kubectl&#34;&gt;Kubectl&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Imperative commands 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create deployment nginx --image nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Imperative object configuration 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create -f nginx.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Declarative object configuration
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -R -f configs/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/working-with-objects/object-management/#management-techniques&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://kubernetes.io/docs/concepts/overview/working-with-objects/object-management/#management-techniques&lt;/a&gt;&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  kubectl 應該是所有人學 k8s 的第一個工具
作為官方的 cli 工具，kunectl 非常強大，可以控制幾乎大部分 k8s 的 api，也能對幾乎所有 k8s object 進行操作
&lt;/aside&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;kubectl.jpg&#34;
  &gt;

&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;首先，如同官方文件所描述，kubectl 的使用上，也有各種不同方法。ie. kubectl 交在不同人手上，使用方式是不同的
官方文件描述&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Imperative commands 指令式&lt;/li&gt;
&lt;li&gt;Imperative object configuration 指令物件&lt;/li&gt;
&lt;li&gt;Declarative object configuration 宣告物件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;kubectl create deployment nginx，一行命令告訴 k8s 你要 create deployment&lt;/p&gt;
&lt;p&gt;kubectl create -f nginx.yaml，使用者選擇要 create / apply / delete 而 nginx.yaml 裡面描述一個 nginx deployment 物件&lt;/p&gt;
&lt;p&gt;kubectl apply -f -R nginx/，使用者描述一個或多個物件，描述物件的狀態。apply 時，由 kubectl 決定要對 object 執行，create / update / delete&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;issue&#34;&gt;Issue&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Imperative commands 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create deployment nginx --image nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Imperative object configuration 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create -f nginx.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Declarative object configuration
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -R -f configs/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;kubectl 這麼好用，那為何不繼續用下去？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;的問題很明顯，不能 diff
2.3. 會有一個基礎的 spec，關於 deployment/nginx，因此可以在&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;重點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;change review / diff&lt;/li&gt;
&lt;li&gt;source record other than live&lt;/li&gt;
&lt;li&gt;template，一個可重複使用的樣版&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.3. 的問題，你必須對 object 夠了解，才寫得出完整沒 bug 的 spec yaml&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;聽起來是最完整的，他的問題就是要如何維持 local file 與 live 連結，或是說 sync
這個有使用 argocd 的人可能就會比較有感覺&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大家有興趣可以去看官方描述的內容，這裡不贅述&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;issue-1&#34;&gt;Issue&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;change review / diff before apply&lt;/li&gt;
&lt;li&gt;source of live record&lt;/li&gt;
&lt;li&gt;template / repetitive apply&lt;/li&gt;
&lt;li&gt;sync local to live&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;change review / diff before apply&lt;/li&gt;
&lt;li&gt;source of live record&lt;/li&gt;
&lt;li&gt;template / repetitive apply&lt;/li&gt;
&lt;li&gt;sync local to live&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;declarative-object-configuration&#34;&gt;Declarative object configuration&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── deployment.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── ingress.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── service.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── deployment.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── ingress.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── service.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;microservice-a b c ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  為了 change review，通常會走向 3. Declarative object configuration，可能會長這樣
一個 git repository
裡面有多個 directory，描述每一組服務所需要的資源
使用 kubectl 一次 apply 整個 directory，所以 local file 基本上也反應 live object
有 local file，很自然而然就會想要放到版本控制，例如 git，這樣又可以走 gitflow
PR -&amp;gt; review -&amp;gt; merged -&amp;gt; apply master / release tag
&lt;/aside&gt;
&lt;hr&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;有人在 2014 年前用過 k8s 嗎？&lt;/p&gt;
&lt;p&gt;古早時期，要用個 redis 還要自己包 service / ingress / deployment，先去 dockerhub 找 redis，然後依據 readme 自己包 deployment，自己測試看 redis 會不會動&lt;/p&gt;
&lt;p&gt;現在應該沒有人會因為要去使用 redis 或是 mysql，自己跑去寫 k8s object 了吧&lt;/p&gt;
&lt;p&gt;helm v2.0-alpha 2016&lt;/p&gt;
&lt;p&gt;現在有 helm + chart&lt;/p&gt;
&lt;p&gt;如果只是使用低三方開源的 helm chart，社群幫你維護 service / ingress / deployment&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供基本的 default value，預設就跑得起來&lt;/li&gt;
&lt;li&gt;跑得起來後，跑得好，能使用 k8s orchestration 提供完整的功能，透過 value.yaml 控制&lt;/li&gt;
&lt;li&gt;經過測試&lt;/li&gt;
&lt;li&gt;issue tracking&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;helm-chart&#34;&gt;Helm chart&lt;/h3&gt;
&lt;p&gt;k8s object 的開發，打包，測試，release&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;k8s 十分強大，享受 orchestration&lt;/li&gt;
&lt;li&gt;k8s object 變得太複雜&lt;/li&gt;
&lt;li&gt;標準化 template，release + upgrade&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;chart 作為一個 k8s object 的 release / artifact，有開發流程，版本控管，測試，完整的發佈&lt;/p&gt;
&lt;p&gt;app 本身，例如 redis，當然是整個應用的核心。但要能夠在 k8s 執行，並正確地享受 k8s orchestration 的好處，k8s object 非常的重要&lt;/p&gt;
&lt;p&gt;甚至，k8s object 複雜度已經遠遠超過過去在 vm 上跑一個 redis，兜一個 systemd unit 就可以跑起來&lt;/p&gt;
&lt;p&gt;k8s object 需要 release / version，才能做 object 的固定版本 apply，upgrade 生版，有問題 rollback&lt;/p&gt;
&lt;p&gt;在 k8s 上要跑得穩邊的十分閫難，透過社群來維護大部分通運的第三方服務&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;helm-chart-library&#34;&gt;Helm Chart Library&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;helm repo list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME       URL
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bitnami    https://charts.bitnami.com/bitnami
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;argocd     https://argoproj.github.io/argo-helm
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chaos-mesh https://charts.chaos-mesh.org
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;k8s objects 能動很簡單，但要跑得穩又能享受 orchestration 的便利，十分困難
透過社群來維護大部分通運的第三方服務，透過單一 value.yaml&lt;/p&gt;
&lt;p&gt;社群維護的 chart 不是就一勞永逸&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不熱門的 chart&lt;/li&gt;
&lt;li&gt;特殊需求時，還是需要 fork chart 回來自己維護&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但無論如何，都是大幅降低維運的複雜度&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;helm-生態系&#34;&gt;helm 生態系&lt;/h3&gt;
&lt;p&gt;ex. helmfile&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;repositories:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- name: argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  url: https://argoproj.github.io/argo-helm
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;helmDefaults:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  kubeContext: general
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  #verify: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  wait: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  timeout: 300
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;context: general
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;releases:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- name: argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  namespace: argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  chart: argocd/argo-cd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  version: 5.31.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  values:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  - values/argocd.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- name: redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- name: mysql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/cdwv/awesome-helm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/cdwv/awesome-helm&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;更高層級的封裝&#34;&gt;更高層級的封裝&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;api-services
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── mysql
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── ingress -&amp;gt; nlb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;daemon-services
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── mysql
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── kafka
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;底下的依賴標準化，依據穩定的 release 發布之後
可以再進行更高層級的封裝&lt;/p&gt;
&lt;p&gt;重複性的服務，例如每個 microservice 都需要
例如我有一百個 api service group，都是 restful api，都需要 ingress / service / nginx 等等&lt;/p&gt;
&lt;p&gt;底下的元件標準化，降低維護成本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;統一版本，醫病維護，升級，退版&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如 daemon service，底下依賴 queue / redis / db&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;微服務&#34;&gt;微服務&lt;/h3&gt;
&lt;p&gt;微服務不是問題，微服務底下的 k8s object 才是問題&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以快速，標準化的產生經過測試，微服務單元&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;issues&#34;&gt;Issues&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;V change review / diff before apply&lt;/li&gt;
&lt;li&gt;source of live record&lt;/li&gt;
&lt;li&gt;V template / repetitive apply&lt;/li&gt;
&lt;li&gt;sync local to live&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;version control / gitflow&lt;/p&gt;
&lt;p&gt;helm template 有提供許多語法，可以有系統化的產生重複的 k8s object
ex. 可以跑 for loop / for each
這個在 IaC 或是 resource as code 的 xxx as code 都十分有利&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;argo-cd&#34;&gt;Argo CD&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Declarative GitOps CD for Kubernetes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://argo-cd.readthedocs.io/en/stable/assets/argocd-ui.gif&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;why-argo-cd&#34;&gt;Why Argo CD?&lt;/h3&gt;
&lt;p&gt;Application definitions, configurations, and environments should be declarative and version controlled. Application deployment and lifecycle management should be automated, auditable, and easy to understand.&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;application 應該是明確宣告的，清楚描述，並且有版本控管
描述 application 本身，附帶的設定 secret / configmap
environment 也應該是宣告式的&lt;/p&gt;
&lt;p&gt;application 的部署與 lifecycle 管理，都應該是自動化，可以稽核，而且好理解
標準化，自動化
UI 圖像描述，一目瞭然。但事實上如果有做到講 local file 推到版本控制，光是使用 editor 也可以做到一目瞭然&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;argo-cd-1&#34;&gt;Argo CD&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;gitflow / git repository&lt;/li&gt;
&lt;li&gt;argocd application sync file from repository&lt;/li&gt;
&lt;li&gt;argocd controller 自動化的確保 sync
&lt;ul&gt;
&lt;li&gt;un-sync 自動化處理&lt;/li&gt;
&lt;li&gt;無法 sync 時通知&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;gitflow&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;k8s object 的 change 是需要 PR review 的，不是想改就 kubectl apply 下去&lt;/li&gt;
&lt;li&gt;k8s object 的品質把關，來自高品質的 review&lt;/li&gt;
&lt;li&gt;針對 cluster 上的變更都有管控&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能夠直接掌握 live object，透過 editor 檢查 git repository，或是透過 argocd UI 檢視&lt;/p&gt;
&lt;p&gt;local file 等於 live object
在複雜的環境裡很重要，ex. k8s 內有成千上百個 helm release，可以用 editor 檢視 local file&lt;/p&gt;
&lt;p&gt;不然要透過 k8s 去打 api&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;api call 也是資源啊，能省則省&lt;/li&gt;
&lt;li&gt;editor 更直覺快速&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;applicationset&#34;&gt;applicationset&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Generators-Git/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git generator&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apiVersion: argoproj.io/v1alpha1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kind: ApplicationSet
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  name: general-argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  namespace: argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spec:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  generators:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  - git:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      repoURL: https://github.com/chechiachang/azure-argo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      revision: master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      directories:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - path: clusters/dev/dev-general/argocd/*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  template:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    metadata:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      name: &amp;#39;dev-general-argocd-{{path.basename}}&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      labels:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        environment: dev
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        type: infra
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        function: argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        cluster: dev-general
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    spec:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      project: default
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      syncPolicy:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        automated:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          prune: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      source:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        repoURL: https://github.com/chechiachang/azure-argo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        targetRevision: master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        path: &amp;#39;clusters/dev/dev-general/argocd/{{path.basename}}&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      destination:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        server: https://kubernetes.default.svc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        namespace: argocd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;argocd 除了 sync 以外還提供的許多功能&lt;/p&gt;
&lt;p&gt;applicationset 定義一組 set，可以透過 generator 迭代的產生大量的 application
ex. 一次 deploy 一群 redis&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;applicationset-1&#34;&gt;applicationset&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dev-general
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── default/redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── default/mysql
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── default/my-app
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── nginx-ingress/nginx-ingress
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── argocd/argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;stag-general
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;prod-general
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;cluster-wide-的-k8s-object&#34;&gt;cluster-wide 的 k8s object&lt;/h3&gt;
&lt;p&gt;cluster-wide 的 k8s object 也很適合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 helm template helper 來管理 value.yaml label / annotation / env / &amp;hellip;&lt;/li&gt;
&lt;li&gt;namespace&lt;/li&gt;
&lt;li&gt;rbac&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;cluster-wide 的 k8s object 也很適合塞進 argocd 管理&lt;/p&gt;
&lt;p&gt;例如 cluster access control，複雜的 rbac rule，也很適合整理成為 helm chart&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以輕鬆實現 user -&amp;gt; rule 多對多&lt;/li&gt;
&lt;li&gt;可以快速增減 user group&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;issues-1&#34;&gt;Issues&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;V change review / diff before apply&lt;/li&gt;
&lt;li&gt;V source of live record&lt;/li&gt;
&lt;li&gt;V template / repetitive apply&lt;/li&gt;
&lt;li&gt;V sync local to live&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;more-issues-multi-hybrid-cluster&#34;&gt;More Issues: multi-hybrid cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;multiple k8s
&lt;ul&gt;
&lt;li&gt;dev / stag / prod&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;hybrid k8s
&lt;ul&gt;
&lt;li&gt;bare metal / public cloud&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;由於 k8s 內部的 component 都已經標準化，可以很輕易地複製測試過的 component
dev 測試 PR branch，staging 跑 release candicate，production 選擇經過測試的 release&lt;/p&gt;
&lt;p&gt;能夠確保 dev / stag / prod 的 k8s object 是完全相同的&lt;/p&gt;
&lt;p&gt;hybrid 環境管理，某些 k8s 元件應該安裝在哪些 cluster 上&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;aws ingress controller / csi driver / cni node daemonsets&lt;/li&gt;
&lt;li&gt;local nginx-ingress controller&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;more-issues-multi-hybrid-cluster-1&#34;&gt;More Issues: multi-hybrid cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Generators-Cluster/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;argocd cluster generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kind: ApplicationSet
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  name: aws-cni
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  namespace: kube-system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spec:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  generators:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  - clusters:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      selector:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        matchLabels:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          eks: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          #bare-metal: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          staging: true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;more-issues-multi-hybrid-cluster-2&#34;&gt;More Issues: multi-hybrid cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Generators-Cluster/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;argocd cluster generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;aws-eks-1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── aws cni
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── aws ingress controller
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── nginx-ingress controller
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bare-metal-1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── cilium
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── bare-metal ingress
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── nginx-ingress controller
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  多座 cluster
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;more-issues-multi-hybrid-cluster-3&#34;&gt;More Issues: multi-hybrid cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;applicationset&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;more-issues-test&#34;&gt;More Issues: Test&lt;/h3&gt;
&lt;p&gt;k8s object 需不需要測試&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;infra-test (bare-metal / self-hosted)&lt;/li&gt;
&lt;li&gt;release (helm chart)&lt;/li&gt;
&lt;li&gt;live status&lt;/li&gt;
&lt;li&gt;stress / load test / chaos engineering&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;k8s object 需不需要測試，覺得需要測試的請舉手&lt;/p&gt;
&lt;p&gt;k8s object 需不需要測試，就跟這個投影片一樣
有時間就講一下，沒時間就跳過吧&lt;/p&gt;
&lt;p&gt;infra-test provider 應該都測完了
要測的是 k8s object 的功能是否符合預期&lt;/p&gt;
&lt;p&gt;當然，有測試的 helm releae 與沒測試的 helm release 也是天差地遠&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;test-ansible-playbook&#34;&gt;Test: ansible playbook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;測試 apply 後 k8s object 的 status
&lt;ul&gt;
&lt;li&gt;ingress 是否 ready&lt;/li&gt;
&lt;li&gt;endpoint 是否有產生&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可以先測
&lt;ul&gt;
&lt;li&gt;networking (ingress / svc)&lt;/li&gt;
&lt;li&gt;storage (csi / pvc)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Test&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nginx&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;gather_facts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;vars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;deployment_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;nginx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;tasks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Get&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kubectl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment_name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonpath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{.status.readyReplicas}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment_status&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;failed_when&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Verify&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;running&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;that&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;null&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;fail_msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Deployment {{ deployment_name }} is not running.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;more-issues-test-1&#34;&gt;More Issues: Test&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;Test&lt;/del&gt; Monitoring&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;prometheus rule with helm chart&lt;/li&gt;
&lt;li&gt;ServiceMonitor&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  helm release 一個 api-services
api service 有 /metrics endpoint
透過 ServiceMonitor 來持續性的紀錄 metrics
透過 PrometheusRule 來設定異常 metrics 的告警
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;more-issues-test-2&#34;&gt;More Issues: Test&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;stress-test / load test
&lt;ul&gt;
&lt;li&gt;k6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;chaos-engineering
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chaos-mesh.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://chaos-mesh.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/asobti/kube-monkey&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/asobti/kube-monkey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;kubectl + gitflow&lt;/li&gt;
&lt;li&gt;helm chart&lt;/li&gt;
&lt;li&gt;argocd: applicationset / generator&lt;/li&gt;
&lt;li&gt;test&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Q &amp;amp; A&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kubernetes Summit: Resource as Code for Kubernetes: Stop kubectl apply</title>
      <link>https://chechia.net/zh-hant/slides/2023-10-25-k8s-resource-as-code/</link>
      <pubDate>Mon, 23 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://chechia.net/zh-hant/slides/2023-10-25-k8s-resource-as-code/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;onepiece.jpg&#34;
  &gt;

&lt;aside class=&#34;notes&#34;&gt;
  Q1: 有過使用 helm 跟 argocd 的人請舉手
Q2: k8s object 走 gitflow 管理的比例有超過 9 成的
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;resource-as-code-for-k8s-object&#34;&gt;Resource as Code for K8s Object&lt;/h3&gt;
&lt;h3 id=&#34;如何管理-k8s-object&#34;&gt;如何管理 k8s object&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://chechia.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Che Chia Chang&lt;/a&gt;&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;outline&#34;&gt;Outline&lt;/h3&gt;
&lt;p&gt;Manage Kubernetes Objects in Gitflow&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kubectl&lt;/li&gt;
&lt;li&gt;helm chart&lt;/li&gt;
&lt;li&gt;argocd (gitflow)
&lt;ul&gt;
&lt;li&gt;applicationset&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;test&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;今天的內容前半部像是講古&lt;/p&gt;
&lt;p&gt;首先會講 kubectl create / apply
kubectl 使用，然後官方有提醒我們使用 kubectl 管理 k8s object 時的 trade-off，這些 trade-off 我們可以使用其他的工具來彌補&lt;/p&gt;
&lt;p&gt;導入 helm chart，來打包 k8s objects 變成一個完整地發布單位&lt;/p&gt;
&lt;p&gt;argocd 走 gitflow 來發布&lt;/p&gt;
&lt;p&gt;然後在 workflow 裡加入測試，確保 k8s objects 的交付品質&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;kubectl&#34;&gt;Kubectl&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Imperative commands 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create deployment nginx --image nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Imperative object configuration 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create -f nginx.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Declarative object configuration
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -R -f configs/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/working-with-objects/object-management/#management-techniques&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://kubernetes.io/docs/concepts/overview/working-with-objects/object-management/#management-techniques&lt;/a&gt;&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  kubectl 應該是所有人學 k8s 的第一個工具
作為官方的 cli 工具，kunectl 非常強大，可以控制幾乎大部分 k8s 的 api，也能對幾乎所有 k8s object 進行操作
&lt;/aside&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;kubectl.jpg&#34;
  &gt;

&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;首先，如同官方文件所描述，kubectl 的使用上，也有各種不同方法。ie. kubectl 交在不同人手上，使用方式是不同的
官方文件描述&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Imperative commands 指令式&lt;/li&gt;
&lt;li&gt;Imperative object configuration 指令物件&lt;/li&gt;
&lt;li&gt;Declarative object configuration 宣告物件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;kubectl create deployment nginx，一行命令告訴 k8s 你要 create deployment&lt;/p&gt;
&lt;p&gt;kubectl create -f nginx.yaml，使用者選擇要 create / apply / delete 而 nginx.yaml 裡面描述一個 nginx deployment 物件&lt;/p&gt;
&lt;p&gt;kubectl apply -f -R nginx/，使用者描述一個或多個物件，描述物件的狀態。apply 時，由 kubectl 決定要對 object 執行，create / update / delete&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;issue&#34;&gt;Issue&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Imperative commands 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create deployment nginx --image nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Imperative object configuration 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create -f nginx.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Declarative object configuration
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -R -f configs/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;kubectl 這麼好用，那為何不繼續用下去？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;的問題很明顯，不能 diff
2.3. 會有一個基礎的 spec，關於 deployment/nginx，因此可以在&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;重點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;change review / diff&lt;/li&gt;
&lt;li&gt;source record other than live&lt;/li&gt;
&lt;li&gt;template，一個可重複使用的樣版&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.3. 的問題，你必須對 object 夠了解，才寫得出完整沒 bug 的 spec yaml&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;聽起來是最完整的，他的問題就是要如何維持 local file 與 live 連結，或是說 sync
這個有使用 argocd 的人可能就會比較有感覺&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大家有興趣可以去看官方描述的內容，這裡不贅述&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;issue-1&#34;&gt;Issue&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;change review / diff before apply&lt;/li&gt;
&lt;li&gt;source of live record&lt;/li&gt;
&lt;li&gt;template / repetitive apply&lt;/li&gt;
&lt;li&gt;sync local to live&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;change review / diff before apply&lt;/li&gt;
&lt;li&gt;source of live record&lt;/li&gt;
&lt;li&gt;template / repetitive apply&lt;/li&gt;
&lt;li&gt;sync local to live&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;declarative-object-configuration&#34;&gt;Declarative object configuration&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── deployment.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── ingress.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── service.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── deployment.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── ingress.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── service.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;microservice-a b c ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  為了 change review，通常會走向 3. Declarative object configuration，可能會長這樣
一個 git repository
裡面有多個 directory，描述每一組服務所需要的資源
使用 kubectl 一次 apply 整個 directory，所以 local file 基本上也反應 live object
有 local file，很自然而然就會想要放到版本控制，例如 git，這樣又可以走 gitflow
PR -&amp;gt; review -&amp;gt; merged -&amp;gt; apply master / release tag
&lt;/aside&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;helm.jpg&#34;
  &gt;

&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;有人在 2014 年前用過 k8s 嗎？&lt;/p&gt;
&lt;p&gt;古早時期，要用個 redis 還要自己包 service / ingress / deployment，先去 dockerhub 找 redis，然後依據 readme 自己包 deployment，自己測試看 redis 會不會動&lt;/p&gt;
&lt;p&gt;現在應該沒有人會因為要去使用 redis 或是 mysql，自己跑去寫 k8s object 了吧&lt;/p&gt;
&lt;p&gt;helm v2.0-alpha 2016&lt;/p&gt;
&lt;p&gt;現在有 helm + chart&lt;/p&gt;
&lt;p&gt;如果只是使用低三方開源的 helm chart，社群幫你維護 service / ingress / deployment&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供基本的 default value，預設就跑得起來&lt;/li&gt;
&lt;li&gt;跑得起來後，跑得好，能使用 k8s orchestration 提供完整的功能，透過 value.yaml 控制&lt;/li&gt;
&lt;li&gt;經過測試&lt;/li&gt;
&lt;li&gt;issue tracking&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;helm-chart&#34;&gt;Helm chart&lt;/h3&gt;
&lt;p&gt;k8s object 的開發，打包，測試，release&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;k8s 十分強大，享受 orchestration&lt;/li&gt;
&lt;li&gt;k8s object 變得太複雜&lt;/li&gt;
&lt;li&gt;標準化 template，release + upgrade&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;chart 作為一個 k8s object 的 release / artifact，有開發流程，版本控管，測試，完整的發佈&lt;/p&gt;
&lt;p&gt;app 本身，例如 redis，當然是整個應用的核心。但要能夠在 k8s 執行，並正確地享受 k8s orchestration 的好處，k8s object 非常的重要&lt;/p&gt;
&lt;p&gt;甚至，k8s object 複雜度已經遠遠超過過去在 vm 上跑一個 redis，兜一個 systemd unit 就可以跑起來&lt;/p&gt;
&lt;p&gt;k8s object 需要 release / version，才能做 object 的固定版本 apply，upgrade 生版，有問題 rollback&lt;/p&gt;
&lt;p&gt;在 k8s 上要跑得穩邊的十分閫難，透過社群來維護大部分通運的第三方服務&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;helm-chart-library&#34;&gt;Helm Chart Library&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;helm repo list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME       URL
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bitnami    https://charts.bitnami.com/bitnami
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;argocd     https://argoproj.github.io/argo-helm
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chaos-mesh https://charts.chaos-mesh.org
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;k8s objects 能動很簡單，但要跑得穩又能享受 orchestration 的便利，十分困難
透過社群來維護大部分通運的第三方服務，透過單一 value.yaml&lt;/p&gt;
&lt;p&gt;社群維護的 chart 不是就一勞永逸&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不熱門的 chart&lt;/li&gt;
&lt;li&gt;特殊需求時，還是需要 fork chart 回來自己維護&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但無論如何，都是大幅降低維運的複雜度&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;helm-生態系&#34;&gt;helm 生態系&lt;/h3&gt;
&lt;p&gt;ex. helmfile&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;repositories:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- name: argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  url: https://argoproj.github.io/argo-helm
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;helmDefaults:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  kubeContext: general
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  #verify: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  wait: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  timeout: 300
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;context: general
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;releases:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- name: argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  namespace: argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  chart: argocd/argo-cd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  version: 5.31.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  values:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  - values/argocd.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- name: redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- name: mysql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/cdwv/awesome-helm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/cdwv/awesome-helm&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;更高層級的封裝&#34;&gt;更高層級的封裝&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;api-services
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── nginx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── mysql
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── ingress -&amp;gt; nlb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;daemon-services
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── mysql
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── kafka
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;底下的依賴標準化，依據穩定的 release 發布之後
可以再進行更高層級的封裝&lt;/p&gt;
&lt;p&gt;重複性的服務，例如每個 microservice 都需要
例如我有一百個 api service group，都是 restful api，都需要 ingress / service / nginx 等等&lt;/p&gt;
&lt;p&gt;底下的元件標準化，降低維護成本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;統一版本，醫病維護，升級，退版&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如 daemon service，底下依賴 queue / redis / db&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;微服務&#34;&gt;微服務&lt;/h3&gt;
&lt;p&gt;微服務不是問題，微服務底下的 k8s object 才是問題&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以快速，標準化的產生經過測試，微服務單元&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;issues&#34;&gt;Issues&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;V change review / diff before apply&lt;/li&gt;
&lt;li&gt;source of live record&lt;/li&gt;
&lt;li&gt;V template / repetitive apply&lt;/li&gt;
&lt;li&gt;sync local to live&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;version control / gitflow&lt;/p&gt;
&lt;p&gt;helm template 有提供許多語法，可以有系統化的產生重複的 k8s object
ex. 可以跑 for loop / for each
這個在 IaC 或是 resource as code 的 xxx as code 都十分有利&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;argo-cd&#34;&gt;Argo CD&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Declarative GitOps CD for Kubernetes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://argo-cd.readthedocs.io/en/stable/assets/argocd-ui.gif&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;why-argo-cd&#34;&gt;Why Argo CD?&lt;/h3&gt;
&lt;p&gt;Application definitions, configurations, and environments should be declarative and version controlled. Application deployment and lifecycle management should be automated, auditable, and easy to understand.&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;application 應該是明確宣告的，清楚描述，並且有版本控管
描述 application 本身，附帶的設定 secret / configmap
environment 也應該是宣告式的&lt;/p&gt;
&lt;p&gt;application 的部署與 lifecycle 管理，都應該是自動化，可以稽核，而且好理解
標準化，自動化
UI 圖像描述，一目瞭然。但事實上如果有做到講 local file 推到版本控制，光是使用 editor 也可以做到一目瞭然&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;argo-cd-1&#34;&gt;Argo CD&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;gitflow / git repository&lt;/li&gt;
&lt;li&gt;argocd application sync file from repository&lt;/li&gt;
&lt;li&gt;argocd controller 自動化的確保 sync
&lt;ul&gt;
&lt;li&gt;un-sync 自動化處理&lt;/li&gt;
&lt;li&gt;無法 sync 時通知&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;gitflow&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;k8s object 的 change 是需要 PR review 的，不是想改就 kubectl apply 下去&lt;/li&gt;
&lt;li&gt;k8s object 的品質把關，來自高品質的 review&lt;/li&gt;
&lt;li&gt;針對 cluster 上的變更都有管控&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能夠直接掌握 live object，透過 editor 檢查 git repository，或是透過 argocd UI 檢視&lt;/p&gt;
&lt;p&gt;local file 等於 live object
在複雜的環境裡很重要，ex. k8s 內有成千上百個 helm release，可以用 editor 檢視 local file&lt;/p&gt;
&lt;p&gt;不然要透過 k8s 去打 api&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;api call 也是資源啊，能省則省&lt;/li&gt;
&lt;li&gt;editor 更直覺快速&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;applicationset&#34;&gt;applicationset&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Generators-Git/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git generator&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apiVersion: argoproj.io/v1alpha1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kind: ApplicationSet
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  name: general-argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  namespace: argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spec:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  generators:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  - git:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      repoURL: https://github.com/chechiachang/azure-argo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      revision: master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      directories:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - path: clusters/dev/dev-general/argocd/*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  template:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    metadata:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      name: &amp;#39;dev-general-argocd-{{path.basename}}&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      labels:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        environment: dev
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        type: infra
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        function: argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        cluster: dev-general
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    spec:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      project: default
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      syncPolicy:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        automated:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          prune: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      source:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        repoURL: https://github.com/chechiachang/azure-argo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        targetRevision: master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        path: &amp;#39;clusters/dev/dev-general/argocd/{{path.basename}}&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      destination:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        server: https://kubernetes.default.svc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        namespace: argocd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;argocd 除了 sync 以外還提供的許多功能&lt;/p&gt;
&lt;p&gt;applicationset 定義一組 set，可以透過 generator 迭代的產生大量的 application
ex. 一次 deploy 一群 redis&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;applicationset-1&#34;&gt;applicationset&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dev-general
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── default/redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── default/mysql
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── default/my-app
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── nginx-ingress/nginx-ingress
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── argocd/argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;stag-general
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;prod-general
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;cluster-wide-的-k8s-object&#34;&gt;cluster-wide 的 k8s object&lt;/h3&gt;
&lt;p&gt;cluster-wide 的 k8s object 也很適合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 helm template helper 來管理 value.yaml label / annotation / env / &amp;hellip;&lt;/li&gt;
&lt;li&gt;namespace&lt;/li&gt;
&lt;li&gt;rbac&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;cluster-wide 的 k8s object 也很適合塞進 argocd 管理&lt;/p&gt;
&lt;p&gt;例如 cluster access control，複雜的 rbac rule，也很適合整理成為 helm chart&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以輕鬆實現 user -&amp;gt; rule 多對多&lt;/li&gt;
&lt;li&gt;可以快速增減 user group&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;issues-1&#34;&gt;Issues&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;V change review / diff before apply&lt;/li&gt;
&lt;li&gt;V source of live record&lt;/li&gt;
&lt;li&gt;V template / repetitive apply&lt;/li&gt;
&lt;li&gt;V sync local to live&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;more-issues-multi-hybrid-cluster&#34;&gt;More Issues: multi-hybrid cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;multiple k8s
&lt;ul&gt;
&lt;li&gt;dev / stag / prod&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;hybrid k8s
&lt;ul&gt;
&lt;li&gt;bare metal / public cloud&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;由於 k8s 內部的 component 都已經標準化，可以很輕易地複製測試過的 component
dev 測試 PR branch，staging 跑 release candicate，production 選擇經過測試的 release&lt;/p&gt;
&lt;p&gt;能夠確保 dev / stag / prod 的 k8s object 是完全相同的&lt;/p&gt;
&lt;p&gt;hybrid 環境管理，某些 k8s 元件應該安裝在哪些 cluster 上&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;aws ingress controller / csi driver / cni node daemonsets&lt;/li&gt;
&lt;li&gt;local nginx-ingress controller&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;more-issues-multi-hybrid-cluster-1&#34;&gt;More Issues: multi-hybrid cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Generators-Cluster/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;argocd cluster generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kind: ApplicationSet
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  name: aws-cni
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  namespace: kube-system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spec:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  generators:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  - clusters:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      selector:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        matchLabels:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          eks: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          #bare-metal: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          staging: true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;more-issues-multi-hybrid-cluster-2&#34;&gt;More Issues: multi-hybrid cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Generators-Cluster/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;argocd cluster generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;aws-eks-1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── aws cni
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── aws ingress controller
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── nginx-ingress controller
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bare-metal-1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── cilium
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── bare-metal ingress
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── nginx-ingress controller
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  多座 cluster
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;more-issues-multi-hybrid-cluster-3&#34;&gt;More Issues: multi-hybrid cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;applicationset&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;more-issues-test&#34;&gt;More Issues: Test&lt;/h3&gt;
&lt;p&gt;k8s object 需不需要測試&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;infra-test (bare-metal / self-hosted)&lt;/li&gt;
&lt;li&gt;release (helm chart)&lt;/li&gt;
&lt;li&gt;live status&lt;/li&gt;
&lt;li&gt;stress / load test / chaos engineering&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;k8s object 需不需要測試，覺得需要測試的請舉手&lt;/p&gt;
&lt;p&gt;k8s object 需不需要測試，就跟這個投影片一樣
有時間就講一下，沒時間就跳過吧&lt;/p&gt;
&lt;p&gt;infra-test provider 應該都測完了
要測的是 k8s object 的功能是否符合預期&lt;/p&gt;
&lt;p&gt;當然，有測試的 helm releae 與沒測試的 helm release 也是天差地遠&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;test-ansible-playbook&#34;&gt;Test: ansible playbook&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;測試 apply 後 k8s object 的 status
&lt;ul&gt;
&lt;li&gt;ingress 是否 ready&lt;/li&gt;
&lt;li&gt;endpoint 是否有產生&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可以先測
&lt;ul&gt;
&lt;li&gt;networking (ingress / svc)&lt;/li&gt;
&lt;li&gt;storage (csi / pvc)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Test&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nginx&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;hosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;gather_facts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;vars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;deployment_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;nginx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;tasks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Get&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kubectl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment_name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonpath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{.status.readyReplicas}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment_status&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;failed_when&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Verify&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;running&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;that&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;null&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;fail_msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Deployment {{ deployment_name }} is not running.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;more-issues-test-1&#34;&gt;More Issues: Test&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;Test&lt;/del&gt; Monitoring&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;prometheus rule with helm chart&lt;/li&gt;
&lt;li&gt;ServiceMonitor&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  helm release 一個 api-services
api service 有 /metrics endpoint
透過 ServiceMonitor 來持續性的紀錄 metrics
透過 PrometheusRule 來設定異常 metrics 的告警
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;more-issues-test-2&#34;&gt;More Issues: Test&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;stress-test / load test
&lt;ul&gt;
&lt;li&gt;k6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;chaos-engineering
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chaos-mesh.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://chaos-mesh.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/asobti/kube-monkey&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/asobti/kube-monkey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;kubectl + gitflow&lt;/li&gt;
&lt;li&gt;helm chart&lt;/li&gt;
&lt;li&gt;argocd: applicationset / generator&lt;/li&gt;
&lt;li&gt;test&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Q &amp;amp; A&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DevOpsDay: HashiCorp Vault 自建金鑰管理最佳入坑姿勢</title>
      <link>https://chechia.net/zh-hant/slides/2023-09-26-devopsday-2023-vault/</link>
      <pubDate>Thu, 21 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://chechia.net/zh-hant/slides/2023-09-26-devopsday-2023-vault/</guid>
      <description>
&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;onepiece.jpg&#34;
  &gt;

&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;Q1: 有過使用 hashicorp vault 的人請舉手&lt;/p&gt;
&lt;p&gt;沒使用過的人不是這個 session 的目標聽眾，可以 QR code 拍下來去聽別場。例如對面同題材的session
QR code 有投影片，範例 github repo，投影片裡還有講稿，所以我今天在這裡的用處就是念稿，真的可以 qrcode 拍了回家看&lt;/p&gt;
&lt;p&gt;Q2: 有使用過 infrastructure as code / terraform 的人請舉手&lt;/p&gt;
&lt;p&gt;有使用 vault 但是沒有使用 IaC 的朋友，才是這場 session 的主要受眾&lt;/p&gt;
&lt;p&gt;Q3: 有使用 iac deploy vault stack，或是有使用 iac / vcs 管理 vault 內的 policy 的人請舉手&lt;/p&gt;
&lt;p&gt;這些人可以出去吃零食，今天講的內容你們都會了，我沒什麼東西可以跟你們分享&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;background.jpg&#34;
  &gt;

&lt;h2 id=&#34;hashicorp-vault&#34;&gt;HashiCorp Vault&lt;/h2&gt;
&lt;h2 id=&#34;自建金鑰管理最佳實踐&#34;&gt;自建金鑰管理最佳實踐&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://chechia.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Che Chia Chang&lt;/a&gt; | &lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vault 鐵人賽 workshop&lt;/a&gt;&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  s
標題有稍微修改
&lt;/aside&gt;
&lt;hr&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;about me&#34; srcset=&#34;
               /zh-hant/slides/2023-09-26-devopsday-2023-vault/about-me_hu0533df8c600b6ebf5e775c57536fef00_311608_e417eec7e7a8490233a5f244ea106c42.webp 400w,
               /zh-hant/slides/2023-09-26-devopsday-2023-vault/about-me_hu0533df8c600b6ebf5e775c57536fef00_311608_12a09867edd8370d5a4cd5564f097279.webp 760w,
               /zh-hant/slides/2023-09-26-devopsday-2023-vault/about-me_hu0533df8c600b6ebf5e775c57536fef00_311608_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://chechia.net/zh-hant/slides/2023-09-26-devopsday-2023-vault/about-me_hu0533df8c600b6ebf5e775c57536fef00_311608_e417eec7e7a8490233a5f244ea106c42.webp&#34;
               width=&#34;760&#34;
               height=&#34;375&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://chechia.net/zh-hant/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;About Me&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;background.jpg&#34;
  &gt;

&lt;h3 id=&#34;outline&#34;&gt;Outline&lt;/h3&gt;
&lt;h3 id=&#34;from-dev-to-prod-ready&#34;&gt;from dev to prod-ready&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;terraform deployment IaC
&lt;ul&gt;
&lt;li&gt;on aws / azure / gcp / k8s&lt;/li&gt;
&lt;li&gt;如何開始&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;terraform configuration IaC
&lt;ul&gt;
&lt;li&gt;IaC everything
&lt;ul&gt;
&lt;li&gt;secret backends / auth method / role / policy / audit &amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;工作流程自動化 gitflow / tested / automation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  manage vault infra &amp;amp; vault configuration from a aspect of devops
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;vault-基礎的學習資源&#34;&gt;Vault 基礎的學習資源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1iex9lm89OCIR8IAoD1RPe4vcW--bcKBmMHoixDybqP8/edit?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2023-05-10 雲端地端通吃的私鑰管理平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chechia.net/zh-hant/tag/%E9%90%B5%E4%BA%BA%E8%B3%BD2023/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2023 鐵人賽: vault 10- day workshop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ithelp.ithome.com.tw/users/20120327/ironman/4057&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021 鐵人賽: terraform 30 day workshop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chechiachang/vault-playground&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;範例 Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;同一時間，Vault + Kubernetes 請出門對面DE會議室&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;不會講 vault 的基礎操作，但如果你需要學習資源，你可以來這邊找
第一個 google slides 是我在其他場合的演講，適合第一次接觸 vault，或是正在評估是否要導入 vault 的團隊&lt;/p&gt;
&lt;p&gt;第二個今年的 ithome 2023鐵人賽，我寫的內容就是 vault workshop，雖然寫到第十篇就因故停更，但前面 1-8 篇剛好是 vault 操作基礎，使用 chatgpt 翻譯 vault official tutorial，也是適合第一次使用 vault 的人&lt;/p&gt;
&lt;p&gt;第三個是如果沒接觸過 infrastructure as code IaC，這個也是鐵人賽的 30 day workshop，這個有完賽佳作&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;production-deploy-checklisthttpsdeveloperhashicorpcomvaulttutorialskuberneteskubernetes-raft-deployment-guideproduction-deployment-checklist&#34;&gt;&lt;a href=&#34;https://developer.hashicorp.com/vault/tutorials/kubernetes/kubernetes-raft-deployment-guide#production-deployment-checklist&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;production deploy checklist&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;End-to-End TLS&lt;/li&gt;
&lt;li&gt;Single Tenancy&lt;/li&gt;
&lt;li&gt;Enable Auditing&lt;/li&gt;
&lt;li&gt;Immutable Upgrades&lt;/li&gt;
&lt;li&gt;Upgrade Frequently&lt;/li&gt;
&lt;li&gt;Restrict Storage Access&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;進入 production 前的維運問題&lt;/p&gt;
&lt;p&gt;vault 官方建議的 prod checklist
大多需要定期更新，維護，而非一勞永逸一次性作業&lt;/p&gt;
&lt;p&gt;例如 end-to-end TLS certificate 需要管理與更新&lt;/p&gt;
&lt;p&gt;auditing 對 vault 的存取紀錄需要安全的輸出，並且能夠檢核。設定做一次就可以生效。但是實務上未來會需要不斷的根據外部稽核需求調整&lt;/p&gt;
&lt;p&gt;immutable upgrades 指的是當你使用 vault server 與 storage backend，vault server 本身是 immutable 的，你可以自己使用 official binary build VM Image (ex. aws ami)，或是透過 container image release 來更新&lt;/p&gt;
&lt;p&gt;upgrade frequently，但要做的安全，而且有效率，最好是做到半自動化或是全自動化，如果沒有 IaC 會比較耗工&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;infrastructure-as-code&#34;&gt;Infrastructure as Code&lt;/h2&gt;
&lt;p&gt;導入 IaC ，做到頻繁且安全的 vault 更新，但同時又要有效率甚至全自動化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;multiple env: dev, stag, prod&lt;/li&gt;
&lt;li&gt;programable / reusable: 標準化，可重複使用的 code&lt;/li&gt;
&lt;li&gt;tested infrastructure&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;以 vault 為目標
維運 vault 的第一目標：安全第一，不求高效能，但是追求安全
是我們要將 deploy / release / upgrade vault 中的風險降到最低&lt;/p&gt;
&lt;p&gt;infra: 升級 vault 版本，調整 VM / container，調整 load balancer，除錯
config: 更改 auth-method / policy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;policy 容易改壞但無法及時發現，要用時才發現權限壞了&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;如何開始-iac-for-vault&#34;&gt;如何開始 IaC for Vault&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;immutable Vault server&lt;/li&gt;
&lt;li&gt;storage backend&lt;/li&gt;
&lt;li&gt;load balancer&lt;/li&gt;
&lt;li&gt;security group / firewall rule&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  IaC 好棒，那有沒有什麼資源可以幫助我們開始 deploy IaC Vault
答案是有的
&lt;/aside&gt;
&lt;hr&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh-hant/slides/2023-09-26-devopsday-2023-vault/deliver-iac_hu0533df8c600b6ebf5e775c57536fef00_243366_9f383f9419bbc426efb073535d07bb90.webp 400w,
               /zh-hant/slides/2023-09-26-devopsday-2023-vault/deliver-iac_hu0533df8c600b6ebf5e775c57536fef00_243366_e189cd499d567e542a61c269d1655dda.webp 760w,
               /zh-hant/slides/2023-09-26-devopsday-2023-vault/deliver-iac_hu0533df8c600b6ebf5e775c57536fef00_243366_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://chechia.net/zh-hant/slides/2023-09-26-devopsday-2023-vault/deliver-iac_hu0533df8c600b6ebf5e775c57536fef00_243366_9f383f9419bbc426efb073535d07bb90.webp&#34;
               width=&#34;760&#34;
               height=&#34;415&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.terraform.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.terraform.io/&lt;/a&gt;&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;deploy-on-public-cloud&#34;&gt;Deploy on public cloud&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-aws-vault&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hashicorp/terraform-aws-vault&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-aws-vault-starter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hashicorp/terraform-aws-vault-starter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-azurerm-vault&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hashicorp/terraform-azurerm-vault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/terraform-google-modules/terraform-google-vault&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/terraform-google-modules/terraform-google-vault&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  在公有雲 deploy Vault，雲服務商有提供既有的terraform module
不一定要照單全收，可以試著架起測試環境，然後調整terraform module，成為適合自己產品的架構
調整架構需要考量的點，底下分析
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;deploy-terraform-aws-vaulthttpsgithubcomhashicorpterraform-aws-vault&#34;&gt;Deploy &lt;a href=&#34;https://github.com/hashicorp/terraform-aws-vault&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;terraform-aws-vault&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://github.com/hashicorp/terraform-aws-vault/blob/master/_docs/architecture.png?raw=true&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  hashicorp 官方提供的 terraform-aws-vault 是一個不錯的開始
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;terraform-aws-vaulthttpsgithubcomhashicorpterraform-aws-vault&#34;&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-aws-vault&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;terraform-aws-vault&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ELB -&amp;gt; AWS Autoscaling Group -&amp;gt; EC2&lt;/li&gt;
&lt;li&gt;Backend: consul cluster&lt;/li&gt;
&lt;li&gt;Vault AMI&lt;/li&gt;
&lt;li&gt;security group&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-aws-vault/blob/master/test/README.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tested&lt;/a&gt; by hashicorp with &lt;a href=&#34;https://github.com/gruntwork-io/terratest&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;terratest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  goto &lt;a href=&#34;https://github.com/hashicorp/terraform-aws-vault&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hashicorp/terraform-aws-vault&lt;/a&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;terraform-aws-vaulthttpsgithubcomhashicorpterraform-aws-vault-1&#34;&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-aws-vault&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;terraform-aws-vault&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh-hant/slides/2023-09-26-devopsday-2023-vault/terraform-aws-vault_hu0533df8c600b6ebf5e775c57536fef00_310936_ae456b396f746fd2b64cf6415e38c5df.webp 400w,
               /zh-hant/slides/2023-09-26-devopsday-2023-vault/terraform-aws-vault_hu0533df8c600b6ebf5e775c57536fef00_310936_c450b16c6a48d50aa7bc746acdb4b8a6.webp 760w,
               /zh-hant/slides/2023-09-26-devopsday-2023-vault/terraform-aws-vault_hu0533df8c600b6ebf5e775c57536fef00_310936_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://chechia.net/zh-hant/slides/2023-09-26-devopsday-2023-vault/terraform-aws-vault_hu0533df8c600b6ebf5e775c57536fef00_310936_ae456b396f746fd2b64cf6415e38c5df.webp&#34;
               width=&#34;760&#34;
               height=&#34;384&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;如何使用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以參考 main.tf 範例&lt;/li&gt;
&lt;li&gt;可以檢視 ./modules 內說明逐步操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;terraform-aws-vault-starterhttpsgithubcomhashicorpterraform-aws-vault-starter&#34;&gt;&lt;a href=&#34;https://github.com/hashicorp/terraform-aws-vault-starter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;terraform-aws-vault-starter&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ELB -&amp;gt; AWS Autoscaling Group -&amp;gt; EC2&lt;/li&gt;
&lt;li&gt;security group&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.hashicorp.com/vault/docs/concepts/integrated-storage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Integrated storage (raft)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  goto &lt;a href=&#34;https://github.com/hashicorp/terraform-aws-vault-starter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hashicorp/terraform-aws-vault-starter&lt;/a&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;integrated-storage&#34;&gt;Integrated storage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.hashicorp.com/vault/docs/internals/integrated-storage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;integrated-storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Raft Consensus protocol
&lt;ul&gt;
&lt;li&gt;出incident要有辦法解&lt;/li&gt;
&lt;li&gt;stateful server&lt;/li&gt;
&lt;li&gt;備份，管理(資料遷移) util 工具未必夠成熟&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;選一個會維護的&lt;a href=&#34;https://developer.hashicorp.com/vault/docs/configuration/storage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;storage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.hashicorp.com/vault/docs/configuration/storage/dynamodb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DynamoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.hashicorp.com/vault/docs/configuration/storage/mysql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MySQL&lt;/a&gt; / &lt;a href=&#34;https://developer.hashicorp.com/vault/docs/configuration/storage/postgresql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  注意storage是否能夠為維護，重啟，備份
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;on-kubernetes&#34;&gt;On Kubernetes&lt;/h2&gt;
&lt;p&gt;argocd + vault helm chart&lt;/p&gt;
&lt;p&gt;server 與 injector 建議分開兩個 argocd applicatoin / helm release獨立deploy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/vault-helm/blob/main/values.yaml#L357&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;server&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;選一個會維護的&lt;a href=&#34;https://developer.hashicorp.com/vault/docs/configuration/storage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;storage backend&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/vault-helm/blob/main/values.yaml#L46&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;injector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;goto &lt;a href=&#34;https://github.com/hashicorp/vault-helm/blob/main/values.yaml#L357&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hashicorp/vault-helm/blob/main/values.yaml#L357&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注意server 是否 ha&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;deploy-on-kuberneteshttpsdeveloperhashicorpcomvaulttutorialskuberneteskubernetes-raft-deployment-guide&#34;&gt;&lt;a href=&#34;https://developer.hashicorp.com/vault/tutorials/kubernetes/kubernetes-raft-deployment-guide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Deploy On Kubernetes&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;warning&#34; srcset=&#34;
               /zh-hant/slides/2023-09-26-devopsday-2023-vault/k8s-security-warning_hu0533df8c600b6ebf5e775c57536fef00_141847_8f5dde8ddcc13e3e54037d2244da90ac.webp 400w,
               /zh-hant/slides/2023-09-26-devopsday-2023-vault/k8s-security-warning_hu0533df8c600b6ebf5e775c57536fef00_141847_e8c6254ba1ebf4ad920e34f8d89ffe5d.webp 760w,
               /zh-hant/slides/2023-09-26-devopsday-2023-vault/k8s-security-warning_hu0533df8c600b6ebf5e775c57536fef00_141847_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://chechia.net/zh-hant/slides/2023-09-26-devopsday-2023-vault/k8s-security-warning_hu0533df8c600b6ebf5e775c57536fef00_141847_8f5dde8ddcc13e3e54037d2244da90ac.webp&#34;
               width=&#34;760&#34;
               height=&#34;229&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/administer-cluster/securing-a-cluster/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;secure your k8s&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;goto &lt;a href=&#34;https://kubernetes.io/docs/tasks/administer-cluster/securing-a-cluster/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://kubernetes.io/docs/tasks/administer-cluster/securing-a-cluster/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;FAQ: on VM or on K8s?
問題不是 vault 在 VM 上安全，還是在 k8s 上安全
而是團隊能不能 secure 底下的 infra，如果熟 VM 就會覺得 VM 好做
secure k8s 是 VM + k8s 都要&lt;/p&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;回到-outline-prod-ready&#34;&gt;回到 Outline: prod-ready&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;terraform configuration IaC
&lt;ul&gt;
&lt;li&gt;auth method / config / role&lt;/li&gt;
&lt;li&gt;secret mounts&lt;/li&gt;
&lt;li&gt;policy
&lt;ul&gt;
&lt;li&gt;team / people&lt;/li&gt;
&lt;li&gt;application / service account&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;audit log&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;vault-configuration-iac&#34;&gt;Vault Configuration IaC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VCS / PR reviewed&lt;/li&gt;
&lt;li&gt;well-formed / linted / no-typo&lt;/li&gt;
&lt;li&gt;multiple env: dev, stag, prod&lt;/li&gt;
&lt;li&gt;programable / reusable: 標準化，可重複使用的 code&lt;/li&gt;
&lt;li&gt;tested
&lt;ul&gt;
&lt;li&gt;可以為 terraform code 寫測試&lt;/li&gt;
&lt;li&gt;可以寫整合測試腳本測試 vault dev server&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;automation&lt;/li&gt;
&lt;li&gt;auditable&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;p&gt;version control 有多重要？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有 / 沒有 review 的 code 品質，天差地遠&lt;/li&gt;
&lt;li&gt;分享團隊知識，分享變更資訊&lt;/li&gt;
&lt;li&gt;避免最雷的同事出包，全 team 的效能瓶頸&lt;/li&gt;
&lt;li&gt;change management 對於 vault 內的的更改要最嚴格控制
&lt;ul&gt;
&lt;li&gt;沒有『誒是誰改了這個我怎麼不知道』這回事&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Linter / formated 是工作效率的根本&lt;/p&gt;
&lt;p&gt;多環境測試&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有安全的測試環境，才能促進團隊創新&lt;/li&gt;
&lt;li&gt;有 / 沒有 經過完整環境測試的 release 品質，天差地遠&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Programable / Reusable&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;variable / for loop&lt;/li&gt;
&lt;li&gt;reusable module / don&amp;rsquo;t repeat your self&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tested policy code&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;policy as code&lt;/li&gt;
&lt;li&gt;terratest&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;automation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gitflow&lt;/li&gt;
&lt;li&gt;secured admin access only to workflow. developer don&amp;rsquo;t have admin access.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;auditable&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;audit in code / review&lt;/li&gt;
&lt;li&gt;live server generate audit log&lt;/li&gt;
&lt;li&gt;外部稽核&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;hashicorp-official-tutorialhttpsdeveloperhashicorpcomvaulttutorialspoliciespolicieswrite-a-policy&#34;&gt;&lt;a href=&#34;https://developer.hashicorp.com/vault/tutorials/policies/policies#write-a-policy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hashicorp official tutorial&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tee admin-policy.hcl &amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Read system health check
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;path &amp;#34;sys/health&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  capabilities = [&amp;#34;read&amp;#34;, &amp;#34;sudo&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# List existing policies
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;path &amp;#34;sys/policies/acl&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  capabilities = [&amp;#34;list&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  configure vault policy with CLI
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;hashicorp-official-tutorialhttpsdeveloperhashicorpcomvaulttutorialspoliciespolicieswrite-a-policy-1&#34;&gt;&lt;a href=&#34;https://developer.hashicorp.com/vault/tutorials/policies/policies#write-a-policy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hashicorp official tutorial&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vault policy write admin admin-policy.hcl
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vault policy list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vault policy read admin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  CLI 管理很不方便
沒有 aggregated list view
查錯時需要耗費大量 api call 列出 policy 查表
透過 IaC sync policy code to server
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;how-to-use&#34;&gt;How to use&lt;/h2&gt;
&lt;p&gt;prerequisites: vault, terraform, terragrunt&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone git@github.com:chechiachang/vault-playground.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd vault-playground/usage/03-terraform-lives/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;terragrunt init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;terragrunt plan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  terraform 與 terragrunt 我的部落格上都有許多介紹文章，ithome 鐵人賽也有 30day workshop
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;vcs--pr-review&#34;&gt;VCS &amp;amp; PR review&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;local lint with &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform#terraform_fmt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;git pre-commit hook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PR
&lt;ul&gt;
&lt;li&gt;lint check&lt;/li&gt;
&lt;li&gt;pipeline module test &lt;code&gt;terraform test&lt;/code&gt; on github action&lt;/li&gt;
&lt;li&gt;integration test against vault dev server&lt;/li&gt;
&lt;li&gt;review&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;merge / automation
&lt;ul&gt;
&lt;li&gt;apply to dev environment automatically&lt;/li&gt;
&lt;li&gt;release candidate tag will apply to stag automatically&lt;/li&gt;
&lt;li&gt;release tag will push to pre-production and production&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;multiple-environment&#34;&gt;Multiple environment&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;dev -&amp;gt; stag -&amp;gt; prod 環境很接近
&lt;ul&gt;
&lt;li&gt;IaC + config as code&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;搭設新環境只需1分鐘(VM)，甚至數秒(container)，可以進行大量的測試&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;test&#34;&gt;Test&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;IaC code 可以使用 &lt;code&gt;terraform test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;config as code 可以使用 &lt;code&gt;terraform test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;live infrastructure 可以使用 terratest&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;test-examplehttpsgithubcomchechiachangvault-playgroundtreemasterusage03-terraform-modulessecret_backendkv_v2&#34;&gt;Test &lt;a href=&#34;https://github.com/chechiachang/vault-playground/tree/master/usage/03-terraform-modules/secret_backend/kv_v2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Example&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;resource &amp;#34;test_assertions&amp;#34; &amp;#34;main&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  component = &amp;#34;main&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  equal &amp;#34;mount_path&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    description = &amp;#34;default mount_path is ${local.mount_path}&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    got         = local.mount_path
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    want        = local.mount_path
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  equal &amp;#34;max_versions&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    description = &amp;#34;default max_versions is 10&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    got         = local.max_versions
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    want        = 10
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  equal &amp;#34;delete_version_after&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    description = &amp;#34;default delete_version_after is 10&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    got         = local.delete_version_after
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    want        = 12600
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;aside class=&#34;notes&#34;&gt;
  這個 module 只是一個 kv engine，所以隨手寫了一個簡單的 test
Demo 我在本地隨手跑一下測試
當你使用 terraform 時間夠久，使用規模越大時，會有復雜的 module，這時有寫測試的 module 就是天差地遠
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;policy-as-code-for-vault&#34;&gt;Policy as code for vault&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;vault ACL 是基於 path 設定權限&lt;/li&gt;
&lt;li&gt;當policy有成千上萬條，彼此可能會 conflict&lt;/li&gt;
&lt;li&gt;policy 的 policy
&lt;ul&gt;
&lt;li&gt;高高層次的(公司的資安政策)透過 policy as code 定義&lt;/li&gt;
&lt;li&gt;寫到 vault policy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.openpolicyagent.org/docs/latest/#1-download-opa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Open Policy Agent (OPA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.hashicorp.com/vault/tutorials/policies/sentinel#endpoint-governing-policies-egps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sentinel(Vault Enterprise): EGP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;gitflow--automation&#34;&gt;Gitflow &amp;amp; automation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;PR
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.runatlantis.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;atlantis&lt;/a&gt; run terraform plan&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PR merged&lt;/li&gt;
&lt;li&gt;PR apply
&lt;ul&gt;
&lt;li&gt;apply to dev environment automatically with gitflow&lt;/li&gt;
&lt;li&gt;release candidate tag will apply to stag automatically&lt;/li&gt;
&lt;li&gt;release tag will push to pre-production and production&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;aside class=&#34;notes&#34;&gt;
  goto &lt;a href=&#34;https://www.runatlantis.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.runatlantis.io/&lt;/a&gt;
PR comment 下會有針對 dev environemtn plan 的結果
使用 github webhook，可以直接在 PR approved 後，命令 atlantis 直接 apply 到 dev server
避免使用工程師 local machine 存取遠端環境，避免工程師取得管理員權限，避免人為操作失誤造成的 incident
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;使用 IaC deploy vault，並依照團隊需求逐步調整 infra&lt;/li&gt;
&lt;li&gt;使用 IaC 管理 vault 內部一切 config&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>Deploy Kafka on Kubernetes</title>
      <link>https://chechia.net/zh-hant/slides/2019-10-18-kafka-on-k8s/</link>
      <pubDate>Fri, 18 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://chechia.net/zh-hant/slides/2019-10-18-kafka-on-k8s/</guid>
      <description>&lt;h3 id=&#34;deploy-kafka-on-kubernetes&#34;&gt;Deploy Kafka on Kubernetes&lt;/h3&gt;
&lt;p&gt;Che-Chia Chang&lt;/p&gt;
&lt;p&gt;QRCode&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;about-me&#34;&gt;About Me&lt;/h3&gt;
&lt;p&gt;David (Che-Chia) Chang&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Backend / Devops @ &lt;a href=&#34;https://machix.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MachiX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.meetup.com/golang-taipei-meetup/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Golang Taipei Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ithelp.ithome.com.tw/users/20120327/ironman/2444&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020 Ithelp Ironman Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://t.me/chechiachang&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://t.me/chechiachang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;outline&#34;&gt;Outline&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Introduction to Kafka&lt;/li&gt;
&lt;li&gt;Deploy Kafka with Helm&lt;/li&gt;
&lt;li&gt;Kafka Topology&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10219040&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ithelp Ironman 30 days Challenge (7th-12nd day)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://kafka.apache.org/images/logo.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable width=&#34;70%&#34; height=&#34;70%&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://kafka.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://kafka.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;distributed-streaming-platform&#34;&gt;Distributed streaming platform&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Publish &amp;amp; Subscribe: r/w data like messaging system&lt;/li&gt;
&lt;li&gt;Store data in distributed, replicated, fault-tolerant cluster&lt;/li&gt;
&lt;li&gt;Scalable&lt;/li&gt;
&lt;li&gt;Realtime&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;concepts&#34;&gt;Concepts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Kafka run as a cluster&lt;/li&gt;
&lt;li&gt;Kafka cluster stores streams of &lt;strong&gt;records&lt;/strong&gt; in categories called &lt;strong&gt;topics&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;record = (key, value, timestamp)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;kafka-diagram&#34;&gt;Kafka Diagram&lt;/h3&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://kafka.apache.org/23/images/kafka-apis.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable width=&#34;70%&#34; height=&#34;70%&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h3 id=&#34;topic-partitions&#34;&gt;Topic Partitions&lt;/h3&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://kafka.apache.org/23/images/log_anatomy.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable width=&#34;70%&#34; height=&#34;70%&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h3 id=&#34;topic-partitions-1&#34;&gt;Topic Partitions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Data categorized by topic&lt;/li&gt;
&lt;li&gt;Data replicated in partitions&lt;/li&gt;
&lt;li&gt;Durability
&lt;ul&gt;
&lt;li&gt;consumer able to r/w complete data from at least 1 partition&lt;/li&gt;
&lt;li&gt;in order&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;distributed-data-streaming&#34;&gt;Distributed Data Streaming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Scalible r/w bandwith&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data Durability&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consistency&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Availability&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Partition Tolerance&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;multi-consumer&#34;&gt;Multi Consumer&lt;/h3&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://kafka.apache.org/23/images/log_consumer.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable width=&#34;70%&#34; height=&#34;70%&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h3 id=&#34;consumer-group&#34;&gt;Consumer Group&lt;/h3&gt;


















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://kafka.apache.org/23/images/consumer-groups.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable width=&#34;70%&#34; height=&#34;70%&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h3 id=&#34;consumer-group-1&#34;&gt;Consumer Group&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Partition deliver record to one consumer within each subscribing consumer group&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;deployment&#34;&gt;Deployment&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/helm/charts/tree/master/incubator/kafka&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Helm Kafka&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;deployment-1&#34;&gt;Deployment&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/chechiachang/kafka-on-kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/chechiachang/kafka-on-kubernetes&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat install.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# https://github.com/helm/charts/tree/master/incubator/kafka&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;HELM_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;kafka-1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;helm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;helm upgrade --install &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HELM_NAME&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; incubator/kafka --version 0.16.2 -f values-staging.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check values-staging.yaml before deployment&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;helm-chart-values&#34;&gt;Helm Chart Values&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;staging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ------------------------------------------------------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Kafka:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ------------------------------------------------------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## The StatefulSet installs 3 pods by default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;replicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## The kafka image repository&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;confluentinc/cp-kafka&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## The kafka image tag&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;imageTag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;5.0.1&amp;#34;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Confluent image for Kafka 2.0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## Specify a imagePullPolicy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;IfNotPresent&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## Configure resource requests and limits&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## ref: http://kubernetes.io/docs/user-guide/compute-resources/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# limits:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;#   cpu: 200m&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;#   memory: 1536Mi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# requests:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;#   cpu: 100m&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;#   memory: 1024Mi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;kafkaHeapOptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-Xmx4G -Xms1G&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## The StatefulSet Update Strategy which Kafka will use when changes are applied.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;updateStrategy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OnDelete&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## Start and stop pods in Parallel or OrderedReady (one-by-one.)  Note - Can not change after first release.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;podManagementPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OrderedReady&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## If RBAC is enabled on the cluster, the Kafka init container needs a service account&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## with permissisions sufficient to apply pod labels&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;rbac&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;affinity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;n&#34;&gt;podAntiAffinity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;n&#34;&gt;requiredDuringSchedulingIgnoredDuringExecution&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;labelSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;n&#34;&gt;matchExpressions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;n&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;In&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kafka&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;n&#34;&gt;topologyKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kubernetes.io/hostname&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;n&#34;&gt;podAffinity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;n&#34;&gt;preferredDuringSchedulingIgnoredDuringExecution&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;podAffinityTerm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;n&#34;&gt;labelSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;matchExpressions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;n&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;In&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zookeeper&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;n&#34;&gt;topologyKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kubernetes.io/hostname&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## Configuration Overrides. Specify any Kafka settings you would like set on the StatefulSet&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## here in map format, as defined in the official docs.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## ref: https://kafka.apache.org/documentation/#brokerconfigs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;configurationOverrides&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;default.replication.factor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;offsets.topic.replication.factor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Increased from 1 to 2 for higher output&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# &amp;#34;offsets.topic.num.partitions&amp;#34;: 3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;confluent.support.metrics.enable&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;false&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Disables confluent metric submission&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# &amp;#34;auto.leader.rebalance.enable&amp;#34;: true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# &amp;#34;auto.create.topics.enable&amp;#34;: true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# &amp;#34;controlled.shutdown.enable&amp;#34;: true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# &amp;#34;controlled.shutdown.max.retries&amp;#34;: 100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;message.max.bytes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;16000000&amp;#34;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Extend global topic max message bytes to 16 Mb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## Persistence configuration. Specify if and how to persist data to a persistent volume.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;persistence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## Prometheus Exporters / Metrics&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;prometheus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;## Prometheus JMX Exporter: exposes the majority of Kafkas metrics&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;jmx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;## Prometheus Kafka Exporter: exposes complimentary metrics to JMX Exporter&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;kafka&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;topics&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ------------------------------------------------------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Zookeeper:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ------------------------------------------------------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;zookeeper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;## If true, install the Zookeeper chart alongside Kafka&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;## ref: https://github.com/kubernetes/charts/tree/master/incubator/zookeeper&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;kubernetes-configurations&#34;&gt;Kubernetes Configurations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;replicas&lt;/li&gt;
&lt;li&gt;resource&lt;/li&gt;
&lt;li&gt;pod affinity&lt;/li&gt;
&lt;li&gt;persistence&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;kafka-configurations&#34;&gt;Kafka Configurations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;zookeeper&lt;/li&gt;
&lt;li&gt;configurationOverrides&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;default.replication.factor&amp;#34;: 3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;offsets.topic.replication.factor&amp;#34;: 1 # Increased from 1 to 2 for higher output
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # &amp;#34;offsets.topic.num.partitions&amp;#34;: 3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # &amp;#34;auto.leader.rebalance.enable&amp;#34;: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # &amp;#34;auto.create.topics.enable&amp;#34;: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;message.max.bytes&amp;#34;: &amp;#34;16000000&amp;#34; # Extend global topic max message bytes to 16 Mb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;monitoring-configurations&#34;&gt;Monitoring Configurations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;prometheus exporter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;monitoring is the key to production&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;deploy-after-understande-configs&#34;&gt;Deploy after Understande Configs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All Kafka garantees are based on a correctly configured cluster&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Incorrect configs will cause cluster unstable and data loss&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we can deploy :)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;pods&#34;&gt;Pods&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kubectl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;po&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kafka&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;NAME&lt;/span&gt;                                                     &lt;span class=&#34;n&#34;&gt;READY&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;STATUS&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;RESTARTS&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;AGE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;kafka&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;                                                &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;Running&lt;/span&gt;     &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;          &lt;span class=&#34;mi&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;kafka&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;                                                &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;Running&lt;/span&gt;     &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;          &lt;span class=&#34;mi&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;kafka&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;                                                &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;Running&lt;/span&gt;     &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;          &lt;span class=&#34;mi&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;kafka&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exporter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;88786&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d84b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z954z&lt;/span&gt;                         &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;Running&lt;/span&gt;     &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;          &lt;span class=&#34;mi&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;kafka&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zookeeper&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;                                      &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;Running&lt;/span&gt;     &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;          &lt;span class=&#34;mi&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;kafka&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zookeeper&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;                                      &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;Running&lt;/span&gt;     &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;          &lt;span class=&#34;mi&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;kafka&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zookeeper&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;                                      &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;Running&lt;/span&gt;     &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;          &lt;span class=&#34;mi&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;availability&#34;&gt;Availability&lt;/h3&gt;
&lt;p&gt;ex. replication factor=3&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 partitions, each 1 in a kafka-broker&lt;/li&gt;
&lt;li&gt;1 master partition 2 slave partitions (readonly)&lt;/li&gt;
&lt;li&gt;data &lt;strong&gt;sync&lt;/strong&gt; from master to slave&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;availability-1&#34;&gt;Availability&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;kafka keep a number of slave in-synced
&lt;ul&gt;
&lt;li&gt;too many in-sync -&amp;gt; slow down write confirm&lt;/li&gt;
&lt;li&gt;not enough will -&amp;gt; data loss&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;on-slave-failure&#34;&gt;On slave failure&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;client not affected&lt;/li&gt;
&lt;li&gt;keep enough in-sync slaves&lt;/li&gt;
&lt;li&gt;wait dead slave to back online&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;on-master-failure&#34;&gt;On master failure&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;slave select new master within in-synced slaves&lt;/li&gt;
&lt;li&gt;new master sync to slaves&lt;/li&gt;
&lt;li&gt;new master serve clients&lt;/li&gt;
&lt;li&gt;wait dead master to back online and become slave&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;configs-availability&#34;&gt;Configs Availability&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Metadata are stored in zookeeper
&lt;ul&gt;
&lt;li&gt;topic configs&lt;/li&gt;
&lt;li&gt;partition configs&lt;/li&gt;
&lt;li&gt;consumer offsets&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;重點&#34;&gt;重點&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;要仔細看完 helm chart values 的設定，設錯就幹掉重來&lt;/li&gt;
&lt;li&gt;kafka 的概念與設定，要花時間研究清楚&lt;/li&gt;
&lt;li&gt;resource &amp;amp; JVM heap size&lt;/li&gt;
&lt;li&gt;prometheus is a must&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;ithelp-ironman-challenge&#34;&gt;Ithelp Ironman Challenge&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;30 天內容都是 step-by-step&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;內容只是仔細看官方文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;challenge -&amp;gt; 自我成長&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;給輸在起跑點的人&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;thank-you&#34;&gt;Thank you&lt;/h3&gt;
</description>
    </item>
    
  </channel>
</rss>
