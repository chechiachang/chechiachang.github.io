<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Che-Chia Chang on Che-Chia Chang</title>
    <link>https://chechiachang.github.io/</link>
    <description>Recent content in Che-Chia Chang on Che-Chia Chang</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>chechiachang &amp;copy; 2016</copyright>
    <lastBuildDate>Wed, 15 May 2019 12:00:00 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Service Mesh for Microservices on Kubernetes</title>
      <link>https://chechiachang.github.io/talk/service-mesh-for-microservices-on-kubernetes/</link>
      <pubDate>Wed, 15 May 2019 12:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/service-mesh-for-microservices-on-kubernetes/</guid>
      <description>

&lt;h3 id=&#34;outlines&#34;&gt;Outlines&lt;/h3&gt;

&lt;p&gt;微服務蓬勃發展，傳統的 Monolith被分解為分散的為服務，已取得更高的效能與更彈性的管理。當眾多的為服務同時運作，產生複雜的依賴與交流，網路層不再只是有『有通就好』，而是需要精細且彈性的流量管理與監控，來提供&amp;gt;穩定的效能。本次主題將基於 Kubernetes 平台上的 Istio ，探討 Service Mesh 的概念與相關應用。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;何為 Service Mesh ？為何需要 Service Mesh ？&lt;/li&gt;
&lt;li&gt;Service Mesh 基本概念&lt;/li&gt;
&lt;li&gt;如何Service-to-Service的網路層管理監控&lt;/li&gt;
&lt;li&gt;導入 Istio 到 Kubernetes&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;收穫&#34;&gt;收穫&lt;/h3&gt;

&lt;p&gt;了解為服務的優勢與Cloud Native應用發展趨勢，了解 Service Mesh 與 Istio 觀念，並能使用 Istio 於 Kubernetes。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jenkins on Kubernetes</title>
      <link>https://chechiachang.github.io/talk/jenkins-on-kubernetes/</link>
      <pubDate>Sat, 20 Apr 2019 13:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/jenkins-on-kubernetes/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;How to deploy a cloud-native Jenkins with Jenkins X.&lt;/li&gt;
&lt;li&gt;A pipeline with Kubernetes based dynamics worker sclaing (jenkins-kubernetes).&lt;/li&gt;
&lt;li&gt;Give it a try.&lt;/li&gt;
&lt;li&gt;(Defered) Customized test reports for multiple language (ex. go-junit-report)&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Jenkins X on Kubernetes</title>
      <link>https://chechiachang.github.io/slides/jenkins-x-on-kubernetes/</link>
      <pubDate>Fri, 19 Apr 2019 21:36:50 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/slides/jenkins-x-on-kubernetes/</guid>
      <description>

&lt;h3 id=&#34;jenkins-https-jenkins-io&#34;&gt;&lt;a href=&#34;https://jenkins.io/&#34; target=&#34;_blank&#34;&gt;Jenkins&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;One of the earliest open source antomation server&lt;/li&gt;
&lt;li&gt;Most common option in use&lt;/li&gt;
&lt;li&gt;Flexible and customizable. Hundreds of plugins&lt;/li&gt;
&lt;li&gt;Support automation for any project&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;jenkins-x-https-jenkins-x-io&#34;&gt;&lt;a href=&#34;https://jenkins-x.io/&#34; target=&#34;_blank&#34;&gt;Jenkins X&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;CI/CD platform (Jenkins Platform)&lt;/li&gt;
&lt;li&gt;Cloud native serverless&lt;/li&gt;
&lt;li&gt;For modern cloud applications on Kubernetes.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;outlines&#34;&gt;Outlines&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#install&#34;&gt;Install Jenkins with jx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pipeline&#34;&gt;Create a Pipeline with jx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#client&#34;&gt;Develope with jx client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;check &lt;a href=&#34;https://github.com/jenkins-x/jx&#34; target=&#34;_blank&#34;&gt;Jenkins-X Github Repo&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;install&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;install&#34;&gt;Install&lt;/h3&gt;

&lt;p&gt;Create GKE cluster &amp;amp; Get Credentials&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gcloud init
gcloud components update
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;CLUSTER_NAME=jenkins-server
#CLUSTER_NAME=jenkins-serverless

gcloud container clusters create ${CLUSTER_NAME} \
  --num-nodes 1 \
  --machine-type n1-standard-4 \
  --enable-autoscaling \
  --min-nodes 1 \
  --max-nodes 2 \
  --zone asia-east1-b \
  --preemptible
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Create GKE cluster &amp;amp; Get Credentials&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Get credentials to access cluster with kubectl
gcloud container clusters get-credentials ${CLUSTER_NAME}

# Check cluster stats.
kubectl get nodes
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Download &lt;a href=&#34;https://github.com/jenkins-x/jx/releases&#34; target=&#34;_blank&#34;&gt;Jenkins X Release&lt;/a&gt; &amp;amp; install jx on Local Machine&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;JX_VERSION=v2.0.2
OS_ARCH=darwin-amd64
#OS_ARCH=linux-amd64
curl -L https://github.com/jenkins-x/jx/releases/download/&amp;quot;${JX_VERSION}&amp;quot;/jx-&amp;quot;${OS_ARCH}&amp;quot;.tar.gz | tar xzv
sudo mv jx /usr/local/bin
jx version

NAME               VERSION
jx                 2.0.2
Kubernetes cluster v1.11.7-gke.12
kubectl            v1.11.9-dispatcher
helm client        v2.11.0+g2e55dbe
helm server        v2.11.0+g2e55dbe
git                git version 2.20.1
Operating System   Mac OS X 10.14.4 build 18E226
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;(Install Option 1) Serverless Jenkins Pipeline&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DEFAULT_PASSWORD=mySecretPassWord123
jx install \
  --default-admin-password=${DEFAULT_PASSWORD} \
  --provider=&#39;gke&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Install options:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;Select Jenkins installation type:

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Serverless Jenkins X Pipelines with Tekon&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Static Master Jenkins&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Pick default workload build pack&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Kubernetes Workloads: Automated CI+CD with GitOps Promotion&lt;/label&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ ] Library Workloads: CI+Release but no CD&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Your Kubernetes context is now set to the namespace: jx
INFO[0231] To switch back to your original namespace use: jx namespace jx
...
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;(Install Option 2) Static Jenkins Server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DEFAULT_PASSWORD=mySecretPassWord123

jx install \
  --default-admin-password=${DEFAULT_PASSWORD} \
  --provider=&#39;gke&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Options:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;Select Jenkins installation type:

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Serverless Jenkins X Pipelines with Tekon&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Static Master Jenkins&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Pick default workload build pack&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Kubernetes Workloads: Automated CI+CD with GitOps Promotion&lt;/label&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ ] Library Workloads: CI+Release but no CD&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INFO[0465]Your Kubernetes context is now set to the namespace: jx
INFO[0465] To switch back to your original namespace use: jx namespace default

Access Static Jenkins Server through Domain with username and password
Domain http://jenkins.jx.11.22.33.44.nip.io/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;uninstall&#34;&gt;Uninstall&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx uninstall
# rm -rf ~/.jx
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;setup-ci-cd-pipeline&#34;&gt;Setup CI/CD Pipeline&lt;/h3&gt;

&lt;p&gt;Create Quickstart Repository&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl get pods --namespace jx --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# cd workspace
jx create quickstart
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Options:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ select the quickstart you wish to create  [Use arrows to move, type to filter]
  aspnet-app
  dlang-http
&amp;gt; golang-http
  jenkins-cwp-quickstart
  jenkins-quickstart
  node-http

INFO[0121] Watch pipeline activity via:    jx get activity -f serverless-jenkins-quickstart -w
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Check log of the first run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx logs pipeline
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Add a setup step for pullrequest&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd serverless-jenkins-quickstart
jx create step --pipeline pullrequest \
  --lifecycle setup \
  --mode replace \
  --sh &amp;quot;echo hello world&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Validate pipeline step for each modification&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx step validate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A build-pack pod started after git push. Watch pod status with kubectl.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl get pods --namespace jx --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Check Build Status on Prow (Serverless)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://deck.jx.130.211.245.13.nip.io/&#34; target=&#34;_blank&#34;&gt;http://deck.jx.130.211.245.13.nip.io/&lt;/a&gt;
Login with username and password&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Import Existing Repository&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# In source code repository
# Import jx to remote jenkins-server. This will apply a Jenkinsfile to repository by default
jx import \
--url git@github.com:chechiachang/serverless-jenkins-quickstart.git
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Update jenkins-x.yml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx create step
git commit
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Trouble Shooting: Failed to get jx resources&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx get pipelines
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make sure your jx (or kubectl) context is with the correct GKE and namespace&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kc config set-context gke_my-project_asia-east1-b_jenkins \
  --namespace=jx
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;helm-vs-jenkins-x&#34;&gt;Helm vs Jenkins X&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/helm/charts/tree/master/stable/jenkins&#34; target=&#34;_blank&#34;&gt;Jenkins Helm Chart&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create Jenkins master and slave cluster on Kubernetes&lt;/li&gt;
&lt;li&gt;utilizing the Jenkins Kubernetes plugin.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Jenkin Platform with jx&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jenkins Platform native to Kubernetes&lt;/li&gt;
&lt;li&gt;Powerful cloud native components: Prow, Nexus, Docker Registry, Tekton Pipeline, &amp;hellip;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;check-jenkins-x-examples&#34;&gt;Check jenkins-x examples&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&#34; target=&#34;_blank&#34;&gt;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;jx-client&#34;&gt;jx Client&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;jx get urls

Name                      URL
jenkins                   http://jenkins.jx.11.22.33.44.nip.io
jenkins-x-chartmuseum     http://chartmuseum.jx.11.22.33.44.nip.io
jenkins-x-docker-registry http://docker-registry.jx.11.22.33.44.nip.io
jenkins-x-monocular-api   http://monocular.jx.11.22.33.44.nip.io
jenkins-x-monocular-ui    http://monocular.jx.11.22.33.44.nip.io
nexus                     http://nexus.jx.11.22.33.44.nip.io
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Get Cluster Status&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx diagnose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Get Applications &amp;amp; Pipelines&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx get applications
jx get pipelines
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Get CI Activities &amp;amp; build log&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx get activities
jx get activities --filter=&#39;jenkins-x-on-kubernetes&#39;

jx get build log

INFO[0003] view the log at: http://jenkins.jx.11.22.33.44.nip.io/job/chechiachang/job/jenkins-x-on-kubernetes/job/feature-add-test/3/console
...
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Trigger Build &amp;amp; Check Activity&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx start pipeline
jx start pipeline --filter=&#39;jenkins-x-on-kubernetes/feature-add-test&#39;

jx get activities --filter=&#39;jenkins-x-on-kubernetes&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Create Pull Request&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx create pullrequest
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;summary&#34;&gt;Summary&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Demonstrate a Jenkins pipeline&lt;/li&gt;
&lt;li&gt;Jenkins plugin

&lt;ul&gt;
&lt;li&gt;master slave cluster&lt;/li&gt;
&lt;li&gt;kubernetes plugin&lt;/li&gt;
&lt;li&gt;lovely GUI&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;jx on k8s&lt;/li&gt;
&lt;li&gt;jx cli&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Jenkins 簡單用&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;設定與維護人力會比其他工具稍微多&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Jenkins 複雜用&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deep Customization: 希望花時間打造最符合自己需求的工具&lt;/li&gt;
&lt;li&gt;預期有特殊需求&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Jenkins X&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;應用依賴 Kubernetes 開發，測試，部屬 (ex. kubernetes client-go)&lt;/li&gt;
&lt;li&gt;使用 jx 一站式服務&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;The End&lt;/p&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/jenkins/github-page-qrcode.png&#34; width=&#34;45%&#34; height=&#34;45%&#34; /&gt;


&lt;/figure&gt;
</description>
    </item>
    
    <item>
      <title>從零開始的人臉辨識，七龍珠戰鬥力探測器</title>
      <link>https://chechiachang.github.io/talk/gdg-devfest-2018-scouter/</link>
      <pubDate>Fri, 19 Apr 2019 17:31:58 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/gdg-devfest-2018-scouter/</guid>
      <description>&lt;p&gt;是的，我們做了一款七龍珠中的戰鬥力探測器，透過人臉辨識，探測工程師的開源貢獻力。&lt;/p&gt;

&lt;p&gt;本次演講內容有:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;初心者的人臉辨識技術 ，Face Recognition API&lt;/li&gt;
&lt;li&gt;使用 Golang 在 Github 上做 Data Mining&lt;/li&gt;
&lt;li&gt;從零開始的 side project，開發心路歷程與收穫分享&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Jenkins X on Kubernetes</title>
      <link>https://chechiachang.github.io/post/jenkins-x-on-kubernetes/</link>
      <pubDate>Fri, 19 Apr 2019 12:15:41 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/post/jenkins-x-on-kubernetes/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://jenkins.io/&#34; target=&#34;_blank&#34;&gt;Jenkins&lt;/a&gt; is one of the earliest open source antomation server and remains the most common option in use today. Over the years, Jenkins has evolved into a powerful and flexible framework with hundreds of plugins to support automation for any project.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/&#34; target=&#34;_blank&#34;&gt;Jenkins X&lt;/a&gt;, on the other hand, is a CI/CD platform (Jenkins Platform) for modern cloud applications on Kubernetes.&lt;/p&gt;

&lt;p&gt;Here we talk about some basic concepts about Jenkins X and provide a hand-to-hand guide to deploy jenkins-x on Kubernetes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#architecture&#34;&gt;Architecture of Jenkins X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#install&#34;&gt;Install Jenkins with jx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pipeline&#34;&gt;Create a Pipeline with jx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#client&#34;&gt;Develope with jx client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information about jx itself, check &lt;a href=&#34;https://github.com/jenkins-x/jx&#34; target=&#34;_blank&#34;&gt;Jenkins-X Github Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;architecture&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;architecture&#34;&gt;Architecture&lt;/h1&gt;

&lt;p&gt;Check this beautiful diagram.&lt;/p&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/jenkins/architecture-serverless.png&#34; /&gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; &gt;
  &lt;h4&gt;&lt;a href=&#34;https://jenkins-x.io/architecture/diagram/&#34; target=&#34;_blank&#34;&gt;https://jenkins-x.io/architecture/diagram/&lt;/a&gt;&lt;/h4&gt;
  
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;install&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;install&#34;&gt;Install&lt;/h1&gt;

&lt;h3 id=&#34;create-gke-cluster-get-credentials&#34;&gt;Create GKE cluster &amp;amp; Get Credentials&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;gcloud init
gcloud components update
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;CLUSTER_NAME=jenkins-server
#CLUSTER_NAME=jenkins-serverless

gcloud container clusters create ${CLUSTER_NAME} \
  --num-nodes 1 \
  --machine-type n1-standard-4 \
  --enable-autoscaling \
  --min-nodes 1 \
  --max-nodes 2 \
  --zone asia-east1-b \
  --preemptible

# After cluster initialization, get credentials to access cluster with kubectl
gcloud container clusters get-credentials ${CLUSTER_NAME}

# Check cluster stats.
kubectl get nodes
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-jx-on-local-machine&#34;&gt;Install jx on Local Machine&lt;/h3&gt;

&lt;p&gt;[Jenkins X Release](&lt;a href=&#34;https://github.com/jenkins-x/jx/releases](https://github.com/jenkins-x/jx/releases&#34; target=&#34;_blank&#34;&gt;https://github.com/jenkins-x/jx/releases](https://github.com/jenkins-x/jx/releases&lt;/a&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;JX_VERSION=v2.0.2
OS_ARCH=darwin-amd64
#OS_ARCH=linux-amd64
curl -L https://github.com/jenkins-x/jx/releases/download/&amp;quot;${JX_VERSION}&amp;quot;/jx-&amp;quot;${OS_ARCH}&amp;quot;.tar.gz | tar xzv
sudo mv jx /usr/local/bin
jx version

NAME               VERSION
jx                 2.0.2
Kubernetes cluster v1.11.7-gke.12
kubectl            v1.11.9-dispatcher
helm client        v2.11.0+g2e55dbe
helm server        v2.11.0+g2e55dbe
git                git version 2.20.1
Operating System   Mac OS X 10.14.4 build 18E226
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;option-1-install-serverless-jenkins-pipeline&#34;&gt;(Option 1) Install Serverless Jenkins Pipeline&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;DEFAULT_PASSWORD=mySecretPassWord123
jx install \
  --default-admin-password=${DEFAULT_PASSWORD} \
  --provider=&#39;gke&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Options:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;Enter Github user name&lt;/li&gt;
&lt;li&gt;Enter Github personal api token for CI/CD&lt;/li&gt;
&lt;li&gt;Enable Github as Git pipeline server&lt;/li&gt;
&lt;li&gt;Select Jenkins installation type:

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Serverless Jenkins X Pipelines with Tekon&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Static Master Jenkins&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Pick default workload build pack

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Kubernetes Workloads: Automated CI+CD with GitOps Promotion&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Library Workloads: CI+Release but no CD&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Select the organization where you want to create the environment repository:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;chechiachang&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Your Kubernetes context is now set to the namespace: jx
INFO[0231] To switch back to your original namespace use: jx namespace jx
INFO[0231] Or to use this context/namespace in just one terminal use: jx shell
INFO[0231] For help on switching contexts see: https://jenkins-x.io/developing/kube-context/
INFO[0231] To import existing projects into Jenkins:       jx import
INFO[0231] To create a new Spring Boot microservice:       jx create spring -d web -d actuator
INFO[0231] To create a new microservice from a quickstart: jx create quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;option-2-install-static-jenkins-server&#34;&gt;(Option 2) Install Static Jenkins Server&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;DEFAULT_PASSWORD=mySecretPassWord123

jx install \
  --default-admin-password=${DEFAULT_PASSWORD} \
  --provider=&#39;gke&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Options:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;Enter Github user name&lt;/li&gt;
&lt;li&gt;Enter Github personal api token for CI/CD&lt;/li&gt;
&lt;li&gt;Enable Github as Git pipeline server&lt;/li&gt;
&lt;li&gt;Select Jenkins installation type:

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Serverless Jenkins X Pipelines with Tekon&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Static Master Jenkins&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Pick default workload build pack

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Kubernetes Workloads: Automated CI+CD with GitOps Promotion&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Library Workloads: CI+Release but no CD&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Select the organization where you want to create the environment repository:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;chechiachang&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INFO[0465]Your Kubernetes context is now set to the namespace: jx
INFO[0465] To switch back to your original namespace use: jx namespace default
INFO[0465] Or to use this context/namespace in just one terminal use: jx shell
INFO[0465] For help on switching contexts see: https://jenkins-x.io/developing/kube-context/
INFO[0465] To import existing projects into Jenkins:       jx import
INFO[0465] To create a new Spring Boot microservice:       jx create spring -d web -d actuator
INFO[0465] To create a new microservice from a quickstart: jx create quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Access Static Jenkins Server through Domain with username and password
Domain &lt;a href=&#34;http://jenkins.jx.11.22.33.44.nip.io/&#34; target=&#34;_blank&#34;&gt;http://jenkins.jx.11.22.33.44.nip.io/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;uninstall&#34;&gt;Uninstall&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx uninstall
# rm -rf ~/.jx
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;pipeline&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;setup-ci-cd-pipeline&#34;&gt;Setup CI/CD Pipeline&lt;/h1&gt;

&lt;h3 id=&#34;create-quickstart-repository&#34;&gt;Create Quickstart Repository&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;kubectl get pods --namespace jx --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# cd workspace
jx create quickstart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Which organisation do you want to use? chechiachang&lt;/li&gt;
&lt;li&gt;Enter the new repository name:  serverless-jenkins-quickstart&lt;/li&gt;

&lt;li&gt;&lt;p&gt;select the quickstart you wish to create  [Use arrows to move, type to filter]
angular-io-quickstart
aspnet-app
dlang-http
&amp;gt; golang-http
jenkins-cwp-quickstart
jenkins-quickstart
node-http&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INFO[0121] Watch pipeline activity via:    jx get activity -f serverless-jenkins-quickstart -w
INFO[0121] Browse the pipeline log via:    jx get build logs chechiachang/serverless-jenkins-quickstart/master
INFO[0121] Open the Jenkins console via    jx console
INFO[0121] You can list the pipelines via: jx get pipelines
INFO[0121] Open the Jenkins console via    jx console
INFO[0121] You can list the pipelines via: jx get pipelines
INFO[0121] When the pipeline is complete:  jx get applications
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;check-log-of-the-first-run&#34;&gt;Check log of the first run&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx logs pipeline
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;add-step-to-pipeline&#34;&gt;Add Step to Pipeline&lt;/h3&gt;

&lt;p&gt;Add a setup step for pullrequest&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd serverless-jenkins-quickstart
jx create step --pipeline pullrequest \
  --lifecycle setup \
  --mode replace \
  --sh &amp;quot;echo hello world&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Validate pipeline step for each modification&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx step validate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A build-pack pod started after git push. Watch pod status with kubectl.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl get pods --namespace jx --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;check-build-status-on-prow-serverless&#34;&gt;Check Build Status on Prow (Serverless)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://deck.jx.130.211.245.13.nip.io/&#34; target=&#34;_blank&#34;&gt;http://deck.jx.130.211.245.13.nip.io/&lt;/a&gt;
Login with username and password&lt;/p&gt;

&lt;h3 id=&#34;import-existing-repository&#34;&gt;Import Existing Repository&lt;/h3&gt;

&lt;p&gt;In source code repository:&lt;/p&gt;

&lt;p&gt;Import jx to remote jenkins-server. This will apply a Jenkinsfile to repository by default&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx import --url git@github.com:chechiachang/serverless-jenkins-quickstart.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Update jenkins-x.yml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx create step
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git commit &amp;amp; push&lt;/p&gt;

&lt;h3 id=&#34;trouble-shooting&#34;&gt;Trouble Shooting&lt;/h3&gt;

&lt;p&gt;Failed to get jx resources&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jx get pipelines
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make sure your jx (or kubectl) context is with the correct GKE and namespace&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kc config set-context gke_my-project_asia-east1-b_jenkins \
  --namespace=jx
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;why-not-use-helm-chart&#34;&gt;Why not use helm chart?&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s readlly depend on what we need in CI/CD automation.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/helm/charts/tree/master/stable/jenkins&#34; target=&#34;_blank&#34;&gt;Jenkins Helm Chart&lt;/a&gt; create Jenkins master and slave cluster on Kubernetes utilizing the Jenkins Kubernetes plugin.
Jenkin Platform with jx is Jenkins Platform native to Kubernetes. It comes with powerful cloud native components like Prow automation, Nexus, Docker Registry, Tekton Pipeline, &amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;check-jenkins-x-examples&#34;&gt;Check jenkins-x examples&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&#34; target=&#34;_blank&#34;&gt;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;client&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;client&#34;&gt;Client&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;jx get urls
Name                      URL
jenkins                   http://jenkins.jx.11.22.33.44.nip.io
jenkins-x-chartmuseum     http://chartmuseum.jx.11.22.33.44.nip.io
jenkins-x-docker-registry http://docker-registry.jx.11.22.33.44.nip.io
jenkins-x-monocular-api   http://monocular.jx.11.22.33.44.nip.io
jenkins-x-monocular-ui    http://monocular.jx.11.22.33.44.nip.io
nexus                     http://nexus.jx.11.22.33.44.nip.io
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-cluster-status&#34;&gt;Get Cluster Status&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx diagnose
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-applications-pipelines&#34;&gt;Get Applications &amp;amp; Pipelines&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx get applications
jx get pipelines
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-ci-activities-build-log&#34;&gt;Get CI Activities &amp;amp; build log&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx get activities
jx get activities --filter=&#39;jenkins-x-on-kubernetes&#39;

jx get build log

INFO[0003] view the log at: http://jenkins.jx.11.22.33.44.nip.io/job/chechiachang/job/jenkins-x-on-kubernetes/job/feature-add-test/3/console
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;trigger-build-check-activity&#34;&gt;Trigger Build &amp;amp; Check Activity&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx start pipeline
jx start pipeline --filter=&#39;jenkins-x-on-kubernetes/feature-add-test&#39;

jx get activities --filter=&#39;jenkins-x-on-kubernetes&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-pull-request&#34;&gt;Create Pull Request&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;jx create pullrequest
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Jenkins X on Kubernetes</title>
      <link>https://chechiachang.github.io/project/jenkins-x-on-kubernetes/</link>
      <pubDate>Fri, 19 Apr 2019 11:11:59 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/project/jenkins-x-on-kubernetes/</guid>
      <description>&lt;p&gt;An example project to demonstrate a working pipeline with jenkins-x on Kubernetes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ELK for Applications on Kubernetes</title>
      <link>https://chechiachang.github.io/talk/elk-on-kubernetes/</link>
      <pubDate>Tue, 22 Jan 2019 19:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/elk-on-kubernetes/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go Webassembly Intro</title>
      <link>https://chechiachang.github.io/talk/go-webassembly-intro/</link>
      <pubDate>Tue, 18 Dec 2018 19:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/go-webassembly-intro/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kubernetes Container Runtime Interface</title>
      <link>https://chechiachang.github.io/post/kubernetes-container-runtime-interface/</link>
      <pubDate>Sat, 06 Oct 2018 12:07:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/post/kubernetes-container-runtime-interface/</guid>
      <description>&lt;p&gt;-&amp;gt; &lt;a href=&#34;https://chechiachang.github.io/slides/container-runtime-interface/&#34; target=&#34;_blank&#34;&gt;Slides here&lt;/a&gt; &amp;lt;-&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用 go-github 接 github api</title>
      <link>https://chechiachang.github.io/talk/go-github/</link>
      <pubDate>Tue, 28 Aug 2018 19:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/go-github/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CRI, OCI, CRI-O</title>
      <link>https://chechiachang.github.io/slides/container-runtime-interface/</link>
      <pubDate>Sun, 19 Aug 2018 18:00:35 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/slides/container-runtime-interface/</guid>
      <description>

&lt;p&gt;footer: Che-Chia David Chang, 2018,  &lt;a href=&#34;https://github.com/chechiachang&#34; target=&#34;_blank&#34;&gt;https://github.com/chechiachang&lt;/a&gt;
slidenumbers: true&lt;/p&gt;

&lt;h1 id=&#34;cri-oci-cri-o&#34;&gt;CRI, OCI, CRI-O&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;David Chang DevOps @ Mithril
Back-End Developer, Kuberentes admin, DevOps&lt;/p&gt;

&lt;p&gt;


  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/davidchang.jpg&#34; /&gt;


&lt;/figure&gt;



  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/mithril.jpg&#34; /&gt;


&lt;/figure&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;outline&#34;&gt;Outline&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Container Runtime Interface (CRI)&lt;/li&gt;
&lt;li&gt;Open Container Initiative (OCI)&lt;/li&gt;
&lt;li&gt;CRI-O&lt;/li&gt;
&lt;li&gt;Kubernetes on CRI-O&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;


  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/cri-o.png&#34; /&gt;


&lt;/figure&gt;



  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/kubernetes.png&#34; /&gt;


&lt;/figure&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;trend-kubernetes&#34;&gt;Trend Kubernetes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Kubernetes 1.3 introduced rktnetes&lt;/li&gt;
&lt;li&gt;Kubernetes 1.5 introduced CRI&lt;/li&gt;
&lt;li&gt;Kubernetes 1.7 removed pre-CRI Docker / rkt integration&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Currently works Kubelet to use CRI&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;CRI-O: released 1.0.x to match Kubernetes 1.7&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;nomination&#34;&gt;Nomination&lt;/h3&gt;

&lt;p&gt;CRI-O
- OCI-based implementation of Kubernetes Container Runtime Interface&lt;/p&gt;

&lt;p&gt;CRI
- Kubernetes Container Runtime Interface&lt;/p&gt;

&lt;p&gt;OCI
- Open Container initiative&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;projects-with-container-runtime&#34;&gt;Projects with Container Runtime&lt;/h3&gt;

&lt;p&gt;docker, rkt, LXC/LXD, runC, containerd, OpenVZ, systemd-nspawn, machinectl, qemu-kvm, lkvm&amp;hellip;&lt;/p&gt;

&lt;p&gt;Kubernetes (before 1.6) native supports
- Docker
- rkt&lt;/p&gt;

&lt;p&gt;


  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/docker-angry.png&#34; /&gt;


&lt;/figure&gt;



  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/rkt.png&#34; /&gt;


&lt;/figure&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;container-runtime-interface-cri&#34;&gt;Container Runtime Interface(CRI)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Enable Kubernetes to support more runtimes&lt;/li&gt;
&lt;li&gt;Free kubernetes to focus on orchestration from runtime integration&lt;/li&gt;
&lt;li&gt;Consists

&lt;ul&gt;
&lt;li&gt;a protocol buffers and gRPC API&lt;/li&gt;
&lt;li&gt;libraries, additional specifications and tools&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;container-runtime-interface-cri-1&#34;&gt;Container Runtime Interface(CRI)&lt;/h3&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/containerd.png&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;cri-api-in-kubernetes&#34;&gt;CRI api in kubernetes&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/apis/cri/runtime/v1alpha2/api.proto&#34; target=&#34;_blank&#34;&gt;https://github.com/kubernetes/kubernetes/
blob/master/pkg/kubelet/apis/
cri/runtime/v1alpha2/api.proto&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;cri-runtimes&#34;&gt;CRI runtimes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Docker CRI shim (cri-containerd)&lt;/li&gt;
&lt;li&gt;CoreOS &lt;a href=&#34;https://github.com/kubernetes-incubator/rktlet&#34; target=&#34;_blank&#34;&gt;rktlet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/frakti&#34; target=&#34;_blank&#34;&gt;frakti&lt;/a&gt;: hypervisor-based container runtimes&lt;/li&gt;
&lt;li&gt;Intel &lt;a href=&#34;https://github.com/clearcontainers/runtime&#34; target=&#34;_blank&#34;&gt;Clear container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenStack &lt;a href=&#34;https://github.com/kata-containers/runtime&#34; target=&#34;_blank&#34;&gt;kata runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cri-o.io/&#34; target=&#34;_blank&#34;&gt;cri-o&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;open-container-inititive-oci&#34;&gt;Open Container Inititive (OCI)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;open governance structure&lt;/li&gt;

&lt;li&gt;&lt;p&gt;container industry standards&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/opencontainers/runtime-spec/blob/master/spec.md&#34; target=&#34;_blank&#34;&gt;runtime spec&lt;/a&gt; defines configuration, execution environment, and lifecycle of a container&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/opencontainers/image-spec/blob/master/spec.md&#34; target=&#34;_blank&#34;&gt;image spec&lt;/a&gt; spec on archetecture and OS, filesystem layers and configuration&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;oci-from-aspect-of-user&#34;&gt;OCI from aspect of user&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use all OCI-conplimant container runtime&lt;/li&gt;
&lt;li&gt;Use all OCI-complimant images registries&lt;/li&gt;
&lt;li&gt;Similar UX&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://www.opencontainers.org/blog/2018/06/20/cri-o-how-standards-power-a-container-runtime&#34; target=&#34;_blank&#34;&gt;https://www.opencontainers.org/blog/2018/06/20/cri-o-how-standards-power-a-container-runtime&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;cri-o&#34;&gt;CRI-O&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;OCI-based implementation of Kubernetes Container Runtime Interface&lt;/li&gt;
&lt;li&gt;Kubernetes incubator project also part of the CNCF&lt;/li&gt;
&lt;li&gt;Dedicated for Kubernetes&lt;/li&gt;
&lt;li&gt;Enable CRI-O plugin to other runtimes&lt;/li&gt;
&lt;li&gt;Available on RHEL, Fedora, Centos, Ubuntu&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://cri-o.io/&#34; target=&#34;_blank&#34;&gt;http://cri-o.io/&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;cri-o-vs-docker-containerd&#34;&gt;CRI-O vs Docker (containerd)&lt;/h3&gt;

&lt;p&gt;kubelet -&amp;gt; cri-containerd (shim) -&amp;gt; containerd -&amp;gt; runC -&amp;gt; container
kubelet -&amp;gt; cri-o -&amp;gt; runC -&amp;gt; container&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lightweight&lt;/li&gt;
&lt;li&gt;Stability

&lt;ul&gt;
&lt;li&gt;built for Kubernetes&lt;/li&gt;
&lt;li&gt;No cli, image utilities, &amp;hellip;&lt;/li&gt;
&lt;li&gt;No swarm, mesosphere integration, &amp;hellip;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/cri-o-arch.png&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;let-s-use-cri-o&#34;&gt;Let&amp;rsquo;s use CRI-O&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/cri-o&#34; target=&#34;_blank&#34;&gt;Install cri-o&lt;/a&gt; and dependencies, runC and CNI&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install &lt;a href=&#34;https://github.com/containers/libpod&#34; target=&#34;_blank&#34;&gt;Podman&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Podman to cri-o as Docker-cli to Docker daemon&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo podman run --name my-golang golang:alpine bash
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/minikube/blob/master/docs/alternative_runtimes.md#using-cri-o&#34; target=&#34;_blank&#34;&gt;Minikube&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;minikube start \
  --network-plugin=cni \
  --container-runtime=cri-o

minikube start \
  --network-plugin=cni \
  --extra-config=kubelet.container-runtime=remote \
  --extra-config=kubelet.container-runtime-endpoint=/var/run/crio/crio.sock \
  --extra-config=kubelet.image-service-endpoint=/var/run/crio/crio.sock
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;run-kubernetes-on-cri-o&#34;&gt;Run Kubernetes on CRI-O&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-incubator/kubespray/blob/master/docs/cri-o.md&#34; target=&#34;_blank&#34;&gt;Kubespray&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubeadm_enabled: true
...
container_manager: crio
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/cri-o/blob/master/kubernetes.md&#34; target=&#34;_blank&#34;&gt;Full cluster&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubelet --container-runtime-endpoint=unix:///var/run/crio/crio.sock
...
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/&lt;/a&gt;
&lt;a href=&#34;https://kubernetes.io/blog/2017/11/containerd-container-runtime-options-kubernetes/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/blog/2017/11/containerd-container-runtime-options-kubernetes/&lt;/a&gt;
Rttps://kubernetes.io/blog/2017/11/containerd-container-runtime-options-kubernetes/
&lt;a href=&#34;https://xuxinkun.github.io/2017/12/12/docker-oci-runc-and-kubernetes/&#34; target=&#34;_blank&#34;&gt;https://xuxinkun.github.io/2017/12/12/docker-oci-runc-and-kubernetes/&lt;/a&gt;
&lt;a href=&#34;https://www.kubernetes.org.cn/1079.html&#34; target=&#34;_blank&#34;&gt;https://www.kubernetes.org.cn/1079.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>從零開始的人臉辨識，七龍珠戰鬥力探測器</title>
      <link>https://chechiachang.github.io/talk/coscup-2018-scouter/</link>
      <pubDate>Sat, 11 Aug 2018 09:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/coscup-2018-scouter/</guid>
      <description>&lt;p&gt;是的，我們做了一款七龍珠中的戰鬥力探測器，透過人臉辨識，探測工程師的開源貢獻力。&lt;/p&gt;

&lt;p&gt;本次演講內容有:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;初心者的人臉辨識技術 ，Face Recognition API&lt;/li&gt;
&lt;li&gt;使用 Golang 在 Github 上做 Data Mining&lt;/li&gt;
&lt;li&gt;從零開始的 side project，開發心路歷程與收穫分享&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Live Stream on Youtube&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/4SWO4x7bNjo?start=23633&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Kubernetes Networking</title>
      <link>https://chechiachang.github.io/talk/kubernetes-networking/</link>
      <pubDate>Thu, 14 Jun 2018 09:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/kubernetes-networking/</guid>
      <description>&lt;p&gt;從系統管理層面看Kubernetes的網路架構&lt;/p&gt;

&lt;p&gt;網路實作為Kubernetes架構，也是開發過程中容易出錯的部分。本次演講將從群集管理員的角度，說明Kubernetes 中網路的實作。&lt;/p&gt;

&lt;p&gt;大綱:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Docker 與 Kubernetes 的網路架構&lt;/li&gt;
&lt;li&gt;不同層級的網路溝通實作

&lt;ul&gt;
&lt;li&gt;容器對容器&lt;/li&gt;
&lt;li&gt;Pod對Pod&lt;/li&gt;
&lt;li&gt;集群內部與Service&lt;/li&gt;
&lt;li&gt;集群外部對Service&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;以flannel為例講解網路實作&lt;/li&gt;
&lt;li&gt;開發過程中常遇到的網路問題&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;希望聽眾對Kubernetes的網路架構能有基礎的概念，並在開發過程中遇到問題時，有明確的除錯步驟來判定網路是否有問題。遇到網路的問題，也能明確的知道問題的核心，並找到解法。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Manage and Schedule GPU Computing Tasks on Kubernetes</title>
      <link>https://chechiachang.github.io/talk/gpu-computing-on-kubernetes/</link>
      <pubDate>Wed, 16 May 2018 11:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/gpu-computing-on-kubernetes/</guid>
      <description>&lt;p&gt;Manage and Schedule GPU Computing Tasks on Kubernetes&lt;/p&gt;

&lt;p&gt;使用Kubernets管理集群GPU機器，靈活的分配調度GPU資源，並自動排程GPU運算工作。
使用者如資料科學家，只需將運算工作實施到Kubernetes上，Kubernetes便會檢視機器上可用的GPU資源，將運算工作分配到合適的機器
上，並監控工作的狀況。如資源不足Kubernetes會自動將工作加入排程，當前面的工作完成，GPU資源釋放後，Kubernetes會自動將運算
工作，配置到合適的機器上。管理者如系統工程師，只需透過Kubernetes，將機器上的GPU資源加入到Kubernetes。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Why we need Kubernetes for GPUs computing? Pros &amp;amp; Cons&lt;/li&gt;
&lt;li&gt;How to deploy a GPU-enabled Kubernetes cluster&lt;/li&gt;
&lt;li&gt;Run GPU computing on Kubernetes cluster&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Github API with go-github</title>
      <link>https://chechiachang.github.io/slides/go-github/</link>
      <pubDate>Thu, 19 Apr 2018 18:00:35 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/slides/go-github/</guid>
      <description>

&lt;p&gt;footer: Che-Chia David Chang, 2018,  &lt;a href=&#34;https://github.com/chechiachang/my-speeches/tree/master/go-github&#34; target=&#34;_blank&#34;&gt;https://github.com/chechiachang/my-speeches/tree/master/go-github&lt;/a&gt;
slidenumbers: true&lt;/p&gt;

&lt;h1 id=&#34;github-api-with-go-github&#34;&gt;Github API with Go-Github&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;David Chang
Back-End Developer, Kuberentes admin, DevOps&lt;/p&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/davidchang.jpg&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;outline&#34;&gt;Outline&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Let&amp;rsquo;s try Github API&lt;/li&gt;
&lt;li&gt;Use github API with go-github&lt;/li&gt;
&lt;li&gt;Work with limitation of github API&lt;/li&gt;
&lt;li&gt;An application of github user data&lt;/li&gt;
&lt;/ol&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/octocat.png&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;let-s-try-github-api&#34;&gt;Let&amp;rsquo;s Try Github API&lt;/h1&gt;

&lt;p&gt;Get data of a user with username&lt;/p&gt;

&lt;p&gt;Web page&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/chechiachang&#34; target=&#34;_blank&#34;&gt;https://github.com/chechiachang&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Api&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://api.github.com/users/chechiachang&#34; target=&#34;_blank&#34;&gt;https://api.github.com/users/chechiachang&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/search?q=location:Taiwan+type:user&#34; target=&#34;_blank&#34;&gt;https://github.com/search?q=location:Taiwan+type:user&lt;/a&gt;&lt;/p&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/go-github/github-api-search-bigbig.png&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://api.github.com/search/users?q=location:Taiwan&amp;amp;sort=followers&amp;amp;order=desc&#34; target=&#34;_blank&#34;&gt;/users?q=location:Taiwan&amp;amp;sort=followers&amp;amp;order=desc&lt;/a&gt;&lt;/p&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/go-github/github-api-search-audreyt.png&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.github.com/v3/search/#search-users&#34; target=&#34;_blank&#34;&gt;Github Search User API Docs&lt;/a&gt;&lt;/p&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/go-github/github-api-search-user.png&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;github-api-authentication&#34;&gt;Github API Authentication&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Most API requires authentication&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.github.com/v3/#authentication&#34; target=&#34;_blank&#34;&gt;https://developer.github.com/v3/#authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Let&amp;rsquo;s generate api access token from web page&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Github -&amp;gt; User -&amp;gt; settings -&amp;gt; Developer settings -&amp;gt; Personal access tokens&lt;/p&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/go-github/github-api-access-token.png&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;go-github&#34;&gt;Go-github&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Provide programmatic way to access APIs&lt;/li&gt;
&lt;li&gt;A client library for accessing github API in golang&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/google/go-github&#34; target=&#34;_blank&#34;&gt;https://github.com/google/go-github&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/go-github/github-api-gogithub-auth.png&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/chechiachang/scouter/blob/master/github.go&#34; target=&#34;_blank&#34;&gt;https://github.com/chechiachang/scouter/blob/master/github.go#L44&lt;/a&gt;&lt;/p&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/go-github/github-api-example.png&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;limitation-of-github-api&#34;&gt;Limitation of Github API&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;API paging limit: Search API only return first 1000 users&lt;/li&gt;
&lt;li&gt;API request limit
Search API 30 query / min
User API 50000 query / hour&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;https://api.github.com/search/users?q=location:taiwan+created:2008-01-01..2008-02-01&amp;amp;sort=joined&amp;amp;order=asc&#34; target=&#34;_blank&#34;&gt;/users?q=location:taiwan+created:2008-01-01..2008-02-01&amp;amp;sort=joined&amp;amp;order=asc&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;work-with-limitation&#34;&gt;Work with limitation&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Paging limit: narrow down search query with time interval&lt;/li&gt;
&lt;li&gt;Control your requests rate
One of the easist ways is time.Sleep()&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/chechiachang/scouter/blob/master/cmd/user_fetcher/main.go&#34; target=&#34;_blank&#34;&gt;https://github.com/chechiachang/scouter/blob/master/cmd/user_fetcher/main.go#L68&lt;/a&gt;&lt;/p&gt;




  

&lt;figure&gt;

&lt;img src=&#34;https://chechiachang.github.io/img/party_parrot.gif&#34; /&gt;


&lt;/figure&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;application-user-data-miners&#34;&gt;Application: User Data Miners&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Use access token&lt;/li&gt;
&lt;li&gt;Add Query, SearchOption, Sort, Order, ListOption &amp;hellip;&lt;/li&gt;
&lt;li&gt;fetch user data with search API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/chechiachang/scouter/blob/master/cmd/user_fetcher/main.go&#34; target=&#34;_blank&#34;&gt;https://github.com/chechiachang/scouter/blob/master/cmd/user_fetcher/main.go&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;an-application-using-github-data&#34;&gt;An Application Using Github Data&lt;/h1&gt;

&lt;p&gt;Scouter &lt;a href=&#34;https://github.com/chechiachang/scouter&#34; target=&#34;_blank&#34;&gt;https://github.com/chechiachang/scouter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s Live Demo&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;an-application-using-github-data-1&#34;&gt;An Application Using Github Data&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;User Data Miners to fetch user details, avatars, and contribution&lt;/li&gt;
&lt;li&gt;Face detection &amp;amp; Face recognition&lt;/li&gt;
&lt;li&gt;Api server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Video Stream -&amp;gt; Face Image -&amp;gt; Identify User -&amp;gt; User Data -&amp;gt; Show data&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Video Stream on COSCUP 2018&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/4SWO4x7bNjo?start=23633&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;hr /&gt;

&lt;h1 id=&#34;the-end&#34;&gt;The end&lt;/h1&gt;
</description>
    </item>
    
  </channel>
</rss>
