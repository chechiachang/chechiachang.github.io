[{"authors":["admin"],"categories":null,"content":"我是Che-Chia Chang，社群上常用的名子是 David Chang. 我是個軟體工程師，專長的領域是後端開發，開發維運，容器化應用，以及Kubernetes開發管理。目前為 Golang Taiwan Meetup 的 organizer。對 Golang 有興趣的朋友請務必加入。\nHi, I\u0026rsquo;m Che-Chia Chang. Also known as David Chang in communities in Taiwan. I\u0026rsquo;m a software engineer specilized in Back-End development, DevOps, containerization and Kubernetes administration. I\u0026rsquo;m hosting a developer community, Golang Taiwan Meetup. Join us if you are interested in Golang!\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1554194512,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"https://chechiachang.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"我是Che-Chia Chang，社群上常用的名子是 David Chang. 我是個軟體工程師，專長的領域是後端開發，開發維運，容器化應用，以及Kubernetes開發管理。目前為 Golang Taiwan Meetup 的 organizer。對 Golang 有興趣的朋友請務必加入。\nHi, I\u0026rsquo;m Che-Chia Chang. Also known as David Chang in communities in Taiwan. I\u0026rsquo;m a software engineer specilized in Back-End development, DevOps, containerization and Kubernetes administration. I\u0026rsquo;m hosting a developer community, Golang Taiwan Meetup. Join us if you are interested in Golang!","tags":null,"title":"Che-Chia Chang","type":"author"},{"authors":[],"categories":null,"content":" 何為 Service Mesh ？為何需要 Service Mesh ？ Service Mesh 基本概念 如何Service-to-Service的網路層管理監控 導入 Istio 到 Kubernetes  ","date":1557892800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554196996,"objectID":"e916ef8d8ca83c33bc000df4251fab20","permalink":"https://chechiachang.github.io/talk/new/","publishdate":"2019-04-02T17:10:57+08:00","relpermalink":"/talk/new/","section":"talk","summary":"當眾多的為服務同時運作，產生複雜的依賴與交流，網路層不再只是有『有通就好』，而是需要精細且彈性的流量管理與監控，來提供穩定的效能。本次主題將基於 Kubernetes 平台上的 Istio ，探討 Service Mesh 的概念與相關應用。","tags":["kubernetes","istio"],"title":"Service Mesh for Microservices on Kubernetes","type":"talk"},{"authors":null,"categories":["kubernetes"],"content":" Outline  CRI-O Open Container Initiative (OCI) Container Runtime Interface (CRI) Kubernetes on CRI-O  Trend  OCI established in June 2015\n Kubernetes 1.3 introduced rktnetes\n Kubernetes 1.5 introduced CRI\n Pre-CRI Docker integration was removed in Kubernetes 1.7\n CRI-O 1.0.x released to match Kubernetes 1.7\n Working kubelet to use CRI\n  What is CRI-O OCI-based implementation of Kubernetes Container Runtime Interface\nhttp://cri-o.io/\nOCI and CRI Open Container Inititive - A industrial standard for container - OCI established in June 2015 by Docker and other leaders in the container industry\nContainer Runtime Interface - Interface of container runtime for Kubelet\nOpen Container Initiative open governance structure (project) for the express purpose of creating open industry standards around container formats and runtime - formed under the auspices of the Linux Foundation - Currently has two spec - runtime spec - image spec\nhttps://www.opencontainers.org/\nFrom aspect of user  An OCI runtime can run all OCI conplimant container and images Similar UX  https://www.opencontainers.org/blog/2018/06/20/cri-o-how-standards-power-a-container-runtime\nCRI-O  Interface of container runtime for Kubelet  CRI-O vs Docker  OCI-based implementation for Kubernetes Build to support Kubernetes runtime (no unessasary features)  Let\u0026rsquo;s use CRI-O Podman\nPodman to cri-o as Docker-cli to Docker daemon.\npodman\nPodman tutorial\nWe should able to migrate from any OCI comfortant runtime and registry without pain.\nRun Kubernetes on CRI-O Install cri-o\nsudo add-apt-repository ppa:projectatomic/ppa \\ \u0026amp;\u0026amp; sudo apt-get update \\ \u0026amp;\u0026amp; sudo apt-get install cri-o-runc  https://github.com/kubernetes-sigs/cri-o/blob/master/kubernetes.md\nMinikube\nminikube start \\ --network-plugin=cni \\ --container-runtime=cri-o minikube start \\ --network-plugin=cni \\ --extra-config=kubelet.container-runtime=remote \\ --extra-config=kubelet.container-runtime-endpoint=/var/run/crio/crio.sock \\ --extra-config=kubelet.image-service-endpoint=/var/run/crio/crio.sock  References https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/\n","date":1538798820,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554112438,"objectID":"cb28a2aef9aaab8f1c392d10495a6153","permalink":"https://chechiachang.github.io/post/kubernetes-container-runtime-interface/","publishdate":"2018-10-06T12:07:00+08:00","relpermalink":"/post/kubernetes-container-runtime-interface/","section":"post","summary":"Outline  CRI-O Open Container Initiative (OCI) Container Runtime Interface (CRI) Kubernetes on CRI-O  Trend  OCI established in June 2015\n Kubernetes 1.3 introduced rktnetes\n Kubernetes 1.5 introduced CRI\n Pre-CRI Docker integration was removed in Kubernetes 1.7\n CRI-O 1.0.x released to match Kubernetes 1.7\n Working kubelet to use CRI\n  What is CRI-O OCI-based implementation of Kubernetes Container Runtime Interface\nhttp://cri-o.io/\nOCI and CRI Open Container Inititive - A industrial standard for container - OCI established in June 2015 by Docker and other leaders in the container industry","tags":["kubernetes","container","docker","cri"],"title":"Kubernetes Container Runtime Interface","type":"post"}]