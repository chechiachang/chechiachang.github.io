<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>service-mesh on Che-Chia Chang</title>
    <link>https://chechiachang.github.io/tags/service-mesh/</link>
    <description>Recent content in service-mesh on Che-Chia Chang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>chechiachang &amp;copy; 2016</copyright>
    <lastBuildDate>Wed, 15 May 2019 12:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://chechiachang.github.io/tags/service-mesh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Service Mesh for Microservices on Kubernetes</title>
      <link>https://chechiachang.github.io/talk/service-mesh-for-microservices-on-kubernetes/</link>
      <pubDate>Wed, 15 May 2019 12:00:00 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/talk/service-mesh-for-microservices-on-kubernetes/</guid>
      <description>Outlines 傳統的 Monolith被分解為分散的微服務，以取得更高的效能與更彈性的管理。當眾多的為服務同時運作，產生複雜的依賴與交流，網路層不再只是有『有通就好』，而是需要精細且彈性的流量管理與監控，來提供穩定的效能。本次主題將基於 Kubernetes 平台上的 Istio ，探討 Service Mesh 的概念與相關應用。
 何為 Service Mesh ？為何需要 Service Mesh ？ Service Mesh 基本概念 如何Service-to-Service的網路層管理監控 導入 Istio 到 Kubernetes  目標聽眾  微運大量微服務，希望導入Service Mesh 的Operator 想了解微服務生態中竄紅的 Service Mesh  收穫  了解為服務的優勢與Cloud Native應用發展趨勢 了解 Service Mesh 與 Istio 觀念 能使用 Istio 於 Kubernetes，進行服務網路的管理。  你有聽過 Microservice / Istio有聽過嗎？ 今天來介紹一款好藥：Istio。如果你有以下問題：
 維運大量(成千上百)微服務 需要服務對服務的流量控制，監控，管理  談 Service Mesh 之前，不免的要先談一下 Microservice，這個目前好像很夯的一個技術名詞。
如果手上有一個 App，會希望依照 Monolith 的架構，或是 Microservices？ Microservices 聽起來又新又潮。相對於 Monolith有許多明顯的好處：</description>
    </item>
    
    <item>
      <title>Istio 三分鐘就入坑 佈署篇</title>
      <link>https://chechiachang.github.io/post/service-mesh-for-microservice-on-kubernetes/</link>
      <pubDate>Mon, 06 May 2019 18:12:15 +0800</pubDate>
      
      <guid>https://chechiachang.github.io/post/service-mesh-for-microservice-on-kubernetes/</guid>
      <description>Create GKE gcloud beta container --project &amp;quot;istio-playground-239810&amp;quot; clusters create &amp;quot;istio-playground&amp;quot; \ --zone &amp;quot;asia-east1-b&amp;quot; \ --username &amp;quot;admin&amp;quot; \ --cluster-version &amp;quot;1.11.8-gke.6&amp;quot; \ --machine-type &amp;quot;n1-standard-2&amp;quot; \ --image-type &amp;quot;COS&amp;quot; \ --disk-type &amp;quot;pd-standard&amp;quot; \ --disk-size &amp;quot;100&amp;quot; \ --preemptible \ --num-nodes &amp;quot;1&amp;quot; \ --enable-cloud-logging \ --enable-cloud-monitoring \ --no-enable-ip-alias \ --addons HorizontalPodAutoscaling,HttpLoadBalancing,KubernetesDashboard,Istio \ --istio-config auth=MTLS_PERMISSIVE \ --no-enable-autoupgrade \ --enable-autorepair  Take a Peek $ kubectl get namespaces NAME STATUS AGE default Active 2m istio-system Active 1m kube-public Active 2m kube-system Active 2m $ kubectl get po -n istio-system NAME READY STATUS RESTARTS AGE istio-citadel-7f6f77cd7b-nxfbf 1/1 Running 0 3m istio-cleanup-secrets-h454m 0/1 Completed 0 3m istio-egressgateway-7c56db84cc-nlrwq 1/1 Running 0 3m istio-galley-6c747bdb4f-45jrp 1/1 Running 0 3m istio-ingressgateway-6ff68cf95d-tlkq4 1/1 Running 0 3m istio-pilot-8ff66f8c4-q9chz 2/2 Running 0 3m istio-policy-69b78b7d6-c8pld 2/2 Running 0 3m istio-sidecar-injector-558996c897-hr6q4 1/1 Running 0 3m istio-telemetry-f96459fb-5cbpg 2/2 Running 0 3m promsd-ff878d44b-hv8nh 2/2 Running 1 3m  Deploy app kubectl label namespace default istio-injection=enabled  Bookinfo Application</description>
    </item>
    
  </channel>
</rss>